{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Mypy_boto3_builder Index Auto-generated documentation index. A full list of Mypy_boto3_builder project modules. Examples Dynamodb Example Ec2 Example Emr Example Iam Example S3 Example Secretsmanager Example Sqs Example Mypy Boto3 Builder Module Cli Parser Constants Enums ServiceModuleName Generators AioBoto3Generator AioBotocoreGenerator BaseGenerator Boto3Generator Import Helpers ImportRecord ImportString InternalImportRecord JinjaManager Logger Main Package Data Parsers Aiobotocore Stubs Package Boto3 Stubs Package Client Docstring Parser ArgSpecParser DocstringParser SyntaxGrammar TypeDocGrammar TypeDocLine TypeValue Fake Service Package Helpers Master Package Parse Attributes Parse Collections Parse Identifiers Parse References Parse Resource Service Package Service Resource ShapeParser Types Aioboto3 Package Postprocessors Aiobotocore Base Botocore ServiceName Structures AioBotocoreStubsPackage Argument Attribute Boto3StubsPackage ClassRecord Client Collection Function MasterPackage Method Package Paginator Resource ServicePackage ServiceResource TypesAioBoto3Package Waiter Stubs Static Type Annotations ExternalImport FakeAnnotation InternalImport RemoveArgument Type TypeAnnotation TypeClass TypeConstant TypeLiteral TypeSubscript TypeTypedDict Type Maps Docstring Type Map Literal Type Map Method Argument Map Method Type Map Shape Type Map Syntax Type Map Typed Dicts Utils Boto3 Utils BotocoreChangelog Markdown NicePath PyPIManager Strings TypedDictSorter Version Writers Aioboto3 Processors Aiobotocore Processors PackageWriter Processors Utils Types Boto3 Types Botocore","title":"Mypy_boto3_builder Index"},{"location":"#mypy_boto3_builder-index","text":"Auto-generated documentation index. A full list of Mypy_boto3_builder project modules. Examples Dynamodb Example Ec2 Example Emr Example Iam Example S3 Example Secretsmanager Example Sqs Example Mypy Boto3 Builder Module Cli Parser Constants Enums ServiceModuleName Generators AioBoto3Generator AioBotocoreGenerator BaseGenerator Boto3Generator Import Helpers ImportRecord ImportString InternalImportRecord JinjaManager Logger Main Package Data Parsers Aiobotocore Stubs Package Boto3 Stubs Package Client Docstring Parser ArgSpecParser DocstringParser SyntaxGrammar TypeDocGrammar TypeDocLine TypeValue Fake Service Package Helpers Master Package Parse Attributes Parse Collections Parse Identifiers Parse References Parse Resource Service Package Service Resource ShapeParser Types Aioboto3 Package Postprocessors Aiobotocore Base Botocore ServiceName Structures AioBotocoreStubsPackage Argument Attribute Boto3StubsPackage ClassRecord Client Collection Function MasterPackage Method Package Paginator Resource ServicePackage ServiceResource TypesAioBoto3Package Waiter Stubs Static Type Annotations ExternalImport FakeAnnotation InternalImport RemoveArgument Type TypeAnnotation TypeClass TypeConstant TypeLiteral TypeSubscript TypeTypedDict Type Maps Docstring Type Map Literal Type Map Method Argument Map Method Type Map Shape Type Map Syntax Type Map Typed Dicts Utils Boto3 Utils BotocoreChangelog Markdown NicePath PyPIManager Strings TypedDictSorter Version Writers Aioboto3 Processors Aiobotocore Processors PackageWriter Processors Utils Types Boto3 Types Botocore","title":"Mypy_boto3_builder Index"},{"location":"examples/","text":"Examples Mypy_boto3_builder Index / Examples Auto-generated documentation for examples module. Modules Dynamodb Example Ec2 Example Emr Example Iam Example S3 Example Secretsmanager Example Sqs Example","title":"Examples"},{"location":"examples/#examples","text":"Mypy_boto3_builder Index / Examples Auto-generated documentation for examples module.","title":"Examples"},{"location":"examples/#modules","text":"Dynamodb Example Ec2 Example Emr Example Iam Example S3 Example Secretsmanager Example Sqs Example","title":"Modules"},{"location":"examples/dynamodb_example/","text":"Dynamodb Example Mypy_boto3_builder Index / Examples / Dynamodb Example Auto-generated documentation for examples.dynamodb_example module. dynamodb_client_example Show source in dynamodb_example.py:9 Signature def dynamodb_client_example () -> None : ... main Show source in dynamodb_example.py:39 Signature def main () -> None : ...","title":"Dynamodb Example"},{"location":"examples/dynamodb_example/#dynamodb-example","text":"Mypy_boto3_builder Index / Examples / Dynamodb Example Auto-generated documentation for examples.dynamodb_example module.","title":"Dynamodb Example"},{"location":"examples/dynamodb_example/#dynamodb_client_example","text":"Show source in dynamodb_example.py:9","title":"dynamodb_client_example"},{"location":"examples/dynamodb_example/#signature","text":"def dynamodb_client_example () -> None : ...","title":"Signature"},{"location":"examples/dynamodb_example/#main","text":"Show source in dynamodb_example.py:39","title":"main"},{"location":"examples/dynamodb_example/#signature_1","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/ec2_example/","text":"Ec2 Example Mypy_boto3_builder Index / Examples / Ec2 Example Auto-generated documentation for examples.ec2_example module. ec2_client_example Show source in ec2_example.py:28 Signature def ec2_client_example () -> None : ... ec2_resource_example Show source in ec2_example.py:7 Signature def ec2_resource_example () -> None : ... main Show source in ec2_example.py:37 Signature def main () -> None : ...","title":"Ec2 Example"},{"location":"examples/ec2_example/#ec2-example","text":"Mypy_boto3_builder Index / Examples / Ec2 Example Auto-generated documentation for examples.ec2_example module.","title":"Ec2 Example"},{"location":"examples/ec2_example/#ec2_client_example","text":"Show source in ec2_example.py:28","title":"ec2_client_example"},{"location":"examples/ec2_example/#signature","text":"def ec2_client_example () -> None : ...","title":"Signature"},{"location":"examples/ec2_example/#ec2_resource_example","text":"Show source in ec2_example.py:7","title":"ec2_resource_example"},{"location":"examples/ec2_example/#signature_1","text":"def ec2_resource_example () -> None : ...","title":"Signature"},{"location":"examples/ec2_example/#main","text":"Show source in ec2_example.py:37","title":"main"},{"location":"examples/ec2_example/#signature_2","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/emr_example/","text":"Emr Example Mypy_boto3_builder Index / Examples / Emr Example Auto-generated documentation for examples.emr_example module. emr_client_example Show source in emr_example.py:6 Signature def emr_client_example () -> None : ... main Show source in emr_example.py:19 Signature def main () -> None : ...","title":"Emr Example"},{"location":"examples/emr_example/#emr-example","text":"Mypy_boto3_builder Index / Examples / Emr Example Auto-generated documentation for examples.emr_example module.","title":"Emr Example"},{"location":"examples/emr_example/#emr_client_example","text":"Show source in emr_example.py:6","title":"emr_client_example"},{"location":"examples/emr_example/#signature","text":"def emr_client_example () -> None : ...","title":"Signature"},{"location":"examples/emr_example/#main","text":"Show source in emr_example.py:19","title":"main"},{"location":"examples/emr_example/#signature_1","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/iam_example/","text":"Iam Example Mypy_boto3_builder Index / Examples / Iam Example Auto-generated documentation for examples.iam_example module. iam_client_example Show source in iam_example.py:6 Signature def iam_client_example () -> None : ... iam_resource_example Show source in iam_example.py:18 Signature def iam_resource_example () -> None : ... main Show source in iam_example.py:24 Signature def main () -> None : ...","title":"Iam Example"},{"location":"examples/iam_example/#iam-example","text":"Mypy_boto3_builder Index / Examples / Iam Example Auto-generated documentation for examples.iam_example module.","title":"Iam Example"},{"location":"examples/iam_example/#iam_client_example","text":"Show source in iam_example.py:6","title":"iam_client_example"},{"location":"examples/iam_example/#signature","text":"def iam_client_example () -> None : ...","title":"Signature"},{"location":"examples/iam_example/#iam_resource_example","text":"Show source in iam_example.py:18","title":"iam_resource_example"},{"location":"examples/iam_example/#signature_1","text":"def iam_resource_example () -> None : ...","title":"Signature"},{"location":"examples/iam_example/#main","text":"Show source in iam_example.py:24","title":"main"},{"location":"examples/iam_example/#signature_2","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/s3_example/","text":"S3 Example Mypy_boto3_builder Index / Examples / S3 Example Auto-generated documentation for examples.s3_example module. main Show source in s3_example.py:86 Signature def main () -> None : ... s3_client_example Show source in s3_example.py:44 Signature def s3_client_example () -> None : ... s3_resource_example Show source in s3_example.py:9 Signature def s3_resource_example () -> None : ...","title":"S3 Example"},{"location":"examples/s3_example/#s3-example","text":"Mypy_boto3_builder Index / Examples / S3 Example Auto-generated documentation for examples.s3_example module.","title":"S3 Example"},{"location":"examples/s3_example/#main","text":"Show source in s3_example.py:86","title":"main"},{"location":"examples/s3_example/#signature","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/s3_example/#s3_client_example","text":"Show source in s3_example.py:44","title":"s3_client_example"},{"location":"examples/s3_example/#signature_1","text":"def s3_client_example () -> None : ...","title":"Signature"},{"location":"examples/s3_example/#s3_resource_example","text":"Show source in s3_example.py:9","title":"s3_resource_example"},{"location":"examples/s3_example/#signature_2","text":"def s3_resource_example () -> None : ...","title":"Signature"},{"location":"examples/secretsmanager_example/","text":"Secretsmanager Example Mypy_boto3_builder Index / Examples / Secretsmanager Example Auto-generated documentation for examples.secretsmanager_example module. main Show source in secretsmanager_example.py:12 Signature def main () -> None : ... secretsmanager_client_example Show source in secretsmanager_example.py:6 Signature def secretsmanager_client_example () -> None : ...","title":"Secretsmanager Example"},{"location":"examples/secretsmanager_example/#secretsmanager-example","text":"Mypy_boto3_builder Index / Examples / Secretsmanager Example Auto-generated documentation for examples.secretsmanager_example module.","title":"Secretsmanager Example"},{"location":"examples/secretsmanager_example/#main","text":"Show source in secretsmanager_example.py:12","title":"main"},{"location":"examples/secretsmanager_example/#signature","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/secretsmanager_example/#secretsmanager_client_example","text":"Show source in secretsmanager_example.py:6","title":"secretsmanager_client_example"},{"location":"examples/secretsmanager_example/#signature_1","text":"def secretsmanager_client_example () -> None : ...","title":"Signature"},{"location":"examples/sqs_example/","text":"Sqs Example Mypy_boto3_builder Index / Examples / Sqs Example Auto-generated documentation for examples.sqs_example module. main Show source in sqs_example.py:15 Signature def main () -> None : ... sqs_resource_example Show source in sqs_example.py:6 Signature def sqs_resource_example () -> None : ...","title":"Sqs Example"},{"location":"examples/sqs_example/#sqs-example","text":"Mypy_boto3_builder Index / Examples / Sqs Example Auto-generated documentation for examples.sqs_example module.","title":"Sqs Example"},{"location":"examples/sqs_example/#main","text":"Show source in sqs_example.py:15","title":"main"},{"location":"examples/sqs_example/#signature","text":"def main () -> None : ...","title":"Signature"},{"location":"examples/sqs_example/#sqs_resource_example","text":"Show source in sqs_example.py:6","title":"sqs_resource_example"},{"location":"examples/sqs_example/#signature_1","text":"def sqs_resource_example () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/","text":"Mypy Boto3 Builder Mypy_boto3_builder Index / Mypy Boto3 Builder Auto-generated documentation for mypy_boto3_builder module. Modules Module Cli Parser Constants Enums Generators Import Helpers JinjaManager Logger Main Package Data Parsers Postprocessors ServiceName Structures Stubs Static Type Annotations Type Maps Utils Writers","title":"Mypy Boto3 Builder"},{"location":"mypy_boto3_builder/#mypy-boto3-builder","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder Auto-generated documentation for mypy_boto3_builder module.","title":"Mypy Boto3 Builder"},{"location":"mypy_boto3_builder/#modules","text":"Module Cli Parser Constants Enums Generators Import Helpers JinjaManager Logger Main Package Data Parsers Postprocessors ServiceName Structures Stubs Static Type Annotations Type Maps Utils Writers","title":"Modules"},{"location":"mypy_boto3_builder/cli_parser/","text":"Cli Parser Mypy_boto3_builder Index / Mypy Boto3 Builder / Cli Parser Auto-generated documentation for mypy_boto3_builder.cli_parser module. Namespace Show source in cli_parser.py:30 CLI arguments namespace. Signature class Namespace : ... get_absolute_path Show source in cli_parser.py:16 Get absolute path from a string. Arguments path - String containing path. Returns Absolute path. Signature def get_absolute_path ( path : str ) -> Path : ... parse_args Show source in cli_parser.py:47 Main CLI parser for builder. Returns Argument parser. Signature def parse_args ( args : Sequence [ str ]) -> Namespace : ... See also Namespace","title":"Cli Parser"},{"location":"mypy_boto3_builder/cli_parser/#cli-parser","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Cli Parser Auto-generated documentation for mypy_boto3_builder.cli_parser module.","title":"Cli Parser"},{"location":"mypy_boto3_builder/cli_parser/#namespace","text":"Show source in cli_parser.py:30 CLI arguments namespace.","title":"Namespace"},{"location":"mypy_boto3_builder/cli_parser/#signature","text":"class Namespace : ...","title":"Signature"},{"location":"mypy_boto3_builder/cli_parser/#get_absolute_path","text":"Show source in cli_parser.py:16 Get absolute path from a string.","title":"get_absolute_path"},{"location":"mypy_boto3_builder/cli_parser/#arguments","text":"path - String containing path.","title":"Arguments"},{"location":"mypy_boto3_builder/cli_parser/#returns","text":"Absolute path.","title":"Returns"},{"location":"mypy_boto3_builder/cli_parser/#signature_1","text":"def get_absolute_path ( path : str ) -> Path : ...","title":"Signature"},{"location":"mypy_boto3_builder/cli_parser/#parse_args","text":"Show source in cli_parser.py:47 Main CLI parser for builder.","title":"parse_args"},{"location":"mypy_boto3_builder/cli_parser/#returns_1","text":"Argument parser.","title":"Returns"},{"location":"mypy_boto3_builder/cli_parser/#signature_2","text":"def parse_args ( args : Sequence [ str ]) -> Namespace : ...","title":"Signature"},{"location":"mypy_boto3_builder/cli_parser/#see-also","text":"Namespace","title":"See also"},{"location":"mypy_boto3_builder/constants/","text":"Constants Mypy_boto3_builder Index / Mypy Boto3 Builder / Constants Auto-generated documentation for mypy_boto3_builder.constants module. Attributes DUMMY_REGION - Random region to initialize services: 'us-west-2' TEMPLATES_PATH - Jinja2 templates for boto3-stubs: Path(__file__).parent / 'templates' BOTO3_STUBS_STATIC_PATH - Static *.pyi files for boto3-stubs: Path(__file__).parent / 'stubs_static' / 'boto3' AIOBOTOCORE_STUBS_STATIC_PATH - Static *.pyi files for types-aiobotocore: Path(__file__).parent / 'stubs_static' / 'aiobotocore' AIOBOTO3_STUBS_STATIC_PATH - Static *.pyi files for types-aioboto3: Path(__file__).parent / 'stubs_static' / 'aioboto3' LINE_LENGTH - Max line length for boto3 docs: 100 BUILDER_REPO_URL - mypy-boto3-builder GitHub link: 'https://github.com/youtype/mypy_boto3_builder' LOGGER_NAME - Main logger name: 'mypy_boto3_builder' PROG_NAME - builder CLI entrypoint name: 'mypy_boto3_builder' PACKAGE_NAME - builder package name: 'mypy-boto3-builder' Product Show source in constants.py:59 Product choice for CLI. Signature class Product ( Enum ): ... Product().get_library Show source in constants.py:76 Get library name. Signature def get_library ( self ) -> ProductLibrary : ... See also ProductLibrary Product().get_type Show source in constants.py:85 Get product type. Signature def get_type ( self ) -> ProductType : ... See also ProductType ProductLibrary Show source in constants.py:39 Product library for Generator. Signature class ProductLibrary ( Enum ): ... ProductType Show source in constants.py:49 Product type for Generator. Signature class ProductType ( Enum ): ...","title":"Constants"},{"location":"mypy_boto3_builder/constants/#constants","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Constants Auto-generated documentation for mypy_boto3_builder.constants module.","title":"Constants"},{"location":"mypy_boto3_builder/constants/#attributes","text":"DUMMY_REGION - Random region to initialize services: 'us-west-2' TEMPLATES_PATH - Jinja2 templates for boto3-stubs: Path(__file__).parent / 'templates' BOTO3_STUBS_STATIC_PATH - Static *.pyi files for boto3-stubs: Path(__file__).parent / 'stubs_static' / 'boto3' AIOBOTOCORE_STUBS_STATIC_PATH - Static *.pyi files for types-aiobotocore: Path(__file__).parent / 'stubs_static' / 'aiobotocore' AIOBOTO3_STUBS_STATIC_PATH - Static *.pyi files for types-aioboto3: Path(__file__).parent / 'stubs_static' / 'aioboto3' LINE_LENGTH - Max line length for boto3 docs: 100 BUILDER_REPO_URL - mypy-boto3-builder GitHub link: 'https://github.com/youtype/mypy_boto3_builder' LOGGER_NAME - Main logger name: 'mypy_boto3_builder' PROG_NAME - builder CLI entrypoint name: 'mypy_boto3_builder' PACKAGE_NAME - builder package name: 'mypy-boto3-builder'","title":"Attributes"},{"location":"mypy_boto3_builder/constants/#product","text":"Show source in constants.py:59 Product choice for CLI.","title":"Product"},{"location":"mypy_boto3_builder/constants/#signature","text":"class Product ( Enum ): ...","title":"Signature"},{"location":"mypy_boto3_builder/constants/#productget_library","text":"Show source in constants.py:76 Get library name.","title":"Product().get_library"},{"location":"mypy_boto3_builder/constants/#signature_1","text":"def get_library ( self ) -> ProductLibrary : ...","title":"Signature"},{"location":"mypy_boto3_builder/constants/#see-also","text":"ProductLibrary","title":"See also"},{"location":"mypy_boto3_builder/constants/#productget_type","text":"Show source in constants.py:85 Get product type.","title":"Product().get_type"},{"location":"mypy_boto3_builder/constants/#signature_2","text":"def get_type ( self ) -> ProductType : ...","title":"Signature"},{"location":"mypy_boto3_builder/constants/#see-also_1","text":"ProductType","title":"See also"},{"location":"mypy_boto3_builder/constants/#productlibrary","text":"Show source in constants.py:39 Product library for Generator.","title":"ProductLibrary"},{"location":"mypy_boto3_builder/constants/#signature_3","text":"class ProductLibrary ( Enum ): ...","title":"Signature"},{"location":"mypy_boto3_builder/constants/#producttype","text":"Show source in constants.py:49 Product type for Generator.","title":"ProductType"},{"location":"mypy_boto3_builder/constants/#signature_4","text":"class ProductType ( Enum ): ...","title":"Signature"},{"location":"mypy_boto3_builder/jinja_manager/","text":"JinjaManager Mypy_boto3_builder Index / Mypy Boto3 Builder / JinjaManager Auto-generated documentation for mypy_boto3_builder.jinja_manager module. JinjaManager Show source in jinja_manager.py:11 Jinja2 Environment manager. Signature class JinjaManager : ... JinjaManager.escape_md Show source in jinja_manager.py:31 Escape underscore characters. Signature @staticmethod def escape_md ( value : str ) -> str : ... JinjaManager.get_environment Show source in jinja_manager.py:38 Get jinja2.Environment . Signature @classmethod def get_environment ( cls ) -> jinja2 . Environment : ... JinjaManager.update_globals Show source in jinja_manager.py:21 Update global variables in jinja2.Environment . Arguments kwargs - Globals to set. Signature @classmethod def update_globals ( cls , ** kwargs : object ) -> None : ...","title":"JinjaManager"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanager","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / JinjaManager Auto-generated documentation for mypy_boto3_builder.jinja_manager module.","title":"JinjaManager"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanager_1","text":"Show source in jinja_manager.py:11 Jinja2 Environment manager.","title":"JinjaManager"},{"location":"mypy_boto3_builder/jinja_manager/#signature","text":"class JinjaManager : ...","title":"Signature"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerescape_md","text":"Show source in jinja_manager.py:31 Escape underscore characters.","title":"JinjaManager.escape_md"},{"location":"mypy_boto3_builder/jinja_manager/#signature_1","text":"@staticmethod def escape_md ( value : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerget_environment","text":"Show source in jinja_manager.py:38 Get jinja2.Environment .","title":"JinjaManager.get_environment"},{"location":"mypy_boto3_builder/jinja_manager/#signature_2","text":"@classmethod def get_environment ( cls ) -> jinja2 . Environment : ...","title":"Signature"},{"location":"mypy_boto3_builder/jinja_manager/#jinjamanagerupdate_globals","text":"Show source in jinja_manager.py:21 Update global variables in jinja2.Environment .","title":"JinjaManager.update_globals"},{"location":"mypy_boto3_builder/jinja_manager/#arguments","text":"kwargs - Globals to set.","title":"Arguments"},{"location":"mypy_boto3_builder/jinja_manager/#signature_3","text":"@classmethod def update_globals ( cls , ** kwargs : object ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/logger/","text":"Logger Mypy_boto3_builder Index / Mypy Boto3 Builder / Logger Auto-generated documentation for mypy_boto3_builder.logger module. get_logger Show source in logger.py:11 Get Logger instance. Arguments verbose - Set log level to DEBUG. panic - Raise RuntimeError on warning. Returns Overriden Logger. Signature def get_logger ( level : int = 0 ) -> logging . Logger : ...","title":"Logger"},{"location":"mypy_boto3_builder/logger/#logger","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Logger Auto-generated documentation for mypy_boto3_builder.logger module.","title":"Logger"},{"location":"mypy_boto3_builder/logger/#get_logger","text":"Show source in logger.py:11 Get Logger instance.","title":"get_logger"},{"location":"mypy_boto3_builder/logger/#arguments","text":"verbose - Set log level to DEBUG. panic - Raise RuntimeError on warning.","title":"Arguments"},{"location":"mypy_boto3_builder/logger/#returns","text":"Overriden Logger.","title":"Returns"},{"location":"mypy_boto3_builder/logger/#signature","text":"def get_logger ( level : int = 0 ) -> logging . Logger : ...","title":"Signature"},{"location":"mypy_boto3_builder/main/","text":"Main Mypy_boto3_builder Index / Mypy Boto3 Builder / Main Auto-generated documentation for mypy_boto3_builder.main module. generate_product Show source in main.py:103 Generate a selected product. Arguments product - Product to generate args - CLI namespace session - Boto3 session service_names - Selected service names master_service_names - Service names included in master Signature def generate_product ( product : Product , args : Namespace , session : Session , service_names : Sequence [ ServiceName ], master_service_names : Sequence [ ServiceName ], ) -> None : ... See also Namespace Product ServiceName get_available_service_names Show source in main.py:64 Get a list of boto3 supported service names. Arguments session - Boto3 session Returns A list of supported services. Signature def get_available_service_names ( session : Session ) -> list [ ServiceName ]: ... See also ServiceName get_generator_cls Show source in main.py:86 Get Generator class for a product. Raises ValueError - If product is not supported. Signature def get_generator_cls ( product : Product ) -> type [ BaseGenerator ]: ... See also BaseGenerator Product get_selected_service_names Show source in main.py:24 Get a list of selected service names. Supports updated to select only services updated in currect boto3 release. Supports all to select all available service names. Arguments selected - Selected service names as strings. available - All ServiceNames available in current boto3 release. Returns A list of selected ServiceNames. Signature def get_selected_service_names ( selected : Iterable [ str ], available : Iterable [ ServiceName ] ) -> list [ ServiceName ]: ... See also ServiceName main Show source in main.py:134 Main entrypoint for builder. Signature def main () -> None : ...","title":"Main"},{"location":"mypy_boto3_builder/main/#main","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Main Auto-generated documentation for mypy_boto3_builder.main module.","title":"Main"},{"location":"mypy_boto3_builder/main/#generate_product","text":"Show source in main.py:103 Generate a selected product.","title":"generate_product"},{"location":"mypy_boto3_builder/main/#arguments","text":"product - Product to generate args - CLI namespace session - Boto3 session service_names - Selected service names master_service_names - Service names included in master","title":"Arguments"},{"location":"mypy_boto3_builder/main/#signature","text":"def generate_product ( product : Product , args : Namespace , session : Session , service_names : Sequence [ ServiceName ], master_service_names : Sequence [ ServiceName ], ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/main/#see-also","text":"Namespace Product ServiceName","title":"See also"},{"location":"mypy_boto3_builder/main/#get_available_service_names","text":"Show source in main.py:64 Get a list of boto3 supported service names.","title":"get_available_service_names"},{"location":"mypy_boto3_builder/main/#arguments_1","text":"session - Boto3 session","title":"Arguments"},{"location":"mypy_boto3_builder/main/#returns","text":"A list of supported services.","title":"Returns"},{"location":"mypy_boto3_builder/main/#signature_1","text":"def get_available_service_names ( session : Session ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/main/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/main/#get_generator_cls","text":"Show source in main.py:86 Get Generator class for a product.","title":"get_generator_cls"},{"location":"mypy_boto3_builder/main/#raises","text":"ValueError - If product is not supported.","title":"Raises"},{"location":"mypy_boto3_builder/main/#signature_2","text":"def get_generator_cls ( product : Product ) -> type [ BaseGenerator ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/main/#see-also_2","text":"BaseGenerator Product","title":"See also"},{"location":"mypy_boto3_builder/main/#get_selected_service_names","text":"Show source in main.py:24 Get a list of selected service names. Supports updated to select only services updated in currect boto3 release. Supports all to select all available service names.","title":"get_selected_service_names"},{"location":"mypy_boto3_builder/main/#arguments_2","text":"selected - Selected service names as strings. available - All ServiceNames available in current boto3 release.","title":"Arguments"},{"location":"mypy_boto3_builder/main/#returns_1","text":"A list of selected ServiceNames.","title":"Returns"},{"location":"mypy_boto3_builder/main/#signature_3","text":"def get_selected_service_names ( selected : Iterable [ str ], available : Iterable [ ServiceName ] ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/main/#see-also_3","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/main/#main_1","text":"Show source in main.py:134 Main entrypoint for builder.","title":"main"},{"location":"mypy_boto3_builder/main/#signature_4","text":"def main () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/module/","text":"Module Mypy_boto3_builder Index / Mypy Boto3 Builder / Module Auto-generated documentation for mypy_boto3_builder. main module.","title":"Module"},{"location":"mypy_boto3_builder/module/#module","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Module Auto-generated documentation for mypy_boto3_builder. main module.","title":"Module"},{"location":"mypy_boto3_builder/package_data/","text":"Package Data Mypy_boto3_builder Index / Mypy Boto3 Builder / Package Data Auto-generated documentation for mypy_boto3_builder.package_data module. BasePackageData Show source in package_data.py:13 Generic package data. Signature class BasePackageData : ... BasePackageData.get_library_version Show source in package_data.py:42 Get underlying library version. Signature @staticmethod def get_library_version () -> str : ... BasePackageData.get_service_package_name Show source in package_data.py:28 Get service package name. Signature @classmethod def get_service_package_name ( cls , service_name : ServiceName ) -> str : ... See also ServiceName BasePackageData.get_service_pypi_link Show source in package_data.py:49 Get link to PyPI. Signature @classmethod def get_service_pypi_link ( cls , service_name : ServiceName ) -> str : ... See also ServiceName BasePackageData.get_service_pypi_name Show source in package_data.py:35 Get service package PyPI name. Signature @classmethod def get_service_pypi_name ( cls , service_name : ServiceName ) -> str : ... See also ServiceName Boto3StubsLitePackageData Show source in package_data.py:101 boto3-stubs-lite package data. Signature class Boto3StubsLitePackageData ( Boto3StubsPackageData ): ... See also Boto3StubsPackageData Boto3StubsPackageData Show source in package_data.py:87 boto3-stubs package data. Signature class Boto3StubsPackageData ( BasePackageData ): ... See also BasePackageData MypyBoto3PackageData Show source in package_data.py:110 mypy-boto3 package data. Signature class MypyBoto3PackageData ( BasePackageData ): ... See also BasePackageData TypesAioBoto3LitePackageData Show source in package_data.py:141 types-aioboto3-lite package data. Signature class TypesAioBoto3LitePackageData ( TypesAioBoto3PackageData ): ... See also TypesAioBoto3PackageData TypesAioBoto3PackageData Show source in package_data.py:120 types-aioboto3 package data. Signature class TypesAioBoto3PackageData ( BasePackageData ): ... See also BasePackageData TypesAioBoto3PackageData.get_library_version Show source in package_data.py:133 Get underlying library version. Signature @staticmethod def get_library_version () -> str : ... TypesAioBotocoreLitePackageData Show source in package_data.py:78 types-aiobotocore-lite package data. Signature class TypesAioBotocoreLitePackageData ( TypesAioBotocorePackageData ): ... See also TypesAioBotocorePackageData TypesAioBotocorePackageData Show source in package_data.py:57 types-aiobotocore package data. Signature class TypesAioBotocorePackageData ( BasePackageData ): ... See also BasePackageData TypesAioBotocorePackageData.get_library_version Show source in package_data.py:70 Get underlying library version. Signature @staticmethod def get_library_version () -> str : ...","title":"Package Data"},{"location":"mypy_boto3_builder/package_data/#package-data","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Package Data Auto-generated documentation for mypy_boto3_builder.package_data module.","title":"Package Data"},{"location":"mypy_boto3_builder/package_data/#basepackagedata","text":"Show source in package_data.py:13 Generic package data.","title":"BasePackageData"},{"location":"mypy_boto3_builder/package_data/#signature","text":"class BasePackageData : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_library_version","text":"Show source in package_data.py:42 Get underlying library version.","title":"BasePackageData.get_library_version"},{"location":"mypy_boto3_builder/package_data/#signature_1","text":"@staticmethod def get_library_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_package_name","text":"Show source in package_data.py:28 Get service package name.","title":"BasePackageData.get_service_package_name"},{"location":"mypy_boto3_builder/package_data/#signature_2","text":"@classmethod def get_service_package_name ( cls , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_pypi_link","text":"Show source in package_data.py:49 Get link to PyPI.","title":"BasePackageData.get_service_pypi_link"},{"location":"mypy_boto3_builder/package_data/#signature_3","text":"@classmethod def get_service_pypi_link ( cls , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/package_data/#basepackagedataget_service_pypi_name","text":"Show source in package_data.py:35 Get service package PyPI name.","title":"BasePackageData.get_service_pypi_name"},{"location":"mypy_boto3_builder/package_data/#signature_4","text":"@classmethod def get_service_pypi_name ( cls , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_2","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/package_data/#boto3stubslitepackagedata","text":"Show source in package_data.py:101 boto3-stubs-lite package data.","title":"Boto3StubsLitePackageData"},{"location":"mypy_boto3_builder/package_data/#signature_5","text":"class Boto3StubsLitePackageData ( Boto3StubsPackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_3","text":"Boto3StubsPackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#boto3stubspackagedata","text":"Show source in package_data.py:87 boto3-stubs package data.","title":"Boto3StubsPackageData"},{"location":"mypy_boto3_builder/package_data/#signature_6","text":"class Boto3StubsPackageData ( BasePackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_4","text":"BasePackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#mypyboto3packagedata","text":"Show source in package_data.py:110 mypy-boto3 package data.","title":"MypyBoto3PackageData"},{"location":"mypy_boto3_builder/package_data/#signature_7","text":"class MypyBoto3PackageData ( BasePackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_5","text":"BasePackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3litepackagedata","text":"Show source in package_data.py:141 types-aioboto3-lite package data.","title":"TypesAioBoto3LitePackageData"},{"location":"mypy_boto3_builder/package_data/#signature_8","text":"class TypesAioBoto3LitePackageData ( TypesAioBoto3PackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_6","text":"TypesAioBoto3PackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3packagedata","text":"Show source in package_data.py:120 types-aioboto3 package data.","title":"TypesAioBoto3PackageData"},{"location":"mypy_boto3_builder/package_data/#signature_9","text":"class TypesAioBoto3PackageData ( BasePackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_7","text":"BasePackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#typesaioboto3packagedataget_library_version","text":"Show source in package_data.py:133 Get underlying library version.","title":"TypesAioBoto3PackageData.get_library_version"},{"location":"mypy_boto3_builder/package_data/#signature_10","text":"@staticmethod def get_library_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorelitepackagedata","text":"Show source in package_data.py:78 types-aiobotocore-lite package data.","title":"TypesAioBotocoreLitePackageData"},{"location":"mypy_boto3_builder/package_data/#signature_11","text":"class TypesAioBotocoreLitePackageData ( TypesAioBotocorePackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_8","text":"TypesAioBotocorePackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorepackagedata","text":"Show source in package_data.py:57 types-aiobotocore package data.","title":"TypesAioBotocorePackageData"},{"location":"mypy_boto3_builder/package_data/#signature_12","text":"class TypesAioBotocorePackageData ( BasePackageData ): ...","title":"Signature"},{"location":"mypy_boto3_builder/package_data/#see-also_9","text":"BasePackageData","title":"See also"},{"location":"mypy_boto3_builder/package_data/#typesaiobotocorepackagedataget_library_version","text":"Show source in package_data.py:70 Get underlying library version.","title":"TypesAioBotocorePackageData.get_library_version"},{"location":"mypy_boto3_builder/package_data/#signature_13","text":"@staticmethod def get_library_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/","text":"ServiceName Mypy_boto3_builder Index / Mypy Boto3 Builder / ServiceName Auto-generated documentation for mypy_boto3_builder.service_name module. ServiceName Show source in service_name.py:14 Description for boto3 service. Signature class ServiceName : def __init__ ( self , name : str , class_name : str , override_boto3_name : str = \"\" ) -> None : ... ServiceName().boto3_doc_link Show source in service_name.py:98 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... ServiceName().boto3_name Show source in service_name.py:61 Boto3 package name. Signature @property def boto3_name ( self ) -> str : ... ServiceName().extras_name Show source in service_name.py:79 Extras name for subpackage installation. Signature @property def extras_name ( self ) -> str : ... ServiceName().get_boto3_doc_link Show source in service_name.py:108 Get link to boto3 docs with anchor. Arguments parts - Anchor parts Signature def get_boto3_doc_link ( self , * parts : str ) -> str : ... ServiceName.get_md_doc_link Show source in service_name.py:117 Get link to MD docs with anchor. Arguments file - HTML file name parts - Anchor parts Signature @staticmethod def get_md_doc_link ( file : Literal [ \"client\" , \"service_resource\" , \"waiters\" , \"paginators\" , \"type_defs\" , \"literals\" ], * parts : str ) -> str : ... ServiceName().import_name Show source in service_name.py:68 Safe mudule import name. Signature @property def import_name ( self ) -> str : ... ServiceName().is_conda_forge_available Show source in service_name.py:92 Whether service is available for conda-forge . Signature def is_conda_forge_available ( self ) -> bool : ... ServiceName().is_custom_resource Show source in service_name.py:142 Whether resource should use separte TypeDict namespace. Signature def is_custom_resource ( self , resource_name : str ) -> bool : ... ServiceName().is_essential Show source in service_name.py:86 Whether service is included to boto3-stubs[essential] . Signature def is_essential ( self ) -> bool : ... ServiceName().underscore_name Show source in service_name.py:54 Python-friendly service name. Signature @property def underscore_name ( self ) -> str : ... ServiceNameCatalog Show source in service_name.py:151 Finder for boto3 services by name. Signature class ServiceNameCatalog : ... ServiceNameCatalog.add Show source in service_name.py:191 Add new ServiceName to catalog or modify existing one. Returns New ServiceName or modified if it exists. Signature @classmethod def add ( cls , name : str , class_name : str ) -> ServiceName : ... See also ServiceName","title":"ServiceName"},{"location":"mypy_boto3_builder/service_name/#servicename","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / ServiceName Auto-generated documentation for mypy_boto3_builder.service_name module.","title":"ServiceName"},{"location":"mypy_boto3_builder/service_name/#servicename_1","text":"Show source in service_name.py:14 Description for boto3 service.","title":"ServiceName"},{"location":"mypy_boto3_builder/service_name/#signature","text":"class ServiceName : def __init__ ( self , name : str , class_name : str , override_boto3_name : str = \"\" ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameboto3_doc_link","text":"Show source in service_name.py:98 Link to boto3 docs.","title":"ServiceName().boto3_doc_link"},{"location":"mypy_boto3_builder/service_name/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameboto3_name","text":"Show source in service_name.py:61 Boto3 package name.","title":"ServiceName().boto3_name"},{"location":"mypy_boto3_builder/service_name/#signature_2","text":"@property def boto3_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameextras_name","text":"Show source in service_name.py:79 Extras name for subpackage installation.","title":"ServiceName().extras_name"},{"location":"mypy_boto3_builder/service_name/#signature_3","text":"@property def extras_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameget_boto3_doc_link","text":"Show source in service_name.py:108 Get link to boto3 docs with anchor.","title":"ServiceName().get_boto3_doc_link"},{"location":"mypy_boto3_builder/service_name/#arguments","text":"parts - Anchor parts","title":"Arguments"},{"location":"mypy_boto3_builder/service_name/#signature_4","text":"def get_boto3_doc_link ( self , * parts : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameget_md_doc_link","text":"Show source in service_name.py:117 Get link to MD docs with anchor.","title":"ServiceName.get_md_doc_link"},{"location":"mypy_boto3_builder/service_name/#arguments_1","text":"file - HTML file name parts - Anchor parts","title":"Arguments"},{"location":"mypy_boto3_builder/service_name/#signature_5","text":"@staticmethod def get_md_doc_link ( file : Literal [ \"client\" , \"service_resource\" , \"waiters\" , \"paginators\" , \"type_defs\" , \"literals\" ], * parts : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameimport_name","text":"Show source in service_name.py:68 Safe mudule import name.","title":"ServiceName().import_name"},{"location":"mypy_boto3_builder/service_name/#signature_6","text":"@property def import_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameis_conda_forge_available","text":"Show source in service_name.py:92 Whether service is available for conda-forge .","title":"ServiceName().is_conda_forge_available"},{"location":"mypy_boto3_builder/service_name/#signature_7","text":"def is_conda_forge_available ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameis_custom_resource","text":"Show source in service_name.py:142 Whether resource should use separte TypeDict namespace.","title":"ServiceName().is_custom_resource"},{"location":"mypy_boto3_builder/service_name/#signature_8","text":"def is_custom_resource ( self , resource_name : str ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameis_essential","text":"Show source in service_name.py:86 Whether service is included to boto3-stubs[essential] .","title":"ServiceName().is_essential"},{"location":"mypy_boto3_builder/service_name/#signature_9","text":"def is_essential ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenameunderscore_name","text":"Show source in service_name.py:54 Python-friendly service name.","title":"ServiceName().underscore_name"},{"location":"mypy_boto3_builder/service_name/#signature_10","text":"@property def underscore_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenamecatalog","text":"Show source in service_name.py:151 Finder for boto3 services by name.","title":"ServiceNameCatalog"},{"location":"mypy_boto3_builder/service_name/#signature_11","text":"class ServiceNameCatalog : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#servicenamecatalogadd","text":"Show source in service_name.py:191 Add new ServiceName to catalog or modify existing one.","title":"ServiceNameCatalog.add"},{"location":"mypy_boto3_builder/service_name/#returns","text":"New ServiceName or modified if it exists.","title":"Returns"},{"location":"mypy_boto3_builder/service_name/#signature_12","text":"@classmethod def add ( cls , name : str , class_name : str ) -> ServiceName : ...","title":"Signature"},{"location":"mypy_boto3_builder/service_name/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/enums/","text":"Enums Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums Auto-generated documentation for mypy_boto3_builder.enums module. Modules ServiceModuleName","title":"Enums"},{"location":"mypy_boto3_builder/enums/#enums","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums Auto-generated documentation for mypy_boto3_builder.enums module.","title":"Enums"},{"location":"mypy_boto3_builder/enums/#modules","text":"ServiceModuleName","title":"Modules"},{"location":"mypy_boto3_builder/enums/service_module_name/","text":"ServiceModuleName Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums / ServiceModuleName Auto-generated documentation for mypy_boto3_builder.enums.service_module_name module. ServiceModuleName Show source in service_module_name.py:7 Enum for service modules. Signature class ServiceModuleName ( enum . Enum ): ... ServiceModuleName().file_name Show source in service_module_name.py:26 Module file name. Signature @property def file_name ( self ) -> str : ... ServiceModuleName().stub_file_name Show source in service_module_name.py:19 Module file name. Signature @property def stub_file_name ( self ) -> str : ... ServiceModuleName().template_name Show source in service_module_name.py:33 Module template file name. Signature @property def template_name ( self ) -> str : ...","title":"ServiceModuleName"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulename","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Enums / ServiceModuleName Auto-generated documentation for mypy_boto3_builder.enums.service_module_name module.","title":"ServiceModuleName"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulename_1","text":"Show source in service_module_name.py:7 Enum for service modules.","title":"ServiceModuleName"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature","text":"class ServiceModuleName ( enum . Enum ): ...","title":"Signature"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenamefile_name","text":"Show source in service_module_name.py:26 Module file name.","title":"ServiceModuleName().file_name"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_1","text":"@property def file_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenamestub_file_name","text":"Show source in service_module_name.py:19 Module file name.","title":"ServiceModuleName().stub_file_name"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_2","text":"@property def stub_file_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/enums/service_module_name/#servicemodulenametemplate_name","text":"Show source in service_module_name.py:33 Module template file name.","title":"ServiceModuleName().template_name"},{"location":"mypy_boto3_builder/enums/service_module_name/#signature_3","text":"@property def template_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/","text":"Generators Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators Auto-generated documentation for mypy_boto3_builder.generators module. Modules AioBoto3Generator AioBotocoreGenerator BaseGenerator Boto3Generator","title":"Generators"},{"location":"mypy_boto3_builder/generators/#generators","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators Auto-generated documentation for mypy_boto3_builder.generators module.","title":"Generators"},{"location":"mypy_boto3_builder/generators/#modules","text":"AioBoto3Generator AioBotocoreGenerator BaseGenerator Boto3Generator","title":"Modules"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/","text":"AioBoto3Generator Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBoto3Generator Auto-generated documentation for mypy_boto3_builder.generators.aioboto3_generator module. AioBoto3Generator Show source in aioboto3_generator.py:17 AioBoto3 stubs generator. Signature class AioBoto3Generator ( BaseGenerator ): ... See also BaseGenerator AioBoto3Generator().generate_docs Show source in aioboto3_generator.py:74 Generate service and master docs. Signature def generate_docs ( self ) -> None : ... AioBoto3Generator().generate_service_stubs Show source in aioboto3_generator.py:98 Do nothing. Signature def generate_service_stubs ( self ) -> None : ... AioBoto3Generator().generate_stubs Show source in aioboto3_generator.py:37 Generate types-aioboto3 package. Signature def generate_stubs ( self ) -> None : ... AioBoto3Generator().get_library_version Show source in aioboto3_generator.py:25 Get underlying library version. Signature def get_library_version ( self ) -> str : ... AioBoto3Generator().get_postprocessor Show source in aioboto3_generator.py:31 Get postprocessor for service package. Signature def get_postprocessor ( self , service_package : ServicePackage ) -> AioBotocorePostprocessor : ... See also AioBotocorePostprocessor ServicePackage","title":"AioBoto3Generator"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generator","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBoto3Generator Auto-generated documentation for mypy_boto3_builder.generators.aioboto3_generator module.","title":"AioBoto3Generator"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generator_1","text":"Show source in aioboto3_generator.py:17 AioBoto3 stubs generator.","title":"AioBoto3Generator"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature","text":"class AioBoto3Generator ( BaseGenerator ): ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#see-also","text":"BaseGenerator","title":"See also"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_docs","text":"Show source in aioboto3_generator.py:74 Generate service and master docs.","title":"AioBoto3Generator().generate_docs"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_1","text":"def generate_docs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_service_stubs","text":"Show source in aioboto3_generator.py:98 Do nothing.","title":"AioBoto3Generator().generate_service_stubs"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_2","text":"def generate_service_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorgenerate_stubs","text":"Show source in aioboto3_generator.py:37 Generate types-aioboto3 package.","title":"AioBoto3Generator().generate_stubs"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_3","text":"def generate_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorget_library_version","text":"Show source in aioboto3_generator.py:25 Get underlying library version.","title":"AioBoto3Generator().get_library_version"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_4","text":"def get_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#aioboto3generatorget_postprocessor","text":"Show source in aioboto3_generator.py:31 Get postprocessor for service package.","title":"AioBoto3Generator().get_postprocessor"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#signature_5","text":"def get_postprocessor ( self , service_package : ServicePackage ) -> AioBotocorePostprocessor : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aioboto3_generator/#see-also_1","text":"AioBotocorePostprocessor ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/","text":"AioBotocoreGenerator Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBotocoreGenerator Auto-generated documentation for mypy_boto3_builder.generators.aiobotocore_generator module. AioBotocoreGenerator Show source in aiobotocore_generator.py:20 AioBotocore stubs/docs generator. Signature class AioBotocoreGenerator ( BaseGenerator ): ... See also BaseGenerator AioBotocoreGenerator().generate_docs Show source in aiobotocore_generator.py:77 Generate service and master docs. Signature def generate_docs ( self ) -> None : ... AioBotocoreGenerator().generate_stubs Show source in aiobotocore_generator.py:40 Generate aiobotocore-stubs package. Signature def generate_stubs ( self ) -> None : ... AioBotocoreGenerator().get_library_version Show source in aiobotocore_generator.py:28 Get underlying library version. Signature def get_library_version ( self ) -> str : ... AioBotocoreGenerator().get_postprocessor Show source in aiobotocore_generator.py:34 Get postprocessor for service package. Signature def get_postprocessor ( self , service_package : ServicePackage ) -> AioBotocorePostprocessor : ... See also AioBotocorePostprocessor ServicePackage","title":"AioBotocoreGenerator"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregenerator","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / AioBotocoreGenerator Auto-generated documentation for mypy_boto3_builder.generators.aiobotocore_generator module.","title":"AioBotocoreGenerator"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregenerator_1","text":"Show source in aiobotocore_generator.py:20 AioBotocore stubs/docs generator.","title":"AioBotocoreGenerator"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature","text":"class AioBotocoreGenerator ( BaseGenerator ): ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#see-also","text":"BaseGenerator","title":"See also"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorgenerate_docs","text":"Show source in aiobotocore_generator.py:77 Generate service and master docs.","title":"AioBotocoreGenerator().generate_docs"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_1","text":"def generate_docs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorgenerate_stubs","text":"Show source in aiobotocore_generator.py:40 Generate aiobotocore-stubs package.","title":"AioBotocoreGenerator().generate_stubs"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_2","text":"def generate_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorget_library_version","text":"Show source in aiobotocore_generator.py:28 Get underlying library version.","title":"AioBotocoreGenerator().get_library_version"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_3","text":"def get_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#aiobotocoregeneratorget_postprocessor","text":"Show source in aiobotocore_generator.py:34 Get postprocessor for service package.","title":"AioBotocoreGenerator().get_postprocessor"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#signature_4","text":"def get_postprocessor ( self , service_package : ServicePackage ) -> AioBotocorePostprocessor : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/aiobotocore_generator/#see-also_1","text":"AioBotocorePostprocessor ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/generators/base_generator/","text":"BaseGenerator Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / BaseGenerator Auto-generated documentation for mypy_boto3_builder.generators.base_generator module. BaseGenerator Show source in base_generator.py:22 Base stubs/docs generator. Arguments service_names - Selected service names master_service_names - Service names included in master session - Botocore session output_path - Path to write generated files generate_setup - Whether to create package or installed module skip_published - Whether to skip packages that are already published disable_smart_version - Whether to create a new postrelease if version is already published version - Package build version Signature class BaseGenerator ( ABC ): def __init__ ( self , service_names : Sequence [ ServiceName ], master_service_names : Sequence [ ServiceName ], session : Session , output_path : Path , generate_setup : bool , skip_published : bool , disable_smart_version : bool , version : str , ): ... See also ServiceName BaseGenerator().generate_docs Show source in base_generator.py:101 Generate service and master docs. Signature @abstractmethod def generate_docs ( self ) -> None : ... BaseGenerator().generate_product Show source in base_generator.py:107 Run generator for a product type. Signature def generate_product ( self , product_type : ProductType ) -> None : ... See also ProductType BaseGenerator().generate_service_stubs Show source in base_generator.py:201 Generate service stubs. Signature def generate_service_stubs ( self ) -> None : ... BaseGenerator().generate_stubs Show source in base_generator.py:94 Generate main stubs. Signature @abstractmethod def generate_stubs ( self ) -> None : ... BaseGenerator().get_library_version Show source in base_generator.py:68 Get underlying library version. Signature @abstractmethod def get_library_version ( self ) -> str : ... BaseGenerator().get_postprocessor Show source in base_generator.py:62 Get postprocessor for service package. Signature @abstractmethod def get_postprocessor ( self , service_package : ServicePackage ) -> BasePostprocessor : ... See also BasePostprocessor ServicePackage","title":"BaseGenerator"},{"location":"mypy_boto3_builder/generators/base_generator/#basegenerator","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / BaseGenerator Auto-generated documentation for mypy_boto3_builder.generators.base_generator module.","title":"BaseGenerator"},{"location":"mypy_boto3_builder/generators/base_generator/#basegenerator_1","text":"Show source in base_generator.py:22 Base stubs/docs generator.","title":"BaseGenerator"},{"location":"mypy_boto3_builder/generators/base_generator/#arguments","text":"service_names - Selected service names master_service_names - Service names included in master session - Botocore session output_path - Path to write generated files generate_setup - Whether to create package or installed module skip_published - Whether to skip packages that are already published disable_smart_version - Whether to create a new postrelease if version is already published version - Package build version","title":"Arguments"},{"location":"mypy_boto3_builder/generators/base_generator/#signature","text":"class BaseGenerator ( ABC ): def __init__ ( self , service_names : Sequence [ ServiceName ], master_service_names : Sequence [ ServiceName ], session : Session , output_path : Path , generate_setup : bool , skip_published : bool , disable_smart_version : bool , version : str , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_docs","text":"Show source in base_generator.py:101 Generate service and master docs.","title":"BaseGenerator().generate_docs"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_1","text":"@abstractmethod def generate_docs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_product","text":"Show source in base_generator.py:107 Run generator for a product type.","title":"BaseGenerator().generate_product"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_2","text":"def generate_product ( self , product_type : ProductType ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also_1","text":"ProductType","title":"See also"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_service_stubs","text":"Show source in base_generator.py:201 Generate service stubs.","title":"BaseGenerator().generate_service_stubs"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_3","text":"def generate_service_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorgenerate_stubs","text":"Show source in base_generator.py:94 Generate main stubs.","title":"BaseGenerator().generate_stubs"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_4","text":"@abstractmethod def generate_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorget_library_version","text":"Show source in base_generator.py:68 Get underlying library version.","title":"BaseGenerator().get_library_version"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_5","text":"@abstractmethod def get_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#basegeneratorget_postprocessor","text":"Show source in base_generator.py:62 Get postprocessor for service package.","title":"BaseGenerator().get_postprocessor"},{"location":"mypy_boto3_builder/generators/base_generator/#signature_6","text":"@abstractmethod def get_postprocessor ( self , service_package : ServicePackage ) -> BasePostprocessor : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/base_generator/#see-also_2","text":"BasePostprocessor ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/generators/boto3_generator/","text":"Boto3Generator Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / Boto3Generator Auto-generated documentation for mypy_boto3_builder.generators.boto3_generator module. Boto3Generator Show source in boto3_generator.py:22 Boto3 stubs/docs generator. Signature class Boto3Generator ( BaseGenerator ): ... See also BaseGenerator Boto3Generator().generate_docs Show source in boto3_generator.py:100 Generate service and master docs. Signature def generate_docs ( self ) -> None : ... Boto3Generator().generate_stubs Show source in boto3_generator.py:90 Generate main stubs. Signature def generate_stubs ( self ) -> None : ... Boto3Generator().get_library_version Show source in boto3_generator.py:30 Get underlying library version. Signature def get_library_version ( self ) -> str : ... Boto3Generator().get_postprocessor Show source in boto3_generator.py:36 Get postprocessor for service package. Signature def get_postprocessor ( self , service_package : ServicePackage ) -> BotocorePostprocessor : ... See also BotocorePostprocessor ServicePackage","title":"Boto3Generator"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generator","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Generators / Boto3Generator Auto-generated documentation for mypy_boto3_builder.generators.boto3_generator module.","title":"Boto3Generator"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generator_1","text":"Show source in boto3_generator.py:22 Boto3 stubs/docs generator.","title":"Boto3Generator"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature","text":"class Boto3Generator ( BaseGenerator ): ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/boto3_generator/#see-also","text":"BaseGenerator","title":"See also"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorgenerate_docs","text":"Show source in boto3_generator.py:100 Generate service and master docs.","title":"Boto3Generator().generate_docs"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_1","text":"def generate_docs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorgenerate_stubs","text":"Show source in boto3_generator.py:90 Generate main stubs.","title":"Boto3Generator().generate_stubs"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_2","text":"def generate_stubs ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorget_library_version","text":"Show source in boto3_generator.py:30 Get underlying library version.","title":"Boto3Generator().get_library_version"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_3","text":"def get_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/boto3_generator/#boto3generatorget_postprocessor","text":"Show source in boto3_generator.py:36 Get postprocessor for service package.","title":"Boto3Generator().get_postprocessor"},{"location":"mypy_boto3_builder/generators/boto3_generator/#signature_4","text":"def get_postprocessor ( self , service_package : ServicePackage ) -> BotocorePostprocessor : ...","title":"Signature"},{"location":"mypy_boto3_builder/generators/boto3_generator/#see-also_1","text":"BotocorePostprocessor ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/import_helpers/","text":"Import Helpers Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers Auto-generated documentation for mypy_boto3_builder.import_helpers module. Modules ImportRecord ImportString InternalImportRecord","title":"Import Helpers"},{"location":"mypy_boto3_builder/import_helpers/#import-helpers","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers Auto-generated documentation for mypy_boto3_builder.import_helpers module.","title":"Import Helpers"},{"location":"mypy_boto3_builder/import_helpers/#modules","text":"ImportRecord ImportString InternalImportRecord","title":"Modules"},{"location":"mypy_boto3_builder/import_helpers/import_record/","text":"ImportRecord Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportRecord Auto-generated documentation for mypy_boto3_builder.import_helpers.import_record module. ImportRecord Show source in import_record.py:13 Helper for Python import strings. Arguments source - Source of import. name - Import name. alias - Import local name. min_version - Minimum Python version, used for fallback. fallback - Fallback ImportRecord. Signature class ImportRecord : def __init__ ( self : _R , source : ImportString , name : str = \"\" , alias : str = \"\" , min_version : tuple [ int , ... ] | None = ( 3 , 8 ), fallback : _R | None = None , ) -> None : ... See also ImportString ImportRecord.empty Show source in import_record.py:48 Whether import record is an empty string. Signature @classmethod def empty ( cls : type [ _R ]) -> _R : ... ImportRecord().get_external Show source in import_record.py:161 Get itself. Overriden by InternalImportRecord . Signature def get_external ( self , module_name : str ) -> \"ImportRecord\" : ... ImportRecord().get_local_name Show source in import_record.py:115 Get local import name. Signature def get_local_name ( self ) -> str : ... ImportRecord().is_builtins Show source in import_record.py:121 Whether import is from Python builtins module. Signature def is_builtins ( self ) -> bool : ... ImportRecord().is_local Show source in import_record.py:143 Whether import is from local module. Signature def is_local ( self ) -> bool : ... ImportRecord().is_standalone Show source in import_record.py:169 Whether import record should not be grouped. Signature def is_standalone ( self ) -> bool : ... ImportRecord().is_third_party Show source in import_record.py:133 Whether import is from 3rd party module. Signature def is_third_party ( self ) -> bool : ... ImportRecord().is_type_defs Show source in import_record.py:127 Whether import is from type_defs module. Signature def is_type_defs ( self ) -> bool : ... ImportRecord().needs_sys_fallback Show source in import_record.py:178 Whether ImportString requires sys module. Signature def needs_sys_fallback ( self ) -> bool : ... ImportRecord().render Show source in import_record.py:55 Get rendered string. Signature def render ( self ) -> str : ...","title":"ImportRecord"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecord","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportRecord Auto-generated documentation for mypy_boto3_builder.import_helpers.import_record module.","title":"ImportRecord"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecord_1","text":"Show source in import_record.py:13 Helper for Python import strings.","title":"ImportRecord"},{"location":"mypy_boto3_builder/import_helpers/import_record/#arguments","text":"source - Source of import. name - Import name. alias - Import local name. min_version - Minimum Python version, used for fallback. fallback - Fallback ImportRecord.","title":"Arguments"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature","text":"class ImportRecord : def __init__ ( self : _R , source : ImportString , name : str = \"\" , alias : str = \"\" , min_version : tuple [ int , ... ] | None = ( 3 , 8 ), fallback : _R | None = None , ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#see-also","text":"ImportString","title":"See also"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordempty","text":"Show source in import_record.py:48 Whether import record is an empty string.","title":"ImportRecord.empty"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_1","text":"@classmethod def empty ( cls : type [ _R ]) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordget_external","text":"Show source in import_record.py:161 Get itself. Overriden by InternalImportRecord .","title":"ImportRecord().get_external"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_2","text":"def get_external ( self , module_name : str ) -> \"ImportRecord\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordget_local_name","text":"Show source in import_record.py:115 Get local import name.","title":"ImportRecord().get_local_name"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_3","text":"def get_local_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_builtins","text":"Show source in import_record.py:121 Whether import is from Python builtins module.","title":"ImportRecord().is_builtins"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_4","text":"def is_builtins ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_local","text":"Show source in import_record.py:143 Whether import is from local module.","title":"ImportRecord().is_local"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_5","text":"def is_local ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_standalone","text":"Show source in import_record.py:169 Whether import record should not be grouped.","title":"ImportRecord().is_standalone"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_6","text":"def is_standalone ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_third_party","text":"Show source in import_record.py:133 Whether import is from 3rd party module.","title":"ImportRecord().is_third_party"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_7","text":"def is_third_party ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordis_type_defs","text":"Show source in import_record.py:127 Whether import is from type_defs module.","title":"ImportRecord().is_type_defs"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_8","text":"def is_type_defs ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordneeds_sys_fallback","text":"Show source in import_record.py:178 Whether ImportString requires sys module.","title":"ImportRecord().needs_sys_fallback"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_9","text":"def needs_sys_fallback ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_record/#importrecordrender","text":"Show source in import_record.py:55 Get rendered string.","title":"ImportRecord().render"},{"location":"mypy_boto3_builder/import_helpers/import_record/#signature_10","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/","text":"ImportString Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportString Auto-generated documentation for mypy_boto3_builder.import_helpers.import_string module. ImportString Show source in import_string.py:9 Wrapper for Python import strings. Arguments master - Master module name parts - Other import parts Examples import_string = ImportString ( \"my\" , \"name\" ) str ( import_string ) 'my.name' import_string . render () 'my.name' import_string . parts . append ( 'test' ) import_string . render () 'my.name.test' Signature class ImportString : def __init__ ( self , master_name : str , * parts : str ) -> None : ... ImportString.empty Show source in import_string.py:47 Create an empty ImportString. Signature @classmethod def empty ( cls : type [ _R ]) -> _R : ... ImportString.from_str Show source in import_string.py:40 Create from string. Signature @classmethod def from_str ( cls , import_string : str ) -> \"ImportString\" : ... ImportString().master_name Show source in import_string.py:126 Get first import string part or builtins . Signature @property def master_name ( self ) -> str : ... ImportString.parent Show source in import_string.py:56 Get parent ImportString. Signature @classmethod def parent ( cls : type [ _R ]) -> _R : ... ImportString().render Show source in import_string.py:117 Render to string. Returns Ready to use import string. Signature def render ( self ) -> str : ... ImportString().startswith Show source in import_string.py:85 Check if import string starts with other . Examples ImportString ( 'my' , 'name' ) . startswith ( ImportString ( 'my' )) True ImportString ( 'my_module' , 'name' ) . startswith ( ImportString ( 'my' )) False ImportString ( 'my' , 'name' ) . startswith ( ImportString ( 'my, ' name ')) True ImportString ( 'my' , 'name' ) . startswith ( ImportString . empty ()) True Arguments other - Other import string. Signature def startswith ( self : _R , other : _R ) -> bool : ...","title":"ImportString"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstring","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / ImportString Auto-generated documentation for mypy_boto3_builder.import_helpers.import_string module.","title":"ImportString"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstring_1","text":"Show source in import_string.py:9 Wrapper for Python import strings.","title":"ImportString"},{"location":"mypy_boto3_builder/import_helpers/import_string/#arguments","text":"master - Master module name parts - Other import parts","title":"Arguments"},{"location":"mypy_boto3_builder/import_helpers/import_string/#examples","text":"import_string = ImportString ( \"my\" , \"name\" ) str ( import_string ) 'my.name' import_string . render () 'my.name' import_string . parts . append ( 'test' ) import_string . render () 'my.name.test'","title":"Examples"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature","text":"class ImportString : def __init__ ( self , master_name : str , * parts : str ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringempty","text":"Show source in import_string.py:47 Create an empty ImportString.","title":"ImportString.empty"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_1","text":"@classmethod def empty ( cls : type [ _R ]) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringfrom_str","text":"Show source in import_string.py:40 Create from string.","title":"ImportString.from_str"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_2","text":"@classmethod def from_str ( cls , import_string : str ) -> \"ImportString\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringmaster_name","text":"Show source in import_string.py:126 Get first import string part or builtins .","title":"ImportString().master_name"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_3","text":"@property def master_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringparent","text":"Show source in import_string.py:56 Get parent ImportString.","title":"ImportString.parent"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_4","text":"@classmethod def parent ( cls : type [ _R ]) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringrender","text":"Show source in import_string.py:117 Render to string.","title":"ImportString().render"},{"location":"mypy_boto3_builder/import_helpers/import_string/#returns","text":"Ready to use import string.","title":"Returns"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_5","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/import_string/#importstringstartswith","text":"Show source in import_string.py:85 Check if import string starts with other .","title":"ImportString().startswith"},{"location":"mypy_boto3_builder/import_helpers/import_string/#examples_1","text":"ImportString ( 'my' , 'name' ) . startswith ( ImportString ( 'my' )) True ImportString ( 'my_module' , 'name' ) . startswith ( ImportString ( 'my' )) False ImportString ( 'my' , 'name' ) . startswith ( ImportString ( 'my, ' name ')) True ImportString ( 'my' , 'name' ) . startswith ( ImportString . empty ()) True","title":"Examples"},{"location":"mypy_boto3_builder/import_helpers/import_string/#arguments_1","text":"other - Other import string.","title":"Arguments"},{"location":"mypy_boto3_builder/import_helpers/import_string/#signature_6","text":"def startswith ( self : _R , other : _R ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/","text":"InternalImportRecord Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / InternalImportRecord Auto-generated documentation for mypy_boto3_builder.import_helpers.internal_import_record module. InternalImportRecord Show source in internal_import_record.py:9 Helper for Python import strings with not set master module name. Arguments service_module_name - Service module name. name - Import name. alias - Import local name. Signature class InternalImportRecord ( ImportRecord ): def __init__ ( self , service_module_name : ServiceModuleName , name : str = \"\" , alias : str = \"\" ): ... See also ImportRecord ServiceModuleName InternalImportRecord().get_external Show source in internal_import_record.py:24 Get full import record with module_name set as master module. Arguments module_name - Master module import string. Returns A new non-internal ImportRecord. Signature def get_external ( self , module_name : str ) -> ImportRecord : ... See also ImportRecord","title":"InternalImportRecord"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#internalimportrecord","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Import Helpers / InternalImportRecord Auto-generated documentation for mypy_boto3_builder.import_helpers.internal_import_record module.","title":"InternalImportRecord"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#internalimportrecord_1","text":"Show source in internal_import_record.py:9 Helper for Python import strings with not set master module name.","title":"InternalImportRecord"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#arguments","text":"service_module_name - Service module name. name - Import name. alias - Import local name.","title":"Arguments"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#signature","text":"class InternalImportRecord ( ImportRecord ): def __init__ ( self , service_module_name : ServiceModuleName , name : str = \"\" , alias : str = \"\" ): ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#see-also","text":"ImportRecord ServiceModuleName","title":"See also"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#internalimportrecordget_external","text":"Show source in internal_import_record.py:24 Get full import record with module_name set as master module.","title":"InternalImportRecord().get_external"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#arguments_1","text":"module_name - Master module import string.","title":"Arguments"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#returns","text":"A new non-internal ImportRecord.","title":"Returns"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#signature_1","text":"def get_external ( self , module_name : str ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/import_helpers/internal_import_record/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/parsers/","text":"Parsers Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers Auto-generated documentation for mypy_boto3_builder.parsers module. Modules Aiobotocore Stubs Package Boto3 Stubs Package Client Docstring Parser Fake Service Package Helpers Master Package Parse Attributes Parse Collections Parse Identifiers Parse References Parse Resource Service Package Service Resource ShapeParser Types Aioboto3 Package","title":"Parsers"},{"location":"mypy_boto3_builder/parsers/#parsers","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers Auto-generated documentation for mypy_boto3_builder.parsers module.","title":"Parsers"},{"location":"mypy_boto3_builder/parsers/#modules","text":"Aiobotocore Stubs Package Boto3 Stubs Package Client Docstring Parser Fake Service Package Helpers Master Package Parse Attributes Parse Collections Parse Identifiers Parse References Parse Resource Service Package Service Resource ShapeParser Types Aioboto3 Package","title":"Modules"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/","text":"Aiobotocore Stubs Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Aiobotocore Stubs Package Auto-generated documentation for mypy_boto3_builder.parsers.aiobotocore_stubs_package module. parse_aiobotocore_stubs_package Show source in aiobotocore_stubs_package.py:23 Parse data for types-aiobotocore package. Arguments session - boto3 session service_names - All available service names package_data - Package data Returns AioBotocoreStubsPackage structure. Signature def parse_aiobotocore_stubs_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> AioBotocoreStubsPackage : ... See also AioBotocoreStubsPackage BasePackageData ServiceName","title":"Aiobotocore Stubs Package"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#aiobotocore-stubs-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Aiobotocore Stubs Package Auto-generated documentation for mypy_boto3_builder.parsers.aiobotocore_stubs_package module.","title":"Aiobotocore Stubs Package"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#parse_aiobotocore_stubs_package","text":"Show source in aiobotocore_stubs_package.py:23 Parse data for types-aiobotocore package.","title":"parse_aiobotocore_stubs_package"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#arguments","text":"session - boto3 session service_names - All available service names package_data - Package data","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#returns","text":"AioBotocoreStubsPackage structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#signature","text":"def parse_aiobotocore_stubs_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> AioBotocoreStubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/aiobotocore_stubs_package/#see-also","text":"AioBotocoreStubsPackage BasePackageData ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/","text":"Boto3 Stubs Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Boto3 Stubs Package Auto-generated documentation for mypy_boto3_builder.parsers.boto3_stubs_package module. parse_boto3_stubs_package Show source in boto3_stubs_package.py:25 Parse data for boto3-stubs package. Arguments session - boto3 session service_names - All available service names package_data - Package data Returns Boto3StubsPackage structure. Signature def parse_boto3_stubs_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> Boto3StubsPackage : ... See also BasePackageData Boto3StubsPackage ServiceName","title":"Boto3 Stubs Package"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#boto3-stubs-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Boto3 Stubs Package Auto-generated documentation for mypy_boto3_builder.parsers.boto3_stubs_package module.","title":"Boto3 Stubs Package"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#parse_boto3_stubs_package","text":"Show source in boto3_stubs_package.py:25 Parse data for boto3-stubs package.","title":"parse_boto3_stubs_package"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#arguments","text":"session - boto3 session service_names - All available service names package_data - Package data","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#returns","text":"Boto3StubsPackage structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#signature","text":"def parse_boto3_stubs_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> Boto3StubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/boto3_stubs_package/#see-also","text":"BasePackageData Boto3StubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/client/","text":"Client Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Client Auto-generated documentation for mypy_boto3_builder.parsers.client module. parse_client Show source in client.py:23 Parse boto3 client to a structure. Arguments session - boto3 session. service_name - Target service name. Returns Client structure. Signature def parse_client ( session : Session , service_name : ServiceName , shape_parser : ShapeParser ) -> Client : ... See also Client ServiceName ShapeParser","title":"Client"},{"location":"mypy_boto3_builder/parsers/client/#client","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Client Auto-generated documentation for mypy_boto3_builder.parsers.client module.","title":"Client"},{"location":"mypy_boto3_builder/parsers/client/#parse_client","text":"Show source in client.py:23 Parse boto3 client to a structure.","title":"parse_client"},{"location":"mypy_boto3_builder/parsers/client/#arguments","text":"session - boto3 session. service_name - Target service name.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/client/#returns","text":"Client structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/client/#signature","text":"def parse_client ( session : Session , service_name : ServiceName , shape_parser : ShapeParser ) -> Client : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/client/#see-also","text":"Client ServiceName ShapeParser","title":"See also"},{"location":"mypy_boto3_builder/parsers/fake_service_package/","text":"Fake Service Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Fake Service Package Auto-generated documentation for mypy_boto3_builder.parsers.fake_service_package module. parse_fake_service_package Show source in fake_service_package.py:19 Create fake boto3 service module structure. Used by stubs and master package. Arguments session - boto3 session. service_name - Target service name. package_data - Package data. Returns ServiceModule structure. Signature def parse_fake_service_package ( session : Session , service_name : ServiceName , package_data : type [ BasePackageData ] ) -> ServicePackage : ... See also BasePackageData ServiceName ServicePackage","title":"Fake Service Package"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#fake-service-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Fake Service Package Auto-generated documentation for mypy_boto3_builder.parsers.fake_service_package module.","title":"Fake Service Package"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#parse_fake_service_package","text":"Show source in fake_service_package.py:19 Create fake boto3 service module structure. Used by stubs and master package.","title":"parse_fake_service_package"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#arguments","text":"session - boto3 session. service_name - Target service name. package_data - Package data.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#returns","text":"ServiceModule structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#signature","text":"def parse_fake_service_package ( session : Session , service_name : ServiceName , package_data : type [ BasePackageData ] ) -> ServicePackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/fake_service_package/#see-also","text":"BasePackageData ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/parsers/helpers/","text":"Helpers Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Helpers Auto-generated documentation for mypy_boto3_builder.parsers.helpers module. get_public_methods Show source in helpers.py:18 Extract public methods from any class. Arguments inspect_class - Inspect class. Returns A dictionary of method name and method. Signature def get_public_methods ( inspect_class : object ) -> dict [ str , MethodType ]: ... parse_method Show source in helpers.py:42 Parse method to a structure. Arguments parent_name - Parent class name. method - Inspect method. Returns Method structure. Signature def parse_method ( parent_name : str , name : str , method : MethodType , service_name : ServiceName ) -> Method : ... See also Method ServiceName","title":"Helpers"},{"location":"mypy_boto3_builder/parsers/helpers/#helpers","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Helpers Auto-generated documentation for mypy_boto3_builder.parsers.helpers module.","title":"Helpers"},{"location":"mypy_boto3_builder/parsers/helpers/#get_public_methods","text":"Show source in helpers.py:18 Extract public methods from any class.","title":"get_public_methods"},{"location":"mypy_boto3_builder/parsers/helpers/#arguments","text":"inspect_class - Inspect class.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/helpers/#returns","text":"A dictionary of method name and method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/helpers/#signature","text":"def get_public_methods ( inspect_class : object ) -> dict [ str , MethodType ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/helpers/#parse_method","text":"Show source in helpers.py:42 Parse method to a structure.","title":"parse_method"},{"location":"mypy_boto3_builder/parsers/helpers/#arguments_1","text":"parent_name - Parent class name. method - Inspect method.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/helpers/#returns_1","text":"Method structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/helpers/#signature_1","text":"def parse_method ( parent_name : str , name : str , method : MethodType , service_name : ServiceName ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/helpers/#see-also","text":"Method ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/master_package/","text":"Master Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Master Package Auto-generated documentation for mypy_boto3_builder.parsers.master_package module. parse_master_package Show source in master_package.py:14 Parse data for master package. Arguments session - boto3 session. service_names - All available service names. Returns MasterPackage structure. Signature def parse_master_package ( session : Session , service_names : Iterable [ ServiceName ] ) -> MasterPackage : ... See also MasterPackage ServiceName","title":"Master Package"},{"location":"mypy_boto3_builder/parsers/master_package/#master-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Master Package Auto-generated documentation for mypy_boto3_builder.parsers.master_package module.","title":"Master Package"},{"location":"mypy_boto3_builder/parsers/master_package/#parse_master_package","text":"Show source in master_package.py:14 Parse data for master package.","title":"parse_master_package"},{"location":"mypy_boto3_builder/parsers/master_package/#arguments","text":"session - boto3 session. service_names - All available service names.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/master_package/#returns","text":"MasterPackage structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/master_package/#signature","text":"def parse_master_package ( session : Session , service_names : Iterable [ ServiceName ] ) -> MasterPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/master_package/#see-also","text":"MasterPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/parse_attributes/","text":"Parse Attributes Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Attributes Auto-generated documentation for mypy_boto3_builder.parsers.parse_attributes module. parse_attributes Show source in parse_attributes.py:12 Extract attributes from boto3 resource. Arguments resource - boto3 service resource. Returns A list of Attribute structures. Signature def parse_attributes ( service_name : ServiceName , resource_name : str , resource : Boto3ServiceResource , shape_parser : ShapeParser , ) -> list [ Attribute ]: ... See also Attribute ServiceName ShapeParser","title":"Parse Attributes"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#parse-attributes","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Attributes Auto-generated documentation for mypy_boto3_builder.parsers.parse_attributes module.","title":"Parse Attributes"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#parse_attributes","text":"Show source in parse_attributes.py:12 Extract attributes from boto3 resource.","title":"parse_attributes"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#arguments","text":"resource - boto3 service resource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#returns","text":"A list of Attribute structures.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#signature","text":"def parse_attributes ( service_name : ServiceName , resource_name : str , resource : Boto3ServiceResource , shape_parser : ShapeParser , ) -> list [ Attribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_attributes/#see-also","text":"Attribute ServiceName ShapeParser","title":"See also"},{"location":"mypy_boto3_builder/parsers/parse_collections/","text":"Parse Collections Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Collections Auto-generated documentation for mypy_boto3_builder.parsers.parse_collections module. parse_collections Show source in parse_collections.py:17 Extract collections from boto3 resource. Arguments resource - boto3 service resource. Returns A list of Collection structures. Signature def parse_collections ( parent_name : str , resource : Boto3ServiceResource , service_name : ServiceName , shape_parser : ShapeParser , ) -> list [ Collection ]: ... See also Collection ServiceName ShapeParser","title":"Parse Collections"},{"location":"mypy_boto3_builder/parsers/parse_collections/#parse-collections","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Collections Auto-generated documentation for mypy_boto3_builder.parsers.parse_collections module.","title":"Parse Collections"},{"location":"mypy_boto3_builder/parsers/parse_collections/#parse_collections","text":"Show source in parse_collections.py:17 Extract collections from boto3 resource.","title":"parse_collections"},{"location":"mypy_boto3_builder/parsers/parse_collections/#arguments","text":"resource - boto3 service resource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_collections/#returns","text":"A list of Collection structures.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_collections/#signature","text":"def parse_collections ( parent_name : str , resource : Boto3ServiceResource , service_name : ServiceName , shape_parser : ShapeParser , ) -> list [ Collection ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_collections/#see-also","text":"Collection ServiceName ShapeParser","title":"See also"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/","text":"Parse Identifiers Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Identifiers Auto-generated documentation for mypy_boto3_builder.parsers.parse_identifiers module. parse_identifiers Show source in parse_identifiers.py:10 Extract identifiers from boto3 resource. Arguments resource - boto3 service resource. Returns A list of Attribute structures. Signature def parse_identifiers ( resource : Boto3ServiceResource ) -> list [ Attribute ]: ... See also Attribute","title":"Parse Identifiers"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#parse-identifiers","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Identifiers Auto-generated documentation for mypy_boto3_builder.parsers.parse_identifiers module.","title":"Parse Identifiers"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#parse_identifiers","text":"Show source in parse_identifiers.py:10 Extract identifiers from boto3 resource.","title":"parse_identifiers"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#arguments","text":"resource - boto3 service resource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#returns","text":"A list of Attribute structures.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#signature","text":"def parse_identifiers ( resource : Boto3ServiceResource ) -> list [ Attribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_identifiers/#see-also","text":"Attribute","title":"See also"},{"location":"mypy_boto3_builder/parsers/parse_references/","text":"Parse References Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse References Auto-generated documentation for mypy_boto3_builder.parsers.parse_references module. parse_references Show source in parse_references.py:13 Extract references from boto3 resource. Arguments resource - boto3 service resource. Returns A list of Attribute structures. Signature def parse_references ( resource : Boto3ServiceResource ) -> list [ Attribute ]: ... See also Attribute","title":"Parse References"},{"location":"mypy_boto3_builder/parsers/parse_references/#parse-references","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse References Auto-generated documentation for mypy_boto3_builder.parsers.parse_references module.","title":"Parse References"},{"location":"mypy_boto3_builder/parsers/parse_references/#parse_references","text":"Show source in parse_references.py:13 Extract references from boto3 resource.","title":"parse_references"},{"location":"mypy_boto3_builder/parsers/parse_references/#arguments","text":"resource - boto3 service resource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_references/#returns","text":"A list of Attribute structures.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_references/#signature","text":"def parse_references ( resource : Boto3ServiceResource ) -> list [ Attribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_references/#see-also","text":"Attribute","title":"See also"},{"location":"mypy_boto3_builder/parsers/parse_resource/","text":"Parse Resource Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Resource Auto-generated documentation for mypy_boto3_builder.parsers.parse_resource module. get_resource_public_methods Show source in parse_resource.py:76 Extract public methods from boto3 sub resource. Arguments resource_class - boto3 resource meta. Returns A dictionary of method name and method. Signature def get_resource_public_methods ( resource_class : type [ Boto3ServiceResource ], ) -> dict [ str , MethodType ]: ... parse_resource Show source in parse_resource.py:23 Parse boto3 sub Resource data. Arguments resource - Original boto3 resource. Returns Resource structure. Signature def parse_resource ( name : str , resource : Boto3ServiceResource , service_name : ServiceName , shape_parser : ShapeParser , ) -> Resource : ... See also Resource ServiceName ShapeParser","title":"Parse Resource"},{"location":"mypy_boto3_builder/parsers/parse_resource/#parse-resource","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Parse Resource Auto-generated documentation for mypy_boto3_builder.parsers.parse_resource module.","title":"Parse Resource"},{"location":"mypy_boto3_builder/parsers/parse_resource/#get_resource_public_methods","text":"Show source in parse_resource.py:76 Extract public methods from boto3 sub resource.","title":"get_resource_public_methods"},{"location":"mypy_boto3_builder/parsers/parse_resource/#arguments","text":"resource_class - boto3 resource meta.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_resource/#returns","text":"A dictionary of method name and method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_resource/#signature","text":"def get_resource_public_methods ( resource_class : type [ Boto3ServiceResource ], ) -> dict [ str , MethodType ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_resource/#parse_resource","text":"Show source in parse_resource.py:23 Parse boto3 sub Resource data.","title":"parse_resource"},{"location":"mypy_boto3_builder/parsers/parse_resource/#arguments_1","text":"resource - Original boto3 resource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/parse_resource/#returns_1","text":"Resource structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/parse_resource/#signature_1","text":"def parse_resource ( name : str , resource : Boto3ServiceResource , service_name : ServiceName , shape_parser : ShapeParser , ) -> Resource : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/parse_resource/#see-also","text":"Resource ServiceName ShapeParser","title":"See also"},{"location":"mypy_boto3_builder/parsers/service_package/","text":"Service Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Service Package Auto-generated documentation for mypy_boto3_builder.parsers.service_package module. parse_service_package Show source in service_package.py:19 Extract all data from boto3 service package. Arguments session - boto3 session. service_name - Target service name. package_data - Package data. Returns ServiceModule structure. Signature def parse_service_package ( session : Session , service_name : ServiceName , package_data : type [ BasePackageData ] ) -> ServicePackage : ... See also BasePackageData ServiceName ServicePackage","title":"Service Package"},{"location":"mypy_boto3_builder/parsers/service_package/#service-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Service Package Auto-generated documentation for mypy_boto3_builder.parsers.service_package module.","title":"Service Package"},{"location":"mypy_boto3_builder/parsers/service_package/#parse_service_package","text":"Show source in service_package.py:19 Extract all data from boto3 service package.","title":"parse_service_package"},{"location":"mypy_boto3_builder/parsers/service_package/#arguments","text":"session - boto3 session. service_name - Target service name. package_data - Package data.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/service_package/#returns","text":"ServiceModule structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/service_package/#signature","text":"def parse_service_package ( session : Session , service_name : ServiceName , package_data : type [ BasePackageData ] ) -> ServicePackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/service_package/#see-also","text":"BasePackageData ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/parsers/service_resource/","text":"Service Resource Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Service Resource Auto-generated documentation for mypy_boto3_builder.parsers.service_resource module. get_sub_resources Show source in service_resource.py:99 Initialize ServiceResource sub-resources with fake data. Arguments session - boto3 session. service_name - Target service name. resource - Parent ServiceResource. Returns A list of initialized Boto3ServiceResource . Signature def get_sub_resources ( session : Session , service_name : ServiceName , resource : Boto3ServiceResource ) -> list [ Boto3ServiceResource ]: ... See also ServiceName parse_service_resource Show source in service_resource.py:28 Parse boto3 ServiceResource data. Arguments session - boto3 session. service_name - Target service name. Returns ServiceResource structure or None if service does not have a resource. Signature def parse_service_resource ( session : Session , service_name : ServiceName , shape_parser : ShapeParser ) -> ServiceResource | None : ... See also ServiceName ShapeParser","title":"Service Resource"},{"location":"mypy_boto3_builder/parsers/service_resource/#service-resource","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Service Resource Auto-generated documentation for mypy_boto3_builder.parsers.service_resource module.","title":"Service Resource"},{"location":"mypy_boto3_builder/parsers/service_resource/#get_sub_resources","text":"Show source in service_resource.py:99 Initialize ServiceResource sub-resources with fake data.","title":"get_sub_resources"},{"location":"mypy_boto3_builder/parsers/service_resource/#arguments","text":"session - boto3 session. service_name - Target service name. resource - Parent ServiceResource.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/service_resource/#returns","text":"A list of initialized Boto3ServiceResource .","title":"Returns"},{"location":"mypy_boto3_builder/parsers/service_resource/#signature","text":"def get_sub_resources ( session : Session , service_name : ServiceName , resource : Boto3ServiceResource ) -> list [ Boto3ServiceResource ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/service_resource/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/service_resource/#parse_service_resource","text":"Show source in service_resource.py:28 Parse boto3 ServiceResource data.","title":"parse_service_resource"},{"location":"mypy_boto3_builder/parsers/service_resource/#arguments_1","text":"session - boto3 session. service_name - Target service name.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/service_resource/#returns_1","text":"ServiceResource structure or None if service does not have a resource.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/service_resource/#signature_1","text":"def parse_service_resource ( session : Session , service_name : ServiceName , shape_parser : ShapeParser ) -> ServiceResource | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/service_resource/#see-also_1","text":"ServiceName ShapeParser","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/","text":"ShapeParser Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / ShapeParser Auto-generated documentation for mypy_boto3_builder.parsers.shape_parser module. ShapeParser Show source in shape_parser.py:57 Parser for botocore shape files. Arguments session - Boto3 session. service_name - ServiceName. Signature class ShapeParser : def __init__ ( self , session : Session , service_name : ServiceName ): ... See also ServiceName ShapeParser().get_client_method_map Show source in shape_parser.py:255 Get client methods from shape. Returns A map of method name to Method. Signature def get_client_method_map ( self ) -> dict [ str , Method ]: ... See also Method ShapeParser().get_collection_batch_methods Show source in shape_parser.py:746 Get batch operations for Resource collection. Arguments name - Collection record name. collection - Boto3 Collection. class_type - Collection self type annotation. Returns List of Method records. Signature def get_collection_batch_methods ( self , name : str , collection : Collection ) -> list [ Method ]: ... See also Method ShapeParser().get_collection_filter_method Show source in shape_parser.py:708 Get filter classmethod for Resource collection. Arguments name - Collection record name. collection - Boto3 Collection. class_type - Collection class type annotation. Returns Filter Method record. Signature def get_collection_filter_method ( self , name : str , collection : Collection , self_type : FakeAnnotation ) -> Method : ... See also FakeAnnotation Method ShapeParser().get_paginate_method Show source in shape_parser.py:485 Get Paginator paginate method. Arguments paginator_name - Paginator name. Returns Method. Signature def get_paginate_method ( self , paginator_name : str ) -> Method : ... See also Method ShapeParser().get_paginator_names Show source in shape_parser.py:154 Get available paginator names. Returns A list of paginator names. Signature def get_paginator_names ( self ) -> list [ str ]: ... ShapeParser().get_resource_method_map Show source in shape_parser.py:594 Get methods for Resource. Arguments ShapeParser().resource_name - Resource name. Returns A map of method name to Method. Signature def get_resource_method_map ( self , resource_name : str ) -> dict [ str , Method ]: ... See also Method ShapeParser().get_service_resource_method_map Show source in shape_parser.py:572 Get methods for ServiceResource. Returns A map of method name to Method. Signature def get_service_resource_method_map ( self ) -> dict [ str , Method ]: ... See also Method ShapeParser().get_wait_method Show source in shape_parser.py:540 Get Waiter wait method. Arguments waiter_name - Waiter name. Returns Method. Signature def get_wait_method ( self , waiter_name : str ) -> Method : ... See also Method ShapeParser().parse_shape Show source in shape_parser.py:419 Parse any botocore shape to TypeAnnotation. Arguments shape - Botocore shape. output - Whether shape should use strict output types. output_child - Whether shape parent is marked as output. is_streaming - Whether shape should be streaming. Returns TypeAnnotation or similar class. Signature def parse_shape ( self , shape : Shape , output : bool = False , output_child : bool = False , is_streaming : bool = False , ) -> FakeAnnotation : ... See also FakeAnnotation ShapeParser().resource_name Show source in shape_parser.py:120 Parsed resource name. Signature @property def resource_name ( self ) -> str : ... ShapeParserError Show source in shape_parser.py:51 Main error for ShapeParser. Signature class ShapeParserError ( Exception ): ...","title":"ShapeParser"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparser","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / ShapeParser Auto-generated documentation for mypy_boto3_builder.parsers.shape_parser module.","title":"ShapeParser"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparser_1","text":"Show source in shape_parser.py:57 Parser for botocore shape files.","title":"ShapeParser"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments","text":"session - Boto3 session. service_name - ServiceName.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature","text":"class ShapeParser : def __init__ ( self , session : Session , service_name : ServiceName ): ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_client_method_map","text":"Show source in shape_parser.py:255 Get client methods from shape.","title":"ShapeParser().get_client_method_map"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns","text":"A map of method name to Method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_1","text":"def get_client_method_map ( self ) -> dict [ str , Method ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_1","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_collection_batch_methods","text":"Show source in shape_parser.py:746 Get batch operations for Resource collection.","title":"ShapeParser().get_collection_batch_methods"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_1","text":"name - Collection record name. collection - Boto3 Collection. class_type - Collection self type annotation.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_1","text":"List of Method records.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_2","text":"def get_collection_batch_methods ( self , name : str , collection : Collection ) -> list [ Method ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_2","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_collection_filter_method","text":"Show source in shape_parser.py:708 Get filter classmethod for Resource collection.","title":"ShapeParser().get_collection_filter_method"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_2","text":"name - Collection record name. collection - Boto3 Collection. class_type - Collection class type annotation.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_2","text":"Filter Method record.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_3","text":"def get_collection_filter_method ( self , name : str , collection : Collection , self_type : FakeAnnotation ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_3","text":"FakeAnnotation Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_paginate_method","text":"Show source in shape_parser.py:485 Get Paginator paginate method.","title":"ShapeParser().get_paginate_method"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_3","text":"paginator_name - Paginator name.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_3","text":"Method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_4","text":"def get_paginate_method ( self , paginator_name : str ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_4","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_paginator_names","text":"Show source in shape_parser.py:154 Get available paginator names.","title":"ShapeParser().get_paginator_names"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_4","text":"A list of paginator names.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_5","text":"def get_paginator_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_resource_method_map","text":"Show source in shape_parser.py:594 Get methods for Resource.","title":"ShapeParser().get_resource_method_map"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_4","text":"ShapeParser().resource_name - Resource name.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_5","text":"A map of method name to Method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_6","text":"def get_resource_method_map ( self , resource_name : str ) -> dict [ str , Method ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_5","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_service_resource_method_map","text":"Show source in shape_parser.py:572 Get methods for ServiceResource.","title":"ShapeParser().get_service_resource_method_map"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_6","text":"A map of method name to Method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_7","text":"def get_service_resource_method_map ( self ) -> dict [ str , Method ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_6","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserget_wait_method","text":"Show source in shape_parser.py:540 Get Waiter wait method.","title":"ShapeParser().get_wait_method"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_5","text":"waiter_name - Waiter name.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_7","text":"Method.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_8","text":"def get_wait_method ( self , waiter_name : str ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_7","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserparse_shape","text":"Show source in shape_parser.py:419 Parse any botocore shape to TypeAnnotation.","title":"ShapeParser().parse_shape"},{"location":"mypy_boto3_builder/parsers/shape_parser/#arguments_6","text":"shape - Botocore shape. output - Whether shape should use strict output types. output_child - Whether shape parent is marked as output. is_streaming - Whether shape should be streaming.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/shape_parser/#returns_8","text":"TypeAnnotation or similar class.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_9","text":"def parse_shape ( self , shape : Shape , output : bool = False , output_child : bool = False , is_streaming : bool = False , ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#see-also_8","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparserresource_name","text":"Show source in shape_parser.py:120 Parsed resource name.","title":"ShapeParser().resource_name"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_10","text":"@property def resource_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/shape_parser/#shapeparsererror","text":"Show source in shape_parser.py:51 Main error for ShapeParser.","title":"ShapeParserError"},{"location":"mypy_boto3_builder/parsers/shape_parser/#signature_11","text":"class ShapeParserError ( Exception ): ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/","text":"Types Aioboto3 Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Types Aioboto3 Package Auto-generated documentation for mypy_boto3_builder.parsers.types_aioboto3_package module. parse_types_aioboto3_package Show source in types_aioboto3_package.py:23 Parse data for types-aioboto3 package. Arguments session - boto3 session service_names - All available service names package_data - Package data Returns AioBotocoreStubsPackage structure. Signature def parse_types_aioboto3_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> TypesAioBoto3Package : ... See also BasePackageData ServiceName TypesAioBoto3Package","title":"Types Aioboto3 Package"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#types-aioboto3-package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Types Aioboto3 Package Auto-generated documentation for mypy_boto3_builder.parsers.types_aioboto3_package module.","title":"Types Aioboto3 Package"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#parse_types_aioboto3_package","text":"Show source in types_aioboto3_package.py:23 Parse data for types-aioboto3 package.","title":"parse_types_aioboto3_package"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#arguments","text":"session - boto3 session service_names - All available service names package_data - Package data","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#returns","text":"AioBotocoreStubsPackage structure.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#signature","text":"def parse_types_aioboto3_package ( session : Session , service_names : Iterable [ ServiceName ], package_data : type [ BasePackageData ], ) -> TypesAioBoto3Package : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/types_aioboto3_package/#see-also","text":"BasePackageData ServiceName TypesAioBoto3Package","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/","text":"Docstring Parser Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser module. Modules ArgSpecParser DocstringParser SyntaxGrammar TypeDocGrammar TypeDocLine TypeValue","title":"Docstring Parser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/#docstring-parser","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser module.","title":"Docstring Parser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/#modules","text":"ArgSpecParser DocstringParser SyntaxGrammar TypeDocGrammar TypeDocLine TypeValue","title":"Modules"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/","text":"ArgSpecParser Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / ArgSpecParser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.argspec_parser module. ArgSpecParser Show source in argspec_parser.py:16 Converter of function argspec to Argument list. Signature class ArgSpecParser : def __init__ ( self , prefix : str , service_name : ServiceName ) -> None : ... See also ServiceName ArgSpecParser().get_arguments Show source in argspec_parser.py:59 Get arguments from class_name.method_name method func . Signature def get_arguments ( self , class_name : str , method_name : str , func : MethodType ) -> list [ Argument ]: ... See also Argument ArgSpecParser().get_return_type Show source in argspec_parser.py:77 Get class_name.method_name return type annotation. Signature def get_return_type ( self , class_name : str , method_name : str ) -> FakeAnnotation | None : ...","title":"ArgSpecParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#argspecparser","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / ArgSpecParser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.argspec_parser module.","title":"ArgSpecParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#argspecparser_1","text":"Show source in argspec_parser.py:16 Converter of function argspec to Argument list.","title":"ArgSpecParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#signature","text":"class ArgSpecParser : def __init__ ( self , prefix : str , service_name : ServiceName ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#argspecparserget_arguments","text":"Show source in argspec_parser.py:59 Get arguments from class_name.method_name method func .","title":"ArgSpecParser().get_arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#signature_1","text":"def get_arguments ( self , class_name : str , method_name : str , func : MethodType ) -> list [ Argument ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#see-also_1","text":"Argument","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#argspecparserget_return_type","text":"Show source in argspec_parser.py:77 Get class_name.method_name return type annotation.","title":"ArgSpecParser().get_return_type"},{"location":"mypy_boto3_builder/parsers/docstring_parser/argspec_parser/#signature_2","text":"def get_return_type ( self , class_name : str , method_name : str ) -> FakeAnnotation | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/","text":"DocstringParser Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / DocstringParser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.docstring_parser module. DocstringParser Show source in docstring_parser.py:26 Botocore docstring parser. Arguments prefix - Prefix for generated TypeDict names. class_name - Parent class name. method_name - Method name. arguments - List of arguments extracted from argspec. Signature class DocstringParser : def __init__ ( self , service_name : ServiceName , class_name : str , method_name : str , arguments : list [ Argument ], ) -> None : ... See also Argument ServiceName DocstringParser().get_arguments Show source in docstring_parser.py:191 Get list of function arguments with type annottions. Arguments input_string - Function docstring. Returns A list of Argument structures. Signature def get_arguments ( self , input_string : str ) -> list [ Argument ]: ... See also Argument DocstringParser().get_return_type Show source in docstring_parser.py:298 Get function return type annotation. Arguments input_string - Function docstring. Returns A valid type annotation. Signature def get_return_type ( self , input_string : str ) -> FakeAnnotation : ... See also FakeAnnotation","title":"DocstringParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#docstringparser","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / DocstringParser Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.docstring_parser module.","title":"DocstringParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#docstringparser_1","text":"Show source in docstring_parser.py:26 Botocore docstring parser.","title":"DocstringParser"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#arguments","text":"prefix - Prefix for generated TypeDict names. class_name - Parent class name. method_name - Method name. arguments - List of arguments extracted from argspec.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#signature","text":"class DocstringParser : def __init__ ( self , service_name : ServiceName , class_name : str , method_name : str , arguments : list [ Argument ], ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#see-also","text":"Argument ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#docstringparserget_arguments","text":"Show source in docstring_parser.py:191 Get list of function arguments with type annottions.","title":"DocstringParser().get_arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#arguments_1","text":"input_string - Function docstring.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#returns","text":"A list of Argument structures.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#signature_1","text":"def get_arguments ( self , input_string : str ) -> list [ Argument ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#see-also_1","text":"Argument","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#docstringparserget_return_type","text":"Show source in docstring_parser.py:298 Get function return type annotation.","title":"DocstringParser().get_return_type"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#arguments_2","text":"input_string - Function docstring.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#returns_1","text":"A valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#signature_2","text":"def get_return_type ( self , input_string : str ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/docstring_parser/#see-also_2","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/","text":"SyntaxGrammar Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / SyntaxGrammar Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.syntax_grammar module. SyntaxGrammar Show source in syntax_grammar.py:19 Grammar to parse boto3 request/response syntax. ellipsis = \"...\" name_value ::= alphanums + \"_-.\" string_value ::= alphas{0,2} \"'\" [^']+ \"'\" plain_value ::= string_value | name_value literal_item ::= list_value | dict_value | set_value | plain_value literal_value ::= literal_item (\"|\" literal_item)+ any_value ::= literal_value | list_value | dict_value | set_value | union_value | func_call | plain_value empty_list_value ::= \"[\" [ellipsis] [\",\"] \"]\" non_empty_list_value ::= \"[\" any_value (\",\" any_value) [\",\"] \"]\" list_value ::= empty_list_value | non_empty_list_value set_value ::= \"{\" any_value (\",\" any_value) [\",\"] \"}\" func_call ::= name_value \"(\" any_value (\",\" any_value) [\",\"] \")\" empty_dict_value ::= \"{\" [ellipsis] [\",\"] \"}\" non_empty_dict_value ::= \"{\" string_value \":\" any_value (\",\" string_value \":\" any_value) [\",\"] \"}\" dict_value ::= empty_dict_value | non_empty_dict_value union_item ::= literal_value | list_value | dict_value | set_value | plain_value union_value ::= union_item (\"or\" union_item)+ argument ::= alphanums \"=\" any_value definition ::= [^']+ \"(\" argument (\",\" argument) [\",\"] \")\" request_syntax ::= \" Request Syntax \" \"::\" definition response_syntax ::= \" Response Syntax *\" \"::\" (list_value | dict_value) Signature class SyntaxGrammar : ... SyntaxGrammar.disable_packrat Show source in syntax_grammar.py:141 Disable packrat boost. Signature @staticmethod def disable_packrat () -> None : ... SyntaxGrammar.enable_packrat Show source in syntax_grammar.py:134 Enable packrat boost. Signature @staticmethod def enable_packrat () -> None : ... SyntaxGrammar.reset Show source in syntax_grammar.py:127 Reset packrat boost. Signature @classmethod def reset ( cls ) -> None : ...","title":"SyntaxGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#syntaxgrammar","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / SyntaxGrammar Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.syntax_grammar module.","title":"SyntaxGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#syntaxgrammar_1","text":"Show source in syntax_grammar.py:19 Grammar to parse boto3 request/response syntax. ellipsis = \"...\" name_value ::= alphanums + \"_-.\" string_value ::= alphas{0,2} \"'\" [^']+ \"'\" plain_value ::= string_value | name_value literal_item ::= list_value | dict_value | set_value | plain_value literal_value ::= literal_item (\"|\" literal_item)+ any_value ::= literal_value | list_value | dict_value | set_value | union_value | func_call | plain_value empty_list_value ::= \"[\" [ellipsis] [\",\"] \"]\" non_empty_list_value ::= \"[\" any_value (\",\" any_value) [\",\"] \"]\" list_value ::= empty_list_value | non_empty_list_value set_value ::= \"{\" any_value (\",\" any_value) [\",\"] \"}\" func_call ::= name_value \"(\" any_value (\",\" any_value) [\",\"] \")\" empty_dict_value ::= \"{\" [ellipsis] [\",\"] \"}\" non_empty_dict_value ::= \"{\" string_value \":\" any_value (\",\" string_value \":\" any_value) [\",\"] \"}\" dict_value ::= empty_dict_value | non_empty_dict_value union_item ::= literal_value | list_value | dict_value | set_value | plain_value union_value ::= union_item (\"or\" union_item)+ argument ::= alphanums \"=\" any_value definition ::= [^']+ \"(\" argument (\",\" argument) [\",\"] \")\" request_syntax ::= \" Request Syntax \" \"::\" definition response_syntax ::= \" Response Syntax *\" \"::\" (list_value | dict_value)","title":"SyntaxGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#signature","text":"class SyntaxGrammar : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#syntaxgrammardisable_packrat","text":"Show source in syntax_grammar.py:141 Disable packrat boost.","title":"SyntaxGrammar.disable_packrat"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#signature_1","text":"@staticmethod def disable_packrat () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#syntaxgrammarenable_packrat","text":"Show source in syntax_grammar.py:134 Enable packrat boost.","title":"SyntaxGrammar.enable_packrat"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#signature_2","text":"@staticmethod def enable_packrat () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#syntaxgrammarreset","text":"Show source in syntax_grammar.py:127 Reset packrat boost.","title":"SyntaxGrammar.reset"},{"location":"mypy_boto3_builder/parsers/docstring_parser/syntax_grammar/#signature_3","text":"@classmethod def reset ( cls ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/","text":"TypeDocGrammar Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeDocGrammar Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_doc_grammar module. TypeDocGrammar Show source in type_doc_grammar.py:19 Grammar to parse boto3 docs syntax. EOL ::= [\"\\r\"] \"\\n\" SOL ::= LINE_START line ::= [^EOL]+ EOL word ::= alphanums + \"_\" indented_block ::= INDENT (line_indented | any_line) line_indented ::= any_line indented_block type_definition ::= \":type\" [^:]+ \":\" [^EOL]+ rtype_definition ::= \":rtype:\" [^EOL]+ returns_definition ::= (\":returns:\" | \":return:\") [^EOL]+ param_definition ::= \":param\" [^:]+ \":\" [^EOL]+ EOL [indented_block] response_structure ::= \" Response Structure \" line [indented_block] typed_dict_key_line ::= \"-\" \" \" word \" \" \" (\" word \")\" \"-- \" [^EOL]+ + EOL type_line ::= \"-\" \" (\" word \")\" \"-- \" [^EOL]+ + EOL any_line ::= typed_dict_key_line | type_line | line Signature class TypeDocGrammar : ... TypeDocGrammar.disable_packrat Show source in type_doc_grammar.py:136 Disable packrat boost. Signature @staticmethod def disable_packrat () -> None : ... TypeDocGrammar.enable_packrat Show source in type_doc_grammar.py:129 Enable packrat boost. Signature @staticmethod def enable_packrat () -> None : ... TypeDocGrammar.fail_action Show source in type_doc_grammar.py:109 Check for input end. Signature @classmethod def fail_action ( cls , _input_string : str , _chr_index : int , _source : ParserElement , error : BaseException , ) -> None : ... TypeDocGrammar.reset Show source in type_doc_grammar.py:119 Reset call stack and packrat. Signature @classmethod def reset ( cls ) -> None : ...","title":"TypeDocGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammar","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeDocGrammar Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_doc_grammar module.","title":"TypeDocGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammar_1","text":"Show source in type_doc_grammar.py:19 Grammar to parse boto3 docs syntax. EOL ::= [\"\\r\"] \"\\n\" SOL ::= LINE_START line ::= [^EOL]+ EOL word ::= alphanums + \"_\" indented_block ::= INDENT (line_indented | any_line) line_indented ::= any_line indented_block type_definition ::= \":type\" [^:]+ \":\" [^EOL]+ rtype_definition ::= \":rtype:\" [^EOL]+ returns_definition ::= (\":returns:\" | \":return:\") [^EOL]+ param_definition ::= \":param\" [^:]+ \":\" [^EOL]+ EOL [indented_block] response_structure ::= \" Response Structure \" line [indented_block] typed_dict_key_line ::= \"-\" \" \" word \" \" \" (\" word \")\" \"-- \" [^EOL]+ + EOL type_line ::= \"-\" \" (\" word \")\" \"-- \" [^EOL]+ + EOL any_line ::= typed_dict_key_line | type_line | line","title":"TypeDocGrammar"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#signature","text":"class TypeDocGrammar : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammardisable_packrat","text":"Show source in type_doc_grammar.py:136 Disable packrat boost.","title":"TypeDocGrammar.disable_packrat"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#signature_1","text":"@staticmethod def disable_packrat () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammarenable_packrat","text":"Show source in type_doc_grammar.py:129 Enable packrat boost.","title":"TypeDocGrammar.enable_packrat"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#signature_2","text":"@staticmethod def enable_packrat () -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammarfail_action","text":"Show source in type_doc_grammar.py:109 Check for input end.","title":"TypeDocGrammar.fail_action"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#signature_3","text":"@classmethod def fail_action ( cls , _input_string : str , _chr_index : int , _source : ParserElement , error : BaseException , ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#typedocgrammarreset","text":"Show source in type_doc_grammar.py:119 Reset call stack and packrat.","title":"TypeDocGrammar.reset"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_grammar/#signature_4","text":"@classmethod def reset ( cls ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/","text":"TypeDocLine Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeDocLine Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_doc_line module. TypeDocLine Show source in type_doc_line.py:10 Structure for parsed as dict :type: or :rtype: nested lines. Arguments name - Argument or TypedDict key name type_name - Argument or TypedDict key type string. line - Raw original line parts. description - Rest of line for argument or TypedDict key definition. indented - Intended lines. Signature class TypeDocLine : def __init__ ( self , name : str = \"\" , type_name : str = \"\" , line : Iterable [ str ] = tuple (), description : str = \"\" , indented : Iterable [ Mapping [ str , object ]] = tuple (), ) -> None : ... TypeDocLine().indented Show source in type_doc_line.py:36 Get indented lines list. Returns A list of TypeDocLine . Signature @property def indented ( self : _R ) -> list [ _R ]: ... TypeDocLine().render Show source in type_doc_line.py:56 Get original string with indentation. Returns A string as close as possible to original. Signature def render ( self ) -> str : ... TypeDocLine().required Show source in type_doc_line.py:49 Whether the argument or TypedDict key is required. Signature @property def required ( self ) -> bool : ...","title":"TypeDocLine"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#typedocline","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeDocLine Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_doc_line module.","title":"TypeDocLine"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#typedocline_1","text":"Show source in type_doc_line.py:10 Structure for parsed as dict :type: or :rtype: nested lines.","title":"TypeDocLine"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#arguments","text":"name - Argument or TypedDict key name type_name - Argument or TypedDict key type string. line - Raw original line parts. description - Rest of line for argument or TypedDict key definition. indented - Intended lines.","title":"Arguments"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#signature","text":"class TypeDocLine : def __init__ ( self , name : str = \"\" , type_name : str = \"\" , line : Iterable [ str ] = tuple (), description : str = \"\" , indented : Iterable [ Mapping [ str , object ]] = tuple (), ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#typedoclineindented","text":"Show source in type_doc_line.py:36 Get indented lines list.","title":"TypeDocLine().indented"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#returns","text":"A list of TypeDocLine .","title":"Returns"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#signature_1","text":"@property def indented ( self : _R ) -> list [ _R ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#typedoclinerender","text":"Show source in type_doc_line.py:56 Get original string with indentation.","title":"TypeDocLine().render"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#returns_1","text":"A string as close as possible to original.","title":"Returns"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#signature_2","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#typedoclinerequired","text":"Show source in type_doc_line.py:49 Whether the argument or TypedDict key is required.","title":"TypeDocLine().required"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_doc_line/#signature_3","text":"@property def required ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/","text":"TypeValue Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeValue Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_value module. TypeValue Show source in type_value.py:20 Structure for parsed as dict request or response syntax values. Signature class TypeValue : def __init__ ( self , service_name : ServiceName , prefix : str , value : dict [ str , Any ] ) -> None : ... See also ServiceName TypeValue().get_type Show source in type_value.py:218 Get value type. Signature def get_type ( self ) -> FakeAnnotation : ... See also FakeAnnotation TypeValue().is_dict Show source in type_value.py:49 Whether value is Dict. Signature def is_dict ( self ) -> bool : ... TypeValue().is_func_call Show source in type_value.py:79 Whether value is Callable. Signature def is_func_call ( self ) -> bool : ... TypeValue().is_list Show source in type_value.py:55 Whether value is List. Signature def is_list ( self ) -> bool : ... TypeValue().is_literal Show source in type_value.py:61 Whether value is Literal. Signature def is_literal ( self ) -> bool : ... TypeValue().is_literal_item Show source in type_value.py:184 Whether value is Literal item. Signature def is_literal_item ( self ) -> bool : ... TypeValue().is_plain Show source in type_value.py:85 Whether value is not None. Signature def is_plain ( self ) -> bool : ... TypeValue().is_set Show source in type_value.py:67 Whether value is Set. Signature def is_set ( self ) -> bool : ... TypeValue().is_union Show source in type_value.py:73 Whether value is Union. Signature def is_union ( self ) -> bool : ...","title":"TypeValue"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalue","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Parsers / Docstring Parser / TypeValue Auto-generated documentation for mypy_boto3_builder.parsers.docstring_parser.type_value module.","title":"TypeValue"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalue_1","text":"Show source in type_value.py:20 Structure for parsed as dict request or response syntax values.","title":"TypeValue"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature","text":"class TypeValue : def __init__ ( self , service_name : ServiceName , prefix : str , value : dict [ str , Any ] ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueget_type","text":"Show source in type_value.py:218 Get value type.","title":"TypeValue().get_type"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_1","text":"def get_type ( self ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_dict","text":"Show source in type_value.py:49 Whether value is Dict.","title":"TypeValue().is_dict"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_2","text":"def is_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_func_call","text":"Show source in type_value.py:79 Whether value is Callable.","title":"TypeValue().is_func_call"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_3","text":"def is_func_call ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_list","text":"Show source in type_value.py:55 Whether value is List.","title":"TypeValue().is_list"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_4","text":"def is_list ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_literal","text":"Show source in type_value.py:61 Whether value is Literal.","title":"TypeValue().is_literal"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_5","text":"def is_literal ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_literal_item","text":"Show source in type_value.py:184 Whether value is Literal item.","title":"TypeValue().is_literal_item"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_6","text":"def is_literal_item ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_plain","text":"Show source in type_value.py:85 Whether value is not None.","title":"TypeValue().is_plain"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_7","text":"def is_plain ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_set","text":"Show source in type_value.py:67 Whether value is Set.","title":"TypeValue().is_set"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_8","text":"def is_set ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#typevalueis_union","text":"Show source in type_value.py:73 Whether value is Union.","title":"TypeValue().is_union"},{"location":"mypy_boto3_builder/parsers/docstring_parser/type_value/#signature_9","text":"def is_union ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/","text":"Postprocessors Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors Auto-generated documentation for mypy_boto3_builder.postprocessors module. Modules Aiobotocore Base Botocore","title":"Postprocessors"},{"location":"mypy_boto3_builder/postprocessors/#postprocessors","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors Auto-generated documentation for mypy_boto3_builder.postprocessors module.","title":"Postprocessors"},{"location":"mypy_boto3_builder/postprocessors/#modules","text":"Aiobotocore Base Botocore","title":"Modules"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/","text":"Aiobotocore Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Aiobotocore Auto-generated documentation for mypy_boto3_builder.postprocessors.aiobotocore module. AioBotocorePostprocessor Show source in aiobotocore.py:18 Postprocessor for aiobotocore classes and methods. Signature class AioBotocorePostprocessor ( BasePostprocessor ): ... See also BasePostprocessor AioBotocorePostprocessor().process_package Show source in aiobotocore.py:68 Convert all methods to asynchronous. Signature def process_package ( self ) -> None : ...","title":"Aiobotocore"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#aiobotocore","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Aiobotocore Auto-generated documentation for mypy_boto3_builder.postprocessors.aiobotocore module.","title":"Aiobotocore"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#aiobotocorepostprocessor","text":"Show source in aiobotocore.py:18 Postprocessor for aiobotocore classes and methods.","title":"AioBotocorePostprocessor"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#signature","text":"class AioBotocorePostprocessor ( BasePostprocessor ): ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#see-also","text":"BasePostprocessor","title":"See also"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#aiobotocorepostprocessorprocess_package","text":"Show source in aiobotocore.py:68 Convert all methods to asynchronous.","title":"AioBotocorePostprocessor().process_package"},{"location":"mypy_boto3_builder/postprocessors/aiobotocore/#signature_1","text":"def process_package ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/base/","text":"Base Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Base Auto-generated documentation for mypy_boto3_builder.postprocessors.base module. BasePostprocessor Show source in base.py:15 Base postprocessor for classes and methods. Arguments session - Boto3 session package - Service package service_names - Available service names Signature class BasePostprocessor ( ABC ): def __init__ ( self , session : Session , package : ServicePackage , service_names : Sequence [ ServiceName ], ) -> None : ... See also ServiceName ServicePackage BasePostprocessor().extend_literals Show source in base.py:173 Add extra literals. <Class>ServiceName ServiceName ResourceServiceName PaginatorName WaiterName RegionName Signature def extend_literals ( self ) -> None : ... BasePostprocessor().generate_docstrings Show source in base.py:33 Generate all docstrings. Signature def generate_docstrings ( self ) -> None : ... BasePostprocessor().process_package Show source in base.py:44 Postprocess built package. Signature @abstractmethod def process_package ( self ) -> None : ... BasePostprocessor().replace_self_ref_typed_dicts Show source in base.py:212 Remove self-references from TypedDicts. Signature def replace_self_ref_typed_dicts ( self ) -> None : ...","title":"Base"},{"location":"mypy_boto3_builder/postprocessors/base/#base","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Base Auto-generated documentation for mypy_boto3_builder.postprocessors.base module.","title":"Base"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessor","text":"Show source in base.py:15 Base postprocessor for classes and methods.","title":"BasePostprocessor"},{"location":"mypy_boto3_builder/postprocessors/base/#arguments","text":"session - Boto3 session package - Service package service_names - Available service names","title":"Arguments"},{"location":"mypy_boto3_builder/postprocessors/base/#signature","text":"class BasePostprocessor ( ABC ): def __init__ ( self , session : Session , package : ServicePackage , service_names : Sequence [ ServiceName ], ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/base/#see-also","text":"ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorextend_literals","text":"Show source in base.py:173 Add extra literals. <Class>ServiceName ServiceName ResourceServiceName PaginatorName WaiterName RegionName","title":"BasePostprocessor().extend_literals"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_1","text":"def extend_literals ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorgenerate_docstrings","text":"Show source in base.py:33 Generate all docstrings.","title":"BasePostprocessor().generate_docstrings"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_2","text":"def generate_docstrings ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorprocess_package","text":"Show source in base.py:44 Postprocess built package.","title":"BasePostprocessor().process_package"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_3","text":"@abstractmethod def process_package ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/base/#basepostprocessorreplace_self_ref_typed_dicts","text":"Show source in base.py:212 Remove self-references from TypedDicts.","title":"BasePostprocessor().replace_self_ref_typed_dicts"},{"location":"mypy_boto3_builder/postprocessors/base/#signature_4","text":"def replace_self_ref_typed_dicts ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/botocore/","text":"Botocore Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Botocore Auto-generated documentation for mypy_boto3_builder.postprocessors.botocore module. BotocorePostprocessor Show source in botocore.py:7 Postprocessor for botocore classes and methods. Signature class BotocorePostprocessor ( BasePostprocessor ): ... See also BasePostprocessor BotocorePostprocessor().process_package Show source in botocore.py:12 Leave package as it is. Signature def process_package ( self ) -> None : ...","title":"Botocore"},{"location":"mypy_boto3_builder/postprocessors/botocore/#botocore","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Postprocessors / Botocore Auto-generated documentation for mypy_boto3_builder.postprocessors.botocore module.","title":"Botocore"},{"location":"mypy_boto3_builder/postprocessors/botocore/#botocorepostprocessor","text":"Show source in botocore.py:7 Postprocessor for botocore classes and methods.","title":"BotocorePostprocessor"},{"location":"mypy_boto3_builder/postprocessors/botocore/#signature","text":"class BotocorePostprocessor ( BasePostprocessor ): ...","title":"Signature"},{"location":"mypy_boto3_builder/postprocessors/botocore/#see-also","text":"BasePostprocessor","title":"See also"},{"location":"mypy_boto3_builder/postprocessors/botocore/#botocorepostprocessorprocess_package","text":"Show source in botocore.py:12 Leave package as it is.","title":"BotocorePostprocessor().process_package"},{"location":"mypy_boto3_builder/postprocessors/botocore/#signature_1","text":"def process_package ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/","text":"Structures Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures Auto-generated documentation for mypy_boto3_builder.structures module. Modules AioBotocoreStubsPackage Argument Attribute Boto3StubsPackage ClassRecord Client Collection Function MasterPackage Method Package Paginator Resource ServicePackage ServiceResource TypesAioBoto3Package Waiter","title":"Structures"},{"location":"mypy_boto3_builder/structures/#structures","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures Auto-generated documentation for mypy_boto3_builder.structures module.","title":"Structures"},{"location":"mypy_boto3_builder/structures/#modules","text":"AioBotocoreStubsPackage Argument Attribute Boto3StubsPackage ClassRecord Client Collection Function MasterPackage Method Package Paginator Resource ServicePackage ServiceResource TypesAioBoto3Package Waiter","title":"Modules"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/","text":"AioBotocoreStubsPackage Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / AioBotocoreStubsPackage Auto-generated documentation for mypy_boto3_builder.structures.aiobotocore_stubs_package module. AioBotocoreStubsPackage Show source in aiobotocore_stubs_package.py:18 Structure for types-aiobotocore module. Signature class AioBotocoreStubsPackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), init_functions : Iterable [ Function ] = tuple (), ): ... See also BasePackageData Function Package ServiceName ServicePackage AioBotocoreStubsPackage().essential_service_names Show source in aiobotocore_stubs_package.py:37 Service names marked as essential. Signature @property def essential_service_names ( self ) -> list [ ServiceName ]: ... See also ServiceName AioBotocoreStubsPackage().get_all_names Show source in aiobotocore_stubs_package.py:90 Get names for __all__ directive. Signature def get_all_names ( self ) -> list [ str ]: ... AioBotocoreStubsPackage().get_session_required_import_records Show source in aiobotocore_stubs_package.py:48 Get import reciords for session.py[i] . Signature def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord","title":"AioBotocoreStubsPackage"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackage","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / AioBotocoreStubsPackage Auto-generated documentation for mypy_boto3_builder.structures.aiobotocore_stubs_package module.","title":"AioBotocoreStubsPackage"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackage_1","text":"Show source in aiobotocore_stubs_package.py:18 Structure for types-aiobotocore module.","title":"AioBotocoreStubsPackage"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature","text":"class AioBotocoreStubsPackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), init_functions : Iterable [ Function ] = tuple (), ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also","text":"BasePackageData Function Package ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageessential_service_names","text":"Show source in aiobotocore_stubs_package.py:37 Service names marked as essential.","title":"AioBotocoreStubsPackage().essential_service_names"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_1","text":"@property def essential_service_names ( self ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageget_all_names","text":"Show source in aiobotocore_stubs_package.py:90 Get names for __all__ directive.","title":"AioBotocoreStubsPackage().get_all_names"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_2","text":"def get_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#aiobotocorestubspackageget_session_required_import_records","text":"Show source in aiobotocore_stubs_package.py:48 Get import reciords for session.py[i] .","title":"AioBotocoreStubsPackage().get_session_required_import_records"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#signature_3","text":"def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/aiobotocore_stubs_package/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/argument/","text":"Argument Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Argument Auto-generated documentation for mypy_boto3_builder.structures.argument module. Argument Show source in argument.py:12 Method or function argument. Arguments name - Argument name. type_annotation - Argument type annotation. value - Default argument value. prefix - Used for starargs. Signature class Argument : def __init__ ( self , name : str , type_annotation : FakeAnnotation | None , default : TypeConstant | None = None , prefix : str = \"\" , ): ... Argument().is_kwflag Show source in argument.py:54 Whether argument is a * keywords separator. Signature def is_kwflag ( self ) -> bool : ... Argument().iterate_types Show source in argument.py:60 Extract required type annotations. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation Argument.kwflag Show source in argument.py:47 Create * keywords separator. Signature @classmethod def kwflag ( cls : type [ _R ]) -> _R : ... Argument().render Show source in argument.py:35 Render argument to a string. Signature def render ( self ) -> str : ... Argument().required Show source in argument.py:69 Whether argument does not have a default value and is required. Signature @property def required ( self ) -> bool : ...","title":"Argument"},{"location":"mypy_boto3_builder/structures/argument/#argument","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Argument Auto-generated documentation for mypy_boto3_builder.structures.argument module.","title":"Argument"},{"location":"mypy_boto3_builder/structures/argument/#argument_1","text":"Show source in argument.py:12 Method or function argument.","title":"Argument"},{"location":"mypy_boto3_builder/structures/argument/#arguments","text":"name - Argument name. type_annotation - Argument type annotation. value - Default argument value. prefix - Used for starargs.","title":"Arguments"},{"location":"mypy_boto3_builder/structures/argument/#signature","text":"class Argument : def __init__ ( self , name : str , type_annotation : FakeAnnotation | None , default : TypeConstant | None = None , prefix : str = \"\" , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/argument/#argumentis_kwflag","text":"Show source in argument.py:54 Whether argument is a * keywords separator.","title":"Argument().is_kwflag"},{"location":"mypy_boto3_builder/structures/argument/#signature_1","text":"def is_kwflag ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/argument/#argumentiterate_types","text":"Show source in argument.py:60 Extract required type annotations.","title":"Argument().iterate_types"},{"location":"mypy_boto3_builder/structures/argument/#signature_2","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/argument/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/argument/#argumentkwflag","text":"Show source in argument.py:47 Create * keywords separator.","title":"Argument.kwflag"},{"location":"mypy_boto3_builder/structures/argument/#signature_3","text":"@classmethod def kwflag ( cls : type [ _R ]) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/argument/#argumentrender","text":"Show source in argument.py:35 Render argument to a string.","title":"Argument().render"},{"location":"mypy_boto3_builder/structures/argument/#signature_4","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/argument/#argumentrequired","text":"Show source in argument.py:69 Whether argument does not have a default value and is required.","title":"Argument().required"},{"location":"mypy_boto3_builder/structures/argument/#signature_5","text":"@property def required ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/attribute/","text":"Attribute Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Attribute Auto-generated documentation for mypy_boto3_builder.structures.attribute module. Attribute Show source in attribute.py:10 Class or module attribute. Attributes name - Attribute name. type - Attribute type annotation. value - Attribute value. type_ignore - Add type: ignore comment. Signature class Attribute : def __init__ ( self , name : str , type_annotation : FakeAnnotation , value : TypeConstant | None = None , type_ignore : bool = False , ): ... See also FakeAnnotation Attribute().iterate_types Show source in attribute.py:33 Iterate over all type annotations used. Yields Type annotation. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation Attribute().render Show source in attribute.py:42 Render to a string. Signature def render ( self ) -> str : ...","title":"Attribute"},{"location":"mypy_boto3_builder/structures/attribute/#attribute","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Attribute Auto-generated documentation for mypy_boto3_builder.structures.attribute module.","title":"Attribute"},{"location":"mypy_boto3_builder/structures/attribute/#attribute_1","text":"Show source in attribute.py:10 Class or module attribute.","title":"Attribute"},{"location":"mypy_boto3_builder/structures/attribute/#attributes","text":"name - Attribute name. type - Attribute type annotation. value - Attribute value. type_ignore - Add type: ignore comment.","title":"Attributes"},{"location":"mypy_boto3_builder/structures/attribute/#signature","text":"class Attribute : def __init__ ( self , name : str , type_annotation : FakeAnnotation , value : TypeConstant | None = None , type_ignore : bool = False , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/attribute/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/attribute/#attributeiterate_types","text":"Show source in attribute.py:33 Iterate over all type annotations used.","title":"Attribute().iterate_types"},{"location":"mypy_boto3_builder/structures/attribute/#yields","text":"Type annotation.","title":"Yields"},{"location":"mypy_boto3_builder/structures/attribute/#signature_1","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/attribute/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/attribute/#attributerender","text":"Show source in attribute.py:42 Render to a string.","title":"Attribute().render"},{"location":"mypy_boto3_builder/structures/attribute/#signature_2","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/","text":"Boto3StubsPackage Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Boto3StubsPackage Auto-generated documentation for mypy_boto3_builder.structures.boto3_stubs_package module. Boto3StubsPackage Show source in boto3_stubs_package.py:18 Structure for boto3-stubs module. Signature class Boto3StubsPackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), init_functions : Iterable [ Function ] = tuple (), literals : Iterable [ TypeLiteral ] = tuple (), ): ... See also BasePackageData Function Package ServiceName ServicePackage TypeLiteral Boto3StubsPackage().essential_service_names Show source in boto3_stubs_package.py:39 Service names marked as essential. Signature @property def essential_service_names ( self ) -> list [ ServiceName ]: ... See also ServiceName Boto3StubsPackage().get_all_names Show source in boto3_stubs_package.py:112 Get names for __all__ directive. Signature def get_all_names ( self ) -> list [ str ]: ... Boto3StubsPackage().get_init_required_import_records Show source in boto3_stubs_package.py:50 Get import records for __init__.py[i] . Signature def get_init_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord Boto3StubsPackage().get_session_required_import_records Show source in boto3_stubs_package.py:69 Get import reciords for session.py[i] . Signature def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord","title":"Boto3StubsPackage"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackage","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Boto3StubsPackage Auto-generated documentation for mypy_boto3_builder.structures.boto3_stubs_package module.","title":"Boto3StubsPackage"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackage_1","text":"Show source in boto3_stubs_package.py:18 Structure for boto3-stubs module.","title":"Boto3StubsPackage"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature","text":"class Boto3StubsPackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), init_functions : Iterable [ Function ] = tuple (), literals : Iterable [ TypeLiteral ] = tuple (), ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also","text":"BasePackageData Function Package ServiceName ServicePackage TypeLiteral","title":"See also"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageessential_service_names","text":"Show source in boto3_stubs_package.py:39 Service names marked as essential.","title":"Boto3StubsPackage().essential_service_names"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_1","text":"@property def essential_service_names ( self ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_all_names","text":"Show source in boto3_stubs_package.py:112 Get names for __all__ directive.","title":"Boto3StubsPackage().get_all_names"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_2","text":"def get_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_init_required_import_records","text":"Show source in boto3_stubs_package.py:50 Get import records for __init__.py[i] .","title":"Boto3StubsPackage().get_init_required_import_records"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_3","text":"def get_init_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#boto3stubspackageget_session_required_import_records","text":"Show source in boto3_stubs_package.py:69 Get import reciords for session.py[i] .","title":"Boto3StubsPackage().get_session_required_import_records"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#signature_4","text":"def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/boto3_stubs_package/#see-also_3","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/","text":"ClassRecord Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ClassRecord Auto-generated documentation for mypy_boto3_builder.structures.class_record module. ClassRecord Show source in class_record.py:16 Base class for all structures that can be rendered to a class. Signature class ClassRecord : def __init__ ( self , name : str , methods : Iterable [ Method ] = tuple (), attributes : Iterable [ Attribute ] = tuple (), bases : Iterable [ FakeAnnotation ] = tuple (), use_alias : bool = False , ): ... See also Attribute FakeAnnotation Method ClassRecord().alias_name Show source in class_record.py:45 Class alias name for safe import. Signature @property def alias_name ( self ) -> str : ... ClassRecord().boto3_doc_link Show source in class_record.py:38 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... ClassRecord().get_internal_imports Show source in class_record.py:86 Get internal imports from methods. Signature def get_internal_imports ( self ) -> set [ InternalImport ]: ... See also InternalImport ClassRecord().get_method Show source in class_record.py:113 Get method by name. Signature def get_method ( self , name : str ) -> Method : ... See also Method ClassRecord().get_required_import_records Show source in class_record.py:73 Extract import records from required type annotations. Signature def get_required_import_records ( self ) -> set [ ImportRecord ]: ... See also ImportRecord ClassRecord().iterate_types Show source in class_record.py:62 Iterate over type annotations for methods, attributes and bases. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation ClassRecord().method_names Show source in class_record.py:106 Unique method names. Signature @property def method_names ( self ) -> list [ str ]: ... ClassRecord().render_alias Show source in class_record.py:56 Render alias expression. Signature def render_alias ( self ) -> str : ... ClassRecord().variable_name Show source in class_record.py:99 Variable name for an instance of this class. Signature @property def variable_name ( self ) -> str : ...","title":"ClassRecord"},{"location":"mypy_boto3_builder/structures/class_record/#classrecord","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ClassRecord Auto-generated documentation for mypy_boto3_builder.structures.class_record module.","title":"ClassRecord"},{"location":"mypy_boto3_builder/structures/class_record/#classrecord_1","text":"Show source in class_record.py:16 Base class for all structures that can be rendered to a class.","title":"ClassRecord"},{"location":"mypy_boto3_builder/structures/class_record/#signature","text":"class ClassRecord : def __init__ ( self , name : str , methods : Iterable [ Method ] = tuple (), attributes : Iterable [ Attribute ] = tuple (), bases : Iterable [ FakeAnnotation ] = tuple (), use_alias : bool = False , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#see-also","text":"Attribute FakeAnnotation Method","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordalias_name","text":"Show source in class_record.py:45 Class alias name for safe import.","title":"ClassRecord().alias_name"},{"location":"mypy_boto3_builder/structures/class_record/#signature_1","text":"@property def alias_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordboto3_doc_link","text":"Show source in class_record.py:38 Link to boto3 docs.","title":"ClassRecord().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/class_record/#signature_2","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_internal_imports","text":"Show source in class_record.py:86 Get internal imports from methods.","title":"ClassRecord().get_internal_imports"},{"location":"mypy_boto3_builder/structures/class_record/#signature_3","text":"def get_internal_imports ( self ) -> set [ InternalImport ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_1","text":"InternalImport","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_method","text":"Show source in class_record.py:113 Get method by name.","title":"ClassRecord().get_method"},{"location":"mypy_boto3_builder/structures/class_record/#signature_4","text":"def get_method ( self , name : str ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_2","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordget_required_import_records","text":"Show source in class_record.py:73 Extract import records from required type annotations.","title":"ClassRecord().get_required_import_records"},{"location":"mypy_boto3_builder/structures/class_record/#signature_5","text":"def get_required_import_records ( self ) -> set [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_3","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/#classrecorditerate_types","text":"Show source in class_record.py:62 Iterate over type annotations for methods, attributes and bases.","title":"ClassRecord().iterate_types"},{"location":"mypy_boto3_builder/structures/class_record/#signature_6","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#see-also_4","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordmethod_names","text":"Show source in class_record.py:106 Unique method names.","title":"ClassRecord().method_names"},{"location":"mypy_boto3_builder/structures/class_record/#signature_7","text":"@property def method_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordrender_alias","text":"Show source in class_record.py:56 Render alias expression.","title":"ClassRecord().render_alias"},{"location":"mypy_boto3_builder/structures/class_record/#signature_8","text":"def render_alias ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/class_record/#classrecordvariable_name","text":"Show source in class_record.py:99 Variable name for an instance of this class.","title":"ClassRecord().variable_name"},{"location":"mypy_boto3_builder/structures/class_record/#signature_9","text":"@property def variable_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/","text":"Client Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Client Auto-generated documentation for mypy_boto3_builder.structures.client module. Client Show source in client.py:22 Boto3 Client. Signature class Client ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName , boto3_client : BaseClient ) -> None : ... See also ClassRecord ServiceName Client(). hash Show source in client.py:58 Calculate hash from client service name. Signature def __hash__ ( self ) -> int : ... Client().boto3_doc_link Show source in client.py:71 List to boto3 docs page. Signature @property def boto3_doc_link ( self ) -> str : ... Client().get_all_names Show source in client.py:78 Get a list of names for __all__ statement. Signature def get_all_names ( self ) -> list [ str ]: ... Client.get_class_name Show source in client.py:64 Get class name for ServiceName. Signature @staticmethod def get_class_name ( service_name : ServiceName ) -> str : ... See also ServiceName Client().get_example_method Show source in client.py:120 Get a nice method with return TypedDict for documentation. Signature def get_example_method ( self ) -> Method | None : ... Client().get_exceptions_property Show source in client.py:93 Generate Client exceptions property. Signature def get_exceptions_property ( self ) -> Method : ... See also Method Client().get_required_import_records Show source in client.py:112 Extract import records from required type annotations. Signature def get_required_import_records ( self ) -> set [ ImportRecord ]: ... See also ImportRecord Client().own_methods Show source in client.py:84 Get a list of auto-generated methods. Signature @property def own_methods ( self ) -> Iterator [ Method ]: ... See also Method","title":"Client"},{"location":"mypy_boto3_builder/structures/client/#client","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Client Auto-generated documentation for mypy_boto3_builder.structures.client module.","title":"Client"},{"location":"mypy_boto3_builder/structures/client/#client_1","text":"Show source in client.py:22 Boto3 Client.","title":"Client"},{"location":"mypy_boto3_builder/structures/client/#signature","text":"class Client ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName , boto3_client : BaseClient ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#see-also","text":"ClassRecord ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/client/#clienthash","text":"Show source in client.py:58 Calculate hash from client service name.","title":"Client().hash"},{"location":"mypy_boto3_builder/structures/client/#signature_1","text":"def __hash__ ( self ) -> int : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#clientboto3_doc_link","text":"Show source in client.py:71 List to boto3 docs page.","title":"Client().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/client/#signature_2","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#clientget_all_names","text":"Show source in client.py:78 Get a list of names for __all__ statement.","title":"Client().get_all_names"},{"location":"mypy_boto3_builder/structures/client/#signature_3","text":"def get_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#clientget_class_name","text":"Show source in client.py:64 Get class name for ServiceName.","title":"Client.get_class_name"},{"location":"mypy_boto3_builder/structures/client/#signature_4","text":"@staticmethod def get_class_name ( service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/client/#clientget_example_method","text":"Show source in client.py:120 Get a nice method with return TypedDict for documentation.","title":"Client().get_example_method"},{"location":"mypy_boto3_builder/structures/client/#signature_5","text":"def get_example_method ( self ) -> Method | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#clientget_exceptions_property","text":"Show source in client.py:93 Generate Client exceptions property.","title":"Client().get_exceptions_property"},{"location":"mypy_boto3_builder/structures/client/#signature_6","text":"def get_exceptions_property ( self ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#see-also_2","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/structures/client/#clientget_required_import_records","text":"Show source in client.py:112 Extract import records from required type annotations.","title":"Client().get_required_import_records"},{"location":"mypy_boto3_builder/structures/client/#signature_7","text":"def get_required_import_records ( self ) -> set [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#see-also_3","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/client/#clientown_methods","text":"Show source in client.py:84 Get a list of auto-generated methods.","title":"Client().own_methods"},{"location":"mypy_boto3_builder/structures/client/#signature_8","text":"@property def own_methods ( self ) -> Iterator [ Method ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/client/#see-also_4","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/structures/collection/","text":"Collection Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Collection Auto-generated documentation for mypy_boto3_builder.structures.collection module. Collection Show source in collection.py:13 Boto3 ServiceResource or Resource collection. Signature class Collection ( ClassRecord ): def __init__ ( self , name : str , attribute_name : str , parent_name : str , service_name : ServiceName , type_annotation : FakeAnnotation , object_class_name : str , ): ... See also ClassRecord FakeAnnotation ServiceName Collection().boto3_doc_link Show source in collection.py:43 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... Collection().iterate_types Show source in collection.py:50 Iterate over all type annotations. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation","title":"Collection"},{"location":"mypy_boto3_builder/structures/collection/#collection","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Collection Auto-generated documentation for mypy_boto3_builder.structures.collection module.","title":"Collection"},{"location":"mypy_boto3_builder/structures/collection/#collection_1","text":"Show source in collection.py:13 Boto3 ServiceResource or Resource collection.","title":"Collection"},{"location":"mypy_boto3_builder/structures/collection/#signature","text":"class Collection ( ClassRecord ): def __init__ ( self , name : str , attribute_name : str , parent_name : str , service_name : ServiceName , type_annotation : FakeAnnotation , object_class_name : str , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/collection/#see-also","text":"ClassRecord FakeAnnotation ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/collection/#collectionboto3_doc_link","text":"Show source in collection.py:43 Link to boto3 docs.","title":"Collection().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/collection/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/collection/#collectioniterate_types","text":"Show source in collection.py:50 Iterate over all type annotations.","title":"Collection().iterate_types"},{"location":"mypy_boto3_builder/structures/collection/#signature_2","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/collection/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/function/","text":"Function Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Function Auto-generated documentation for mypy_boto3_builder.structures.function module. Function Show source in function.py:14 Module-level function. Signature class Function : def __init__ ( self , name : str , arguments : Iterable [ Argument ], return_type : FakeAnnotation , docstring : str = \"\" , decorators : Iterable [ FakeAnnotation ] = tuple (), body_lines : Iterable [ str ] = tuple (), type_ignore : bool = False , is_async : bool = False , ): ... See also Argument FakeAnnotation Function().body Show source in function.py:74 Function body as a string. Signature @property def body ( self ) -> str : ... Function().create_request_type_annotation Show source in function.py:53 Create and set request_type_annotation TypedDict based on function arguments. Signature def create_request_type_annotation ( self , name : str ) -> None : ... Function().get_required_import_records Show source in function.py:91 Extract required import records. Signature def get_required_import_records ( self ) -> set [ ImportRecord ]: ... See also ImportRecord Function().is_kw_only Show source in function.py:111 Whether method arguments can be passed only as kwargs. Signature def is_kw_only ( self ) -> bool : ... Function().iterate_types Show source in function.py:81 Iterate over required type annotations. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation Function().returns_none Show source in function.py:104 Whether return type is None. Signature @property def returns_none ( self ) -> bool : ... Function().short_docstring Show source in function.py:40 Docstring without documentation links. Signature @property def short_docstring ( self ) -> str : ... Function().type_hint_annotations Show source in function.py:117 Type annotations list from arguments and return type with internal types. Signature @property def type_hint_annotations ( self ) -> list [ FakeAnnotation ]: ... See also FakeAnnotation","title":"Function"},{"location":"mypy_boto3_builder/structures/function/#function","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Function Auto-generated documentation for mypy_boto3_builder.structures.function module.","title":"Function"},{"location":"mypy_boto3_builder/structures/function/#function_1","text":"Show source in function.py:14 Module-level function.","title":"Function"},{"location":"mypy_boto3_builder/structures/function/#signature","text":"class Function : def __init__ ( self , name : str , arguments : Iterable [ Argument ], return_type : FakeAnnotation , docstring : str = \"\" , decorators : Iterable [ FakeAnnotation ] = tuple (), body_lines : Iterable [ str ] = tuple (), type_ignore : bool = False , is_async : bool = False , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#see-also","text":"Argument FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/function/#functionbody","text":"Show source in function.py:74 Function body as a string.","title":"Function().body"},{"location":"mypy_boto3_builder/structures/function/#signature_1","text":"@property def body ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#functioncreate_request_type_annotation","text":"Show source in function.py:53 Create and set request_type_annotation TypedDict based on function arguments.","title":"Function().create_request_type_annotation"},{"location":"mypy_boto3_builder/structures/function/#signature_2","text":"def create_request_type_annotation ( self , name : str ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#functionget_required_import_records","text":"Show source in function.py:91 Extract required import records.","title":"Function().get_required_import_records"},{"location":"mypy_boto3_builder/structures/function/#signature_3","text":"def get_required_import_records ( self ) -> set [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/function/#functionis_kw_only","text":"Show source in function.py:111 Whether method arguments can be passed only as kwargs.","title":"Function().is_kw_only"},{"location":"mypy_boto3_builder/structures/function/#signature_4","text":"def is_kw_only ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#functioniterate_types","text":"Show source in function.py:81 Iterate over required type annotations.","title":"Function().iterate_types"},{"location":"mypy_boto3_builder/structures/function/#signature_5","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#see-also_2","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/function/#functionreturns_none","text":"Show source in function.py:104 Whether return type is None.","title":"Function().returns_none"},{"location":"mypy_boto3_builder/structures/function/#signature_6","text":"@property def returns_none ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#functionshort_docstring","text":"Show source in function.py:40 Docstring without documentation links.","title":"Function().short_docstring"},{"location":"mypy_boto3_builder/structures/function/#signature_7","text":"@property def short_docstring ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#functiontype_hint_annotations","text":"Show source in function.py:117 Type annotations list from arguments and return type with internal types.","title":"Function().type_hint_annotations"},{"location":"mypy_boto3_builder/structures/function/#signature_8","text":"@property def type_hint_annotations ( self ) -> list [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/function/#see-also_3","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/master_package/","text":"MasterPackage Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / MasterPackage Auto-generated documentation for mypy_boto3_builder.structures.master_package module. MasterPackage Show source in master_package.py:12 Structure for mypy-boto3 package. Arguments name - Module name. pypi_name - Module PyPI name. service_names - List of included service names. service_packages - List of included service packages. Signature class MasterPackage ( Package ): def __init__ ( self , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), ): ... See also Package ServiceName ServicePackage MasterPackage().essential_service_names Show source in master_package.py:31 List of services maked as essential. Signature @property def essential_service_names ( self ) -> list [ ServiceName ]: ... See also ServiceName","title":"MasterPackage"},{"location":"mypy_boto3_builder/structures/master_package/#masterpackage","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / MasterPackage Auto-generated documentation for mypy_boto3_builder.structures.master_package module.","title":"MasterPackage"},{"location":"mypy_boto3_builder/structures/master_package/#masterpackage_1","text":"Show source in master_package.py:12 Structure for mypy-boto3 package.","title":"MasterPackage"},{"location":"mypy_boto3_builder/structures/master_package/#arguments","text":"name - Module name. pypi_name - Module PyPI name. service_names - List of included service names. service_packages - List of included service packages.","title":"Arguments"},{"location":"mypy_boto3_builder/structures/master_package/#signature","text":"class MasterPackage ( Package ): def __init__ ( self , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/master_package/#see-also","text":"Package ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/structures/master_package/#masterpackageessential_service_names","text":"Show source in master_package.py:31 List of services maked as essential.","title":"MasterPackage().essential_service_names"},{"location":"mypy_boto3_builder/structures/master_package/#signature_1","text":"@property def essential_service_names ( self ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/master_package/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/method/","text":"Method Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Method Auto-generated documentation for mypy_boto3_builder.structures.method module. Method Show source in method.py:8 Class method. Signature class Method ( Function ): ... See also Function Method().call_arguments Show source in method.py:13 Arguments that are used in method call. Signature @property def call_arguments ( self ) -> list [ Argument ]: ... See also Argument","title":"Method"},{"location":"mypy_boto3_builder/structures/method/#method","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Method Auto-generated documentation for mypy_boto3_builder.structures.method module.","title":"Method"},{"location":"mypy_boto3_builder/structures/method/#method_1","text":"Show source in method.py:8 Class method.","title":"Method"},{"location":"mypy_boto3_builder/structures/method/#signature","text":"class Method ( Function ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/method/#see-also","text":"Function","title":"See also"},{"location":"mypy_boto3_builder/structures/method/#methodcall_arguments","text":"Show source in method.py:13 Arguments that are used in method call.","title":"Method().call_arguments"},{"location":"mypy_boto3_builder/structures/method/#signature_1","text":"@property def call_arguments ( self ) -> list [ Argument ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/method/#see-also_1","text":"Argument","title":"See also"},{"location":"mypy_boto3_builder/structures/package/","text":"Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Package Auto-generated documentation for mypy_boto3_builder.structures.package module. Package Show source in package.py:12 Parent class for all package structures. Signature class Package : def __init__ ( self , data : type [ BasePackageData ], service_names : Iterable [ ServiceName ] = tuple () ) -> None : ... See also BasePackageData ServiceName Package().directory_name Show source in package.py:31 Directory name to store generated package. Signature @property def directory_name ( self ) -> str : ... Package().get_local_doc_link Show source in package.py:42 Get link to local docs. Signature def get_local_doc_link ( self , service_name : ServiceName | None = None ) -> str : ... Package().get_module_name Show source in package.py:51 Get service module name. Signature def get_module_name ( self , service_name : ServiceName ) -> str : ... See also ServiceName Package().get_service_pypi_link Show source in package.py:63 Get link to PyPI. Signature def get_service_pypi_link ( self , service_name : ServiceName ) -> str : ... See also ServiceName Package().get_service_pypi_name Show source in package.py:57 Get PyPI package name for a service package. Signature def get_service_pypi_name ( self , service_name : ServiceName ) -> str : ... See also ServiceName Package().max_library_version Show source in package.py:76 Minimum required library version. Signature @property def max_library_version ( self ) -> str : ... Package().min_library_version Show source in package.py:69 Minimum required library version. Signature @property def min_library_version ( self ) -> str : ...","title":"Package"},{"location":"mypy_boto3_builder/structures/package/#package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Package Auto-generated documentation for mypy_boto3_builder.structures.package module.","title":"Package"},{"location":"mypy_boto3_builder/structures/package/#package_1","text":"Show source in package.py:12 Parent class for all package structures.","title":"Package"},{"location":"mypy_boto3_builder/structures/package/#signature","text":"class Package : def __init__ ( self , data : type [ BasePackageData ], service_names : Iterable [ ServiceName ] = tuple () ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#see-also","text":"BasePackageData ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/package/#packagedirectory_name","text":"Show source in package.py:31 Directory name to store generated package.","title":"Package().directory_name"},{"location":"mypy_boto3_builder/structures/package/#signature_1","text":"@property def directory_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#packageget_local_doc_link","text":"Show source in package.py:42 Get link to local docs.","title":"Package().get_local_doc_link"},{"location":"mypy_boto3_builder/structures/package/#signature_2","text":"def get_local_doc_link ( self , service_name : ServiceName | None = None ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#packageget_module_name","text":"Show source in package.py:51 Get service module name.","title":"Package().get_module_name"},{"location":"mypy_boto3_builder/structures/package/#signature_3","text":"def get_module_name ( self , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/package/#packageget_service_pypi_link","text":"Show source in package.py:63 Get link to PyPI.","title":"Package().get_service_pypi_link"},{"location":"mypy_boto3_builder/structures/package/#signature_4","text":"def get_service_pypi_link ( self , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#see-also_2","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/package/#packageget_service_pypi_name","text":"Show source in package.py:57 Get PyPI package name for a service package.","title":"Package().get_service_pypi_name"},{"location":"mypy_boto3_builder/structures/package/#signature_5","text":"def get_service_pypi_name ( self , service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#see-also_3","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/package/#packagemax_library_version","text":"Show source in package.py:76 Minimum required library version.","title":"Package().max_library_version"},{"location":"mypy_boto3_builder/structures/package/#signature_6","text":"@property def max_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/package/#packagemin_library_version","text":"Show source in package.py:69 Minimum required library version.","title":"Package().min_library_version"},{"location":"mypy_boto3_builder/structures/package/#signature_7","text":"@property def min_library_version ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/paginator/","text":"Paginator Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Paginator Auto-generated documentation for mypy_boto3_builder.structures.paginator module. Paginator Show source in paginator.py:16 Boto3 client Paginator. Signature class Paginator ( ClassRecord ): def __init__ ( self , name : str , paginator_name : str , operation_name : str , service_name : ServiceName , ): ... See also ClassRecord ServiceName Paginator().boto3_doc_link Show source in paginator.py:36 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... Paginator().get_client_method Show source in paginator.py:43 Get get_paginator method for Client . Signature def get_client_method ( self ) -> Method : ... See also Method","title":"Paginator"},{"location":"mypy_boto3_builder/structures/paginator/#paginator","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Paginator Auto-generated documentation for mypy_boto3_builder.structures.paginator module.","title":"Paginator"},{"location":"mypy_boto3_builder/structures/paginator/#paginator_1","text":"Show source in paginator.py:16 Boto3 client Paginator.","title":"Paginator"},{"location":"mypy_boto3_builder/structures/paginator/#signature","text":"class Paginator ( ClassRecord ): def __init__ ( self , name : str , paginator_name : str , operation_name : str , service_name : ServiceName , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/paginator/#see-also","text":"ClassRecord ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/paginator/#paginatorboto3_doc_link","text":"Show source in paginator.py:36 Link to boto3 docs.","title":"Paginator().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/paginator/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/paginator/#paginatorget_client_method","text":"Show source in paginator.py:43 Get get_paginator method for Client .","title":"Paginator().get_client_method"},{"location":"mypy_boto3_builder/structures/paginator/#signature_2","text":"def get_client_method ( self ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/paginator/#see-also_1","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/structures/resource/","text":"Resource Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Resource Auto-generated documentation for mypy_boto3_builder.structures.resource module. Resource Show source in resource.py:14 Boto3 ServiceResource sub-Resource. Signature class Resource ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName ): ... See also ClassRecord ServiceName Resource().boto3_doc_link Show source in resource.py:33 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... Resource().iterate_types Show source in resource.py:40 Iterate over all type annotations from collections. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation","title":"Resource"},{"location":"mypy_boto3_builder/structures/resource/#resource","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Resource Auto-generated documentation for mypy_boto3_builder.structures.resource module.","title":"Resource"},{"location":"mypy_boto3_builder/structures/resource/#resource_1","text":"Show source in resource.py:14 Boto3 ServiceResource sub-Resource.","title":"Resource"},{"location":"mypy_boto3_builder/structures/resource/#signature","text":"class Resource ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/resource/#see-also","text":"ClassRecord ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/resource/#resourceboto3_doc_link","text":"Show source in resource.py:33 Link to boto3 docs.","title":"Resource().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/resource/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/resource/#resourceiterate_types","text":"Show source in resource.py:40 Iterate over all type annotations from collections.","title":"Resource().iterate_types"},{"location":"mypy_boto3_builder/structures/resource/#signature_2","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/resource/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/","text":"ServicePackage Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServicePackage Auto-generated documentation for mypy_boto3_builder.structures.service_package module. ServicePackage Show source in service_package.py:26 Parsed Service package. Signature class ServicePackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], service_name : ServiceName , client : Client | None = None , service_resource : ServiceResource | None = None , waiters : Iterable [ Waiter ] = tuple (), paginators : Iterable [ Paginator ] = tuple (), typed_dicts : Iterable [ TypeTypedDict ] = tuple (), literals : Iterable [ TypeLiteral ] = tuple (), helper_functions : Iterable [ Function ] = tuple (), ): ... See also BasePackageData Function Package Paginator ServiceName TypeLiteral TypeTypedDict Waiter ServicePackage().client Show source in service_package.py:55 Service Client. Signature @property def client ( self ) -> Client : ... See also Client ServicePackage().extract_literals Show source in service_package.py:64 Extract literals from children. Signature def extract_literals ( self ) -> list [ TypeLiteral ]: ... See also TypeLiteral ServicePackage().extract_typed_dicts Show source in service_package.py:118 Extract typed dicts from children. Attempts to resolve circular typed dicts. Signature def extract_typed_dicts ( self ) -> list [ TypeTypedDict ]: ... See also TypeTypedDict ServicePackage().get_client_required_import_records Show source in service_package.py:190 Get import records for client.py[i] . Signature def get_client_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_doc_link Show source in service_package.py:328 Get link to local docs with anchor. Arguments file - HTML file name parts - Anchor parts Signature def get_doc_link ( self , file : Literal [ \"client\" , \"service_resource\" , \"waiters\" , \"paginators\" , \"type_defs\" , \"literals\" ], * parts : str ) -> str : ... ServicePackage().get_init_all_names Show source in service_package.py:173 Get __all__ statement names for __init__.py[i] . Signature def get_init_all_names ( self ) -> list [ str ]: ... ServicePackage().get_init_import_records Show source in service_package.py:138 Get import records for __init__.py[i] . Signature def get_init_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_literals_required_import_records Show source in service_package.py:293 Get import records for literals.py[i] . Signature def get_literals_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_local_doc_link Show source in service_package.py:353 Get link to local docs. Signature def get_local_doc_link ( self , service_name : ServiceName | None = None ) -> str : ... ServicePackage().get_paginator_required_import_records Show source in service_package.py:222 Get import records for paginator.py[i] . Signature def get_paginator_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_service_resource_required_import_records Show source in service_package.py:206 Get import records for service_resource.py[i] . Signature def get_service_resource_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_type_defs_required_import_records Show source in service_package.py:257 Get import records for type_defs.py[i] . Signature def get_type_defs_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().get_waiter_required_import_records Show source in service_package.py:242 Get import records for waiter.py[i] . Signature def get_waiter_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord ServicePackage().iterate_types Show source in service_package.py:126 Iterate over type annotations from Client, ServiceResource, waiters and paginators. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation ServicePackage().validate Show source in service_package.py:302 Validate parsed module. Finds duplicated names. Finds conflicts with reserved Python words. Signature def validate ( self ) -> None : ...","title":"ServicePackage"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackage","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServicePackage Auto-generated documentation for mypy_boto3_builder.structures.service_package module.","title":"ServicePackage"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackage_1","text":"Show source in service_package.py:26 Parsed Service package.","title":"ServicePackage"},{"location":"mypy_boto3_builder/structures/service_package/#signature","text":"class ServicePackage ( Package ): def __init__ ( self , data : type [ BasePackageData ], service_name : ServiceName , client : Client | None = None , service_resource : ServiceResource | None = None , waiters : Iterable [ Waiter ] = tuple (), paginators : Iterable [ Paginator ] = tuple (), typed_dicts : Iterable [ TypeTypedDict ] = tuple (), literals : Iterable [ TypeLiteral ] = tuple (), helper_functions : Iterable [ Function ] = tuple (), ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also","text":"BasePackageData Function Package Paginator ServiceName TypeLiteral TypeTypedDict Waiter","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageclient","text":"Show source in service_package.py:55 Service Client.","title":"ServicePackage().client"},{"location":"mypy_boto3_builder/structures/service_package/#signature_1","text":"@property def client ( self ) -> Client : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_1","text":"Client","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageextract_literals","text":"Show source in service_package.py:64 Extract literals from children.","title":"ServicePackage().extract_literals"},{"location":"mypy_boto3_builder/structures/service_package/#signature_2","text":"def extract_literals ( self ) -> list [ TypeLiteral ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_2","text":"TypeLiteral","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageextract_typed_dicts","text":"Show source in service_package.py:118 Extract typed dicts from children. Attempts to resolve circular typed dicts.","title":"ServicePackage().extract_typed_dicts"},{"location":"mypy_boto3_builder/structures/service_package/#signature_3","text":"def extract_typed_dicts ( self ) -> list [ TypeTypedDict ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_3","text":"TypeTypedDict","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_client_required_import_records","text":"Show source in service_package.py:190 Get import records for client.py[i] .","title":"ServicePackage().get_client_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_4","text":"def get_client_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_4","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_doc_link","text":"Show source in service_package.py:328 Get link to local docs with anchor.","title":"ServicePackage().get_doc_link"},{"location":"mypy_boto3_builder/structures/service_package/#arguments","text":"file - HTML file name parts - Anchor parts","title":"Arguments"},{"location":"mypy_boto3_builder/structures/service_package/#signature_5","text":"def get_doc_link ( self , file : Literal [ \"client\" , \"service_resource\" , \"waiters\" , \"paginators\" , \"type_defs\" , \"literals\" ], * parts : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_init_all_names","text":"Show source in service_package.py:173 Get __all__ statement names for __init__.py[i] .","title":"ServicePackage().get_init_all_names"},{"location":"mypy_boto3_builder/structures/service_package/#signature_6","text":"def get_init_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_init_import_records","text":"Show source in service_package.py:138 Get import records for __init__.py[i] .","title":"ServicePackage().get_init_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_7","text":"def get_init_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_5","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_literals_required_import_records","text":"Show source in service_package.py:293 Get import records for literals.py[i] .","title":"ServicePackage().get_literals_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_8","text":"def get_literals_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_6","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_local_doc_link","text":"Show source in service_package.py:353 Get link to local docs.","title":"ServicePackage().get_local_doc_link"},{"location":"mypy_boto3_builder/structures/service_package/#signature_9","text":"def get_local_doc_link ( self , service_name : ServiceName | None = None ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_paginator_required_import_records","text":"Show source in service_package.py:222 Get import records for paginator.py[i] .","title":"ServicePackage().get_paginator_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_10","text":"def get_paginator_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_7","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_service_resource_required_import_records","text":"Show source in service_package.py:206 Get import records for service_resource.py[i] .","title":"ServicePackage().get_service_resource_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_11","text":"def get_service_resource_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_8","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_type_defs_required_import_records","text":"Show source in service_package.py:257 Get import records for type_defs.py[i] .","title":"ServicePackage().get_type_defs_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_12","text":"def get_type_defs_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_9","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageget_waiter_required_import_records","text":"Show source in service_package.py:242 Get import records for waiter.py[i] .","title":"ServicePackage().get_waiter_required_import_records"},{"location":"mypy_boto3_builder/structures/service_package/#signature_13","text":"def get_waiter_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_10","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackageiterate_types","text":"Show source in service_package.py:126 Iterate over type annotations from Client, ServiceResource, waiters and paginators.","title":"ServicePackage().iterate_types"},{"location":"mypy_boto3_builder/structures/service_package/#signature_14","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_package/#see-also_11","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/service_package/#servicepackagevalidate","text":"Show source in service_package.py:302 Validate parsed module. Finds duplicated names. Finds conflicts with reserved Python words.","title":"ServicePackage().validate"},{"location":"mypy_boto3_builder/structures/service_package/#signature_15","text":"def validate ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/","text":"ServiceResource Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServiceResource Auto-generated documentation for mypy_boto3_builder.structures.service_resource module. ServiceResource Show source in service_resource.py:21 Boto3 ServiceResource. Signature class ServiceResource ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName , boto3_service_resource : Boto3ServiceResource , ): ... See also ClassRecord ServiceName ServiceResource().boto3_doc_link Show source in service_resource.py:87 Link to boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... ServiceResource().get_all_names Show source in service_resource.py:105 Get names for __all__ statement. Signature def get_all_names ( self ) -> list [ str ]: ... ServiceResource.get_class_name Show source in service_resource.py:62 Get class name for ServiceName. Signature @staticmethod def get_class_name ( service_name : ServiceName ) -> str : ... See also ServiceName ServiceResource().get_collections Show source in service_resource.py:116 Get a list of Service Resource collections. Signature def get_collections ( self ) -> list [ Collection ]: ... See also Collection ServiceResource().get_sub_resources Show source in service_resource.py:132 Get sub-resource in safe order. Returns A list of sub resources. Signature def get_sub_resources ( self ) -> list [ Resource ]: ... See also Resource ServiceResource().iterate_types Show source in service_resource.py:94 Iterate over type annotations for collections and sub-resources. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation","title":"ServiceResource"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresource","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / ServiceResource Auto-generated documentation for mypy_boto3_builder.structures.service_resource module.","title":"ServiceResource"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresource_1","text":"Show source in service_resource.py:21 Boto3 ServiceResource.","title":"ServiceResource"},{"location":"mypy_boto3_builder/structures/service_resource/#signature","text":"class ServiceResource ( ClassRecord ): def __init__ ( self , name : str , service_name : ServiceName , boto3_service_resource : Boto3ServiceResource , ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also","text":"ClassRecord ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceboto3_doc_link","text":"Show source in service_resource.py:87 Link to boto3 docs.","title":"ServiceResource().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_all_names","text":"Show source in service_resource.py:105 Get names for __all__ statement.","title":"ServiceResource().get_all_names"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_2","text":"def get_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_class_name","text":"Show source in service_resource.py:62 Get class name for ServiceName.","title":"ServiceResource.get_class_name"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_3","text":"@staticmethod def get_class_name ( service_name : ServiceName ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_collections","text":"Show source in service_resource.py:116 Get a list of Service Resource collections.","title":"ServiceResource().get_collections"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_4","text":"def get_collections ( self ) -> list [ Collection ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_2","text":"Collection","title":"See also"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceget_sub_resources","text":"Show source in service_resource.py:132 Get sub-resource in safe order.","title":"ServiceResource().get_sub_resources"},{"location":"mypy_boto3_builder/structures/service_resource/#returns","text":"A list of sub resources.","title":"Returns"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_5","text":"def get_sub_resources ( self ) -> list [ Resource ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_3","text":"Resource","title":"See also"},{"location":"mypy_boto3_builder/structures/service_resource/#serviceresourceiterate_types","text":"Show source in service_resource.py:94 Iterate over type annotations for collections and sub-resources.","title":"ServiceResource().iterate_types"},{"location":"mypy_boto3_builder/structures/service_resource/#signature_6","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/service_resource/#see-also_4","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/","text":"TypesAioBoto3Package Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / TypesAioBoto3Package Auto-generated documentation for mypy_boto3_builder.structures.types_aioboto3_package module. TypesAioBoto3Package Show source in types_aioboto3_package.py:17 Structure for types-aioboto3 module. Signature class TypesAioBoto3Package ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), ): ... See also BasePackageData Package ServiceName ServicePackage TypesAioBoto3Package().essential_service_names Show source in types_aioboto3_package.py:34 Service names marked as essential. Signature @property def essential_service_names ( self ) -> list [ ServiceName ]: ... See also ServiceName TypesAioBoto3Package().get_all_names Show source in types_aioboto3_package.py:69 Get names for __all__ directive. Signature def get_all_names ( self ) -> list [ str ]: ... TypesAioBoto3Package().get_session_required_import_records Show source in types_aioboto3_package.py:45 Get import reciords for session.py[i] . Signature def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ... See also ImportRecord","title":"TypesAioBoto3Package"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3package","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / TypesAioBoto3Package Auto-generated documentation for mypy_boto3_builder.structures.types_aioboto3_package module.","title":"TypesAioBoto3Package"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3package_1","text":"Show source in types_aioboto3_package.py:17 Structure for types-aioboto3 module.","title":"TypesAioBoto3Package"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature","text":"class TypesAioBoto3Package ( Package ): def __init__ ( self , data : type [ BasePackageData ], session_class : ClassRecord | None = None , service_names : Iterable [ ServiceName ] = tuple (), service_packages : Iterable [ ServicePackage ] = tuple (), ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also","text":"BasePackageData Package ServiceName ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageessential_service_names","text":"Show source in types_aioboto3_package.py:34 Service names marked as essential.","title":"TypesAioBoto3Package().essential_service_names"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_1","text":"@property def essential_service_names ( self ) -> list [ ServiceName ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageget_all_names","text":"Show source in types_aioboto3_package.py:69 Get names for __all__ directive.","title":"TypesAioBoto3Package().get_all_names"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_2","text":"def get_all_names ( self ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#typesaioboto3packageget_session_required_import_records","text":"Show source in types_aioboto3_package.py:45 Get import reciords for session.py[i] .","title":"TypesAioBoto3Package().get_session_required_import_records"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#signature_3","text":"def get_session_required_import_records ( self ) -> list [ ImportRecord ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/types_aioboto3_package/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/structures/waiter/","text":"Waiter Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Waiter Auto-generated documentation for mypy_boto3_builder.structures.waiter module. Waiter Show source in waiter.py:16 Boto3 client Waiter. Signature class Waiter ( ClassRecord ): def __init__ ( self , name : str , waiter_name : str , service_name : ServiceName ): ... See also ClassRecord ServiceName Waiter().boto3_doc_link Show source in waiter.py:34 Link to waiter boto3 docs. Signature @property def boto3_doc_link ( self ) -> str : ... Waiter().get_client_method Show source in waiter.py:41 Get get_waiter method for Client . Signature def get_client_method ( self ) -> Method : ... See also Method","title":"Waiter"},{"location":"mypy_boto3_builder/structures/waiter/#waiter","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Structures / Waiter Auto-generated documentation for mypy_boto3_builder.structures.waiter module.","title":"Waiter"},{"location":"mypy_boto3_builder/structures/waiter/#waiter_1","text":"Show source in waiter.py:16 Boto3 client Waiter.","title":"Waiter"},{"location":"mypy_boto3_builder/structures/waiter/#signature","text":"class Waiter ( ClassRecord ): def __init__ ( self , name : str , waiter_name : str , service_name : ServiceName ): ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/waiter/#see-also","text":"ClassRecord ServiceName","title":"See also"},{"location":"mypy_boto3_builder/structures/waiter/#waiterboto3_doc_link","text":"Show source in waiter.py:34 Link to waiter boto3 docs.","title":"Waiter().boto3_doc_link"},{"location":"mypy_boto3_builder/structures/waiter/#signature_1","text":"@property def boto3_doc_link ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/waiter/#waiterget_client_method","text":"Show source in waiter.py:41 Get get_waiter method for Client .","title":"Waiter().get_client_method"},{"location":"mypy_boto3_builder/structures/waiter/#signature_2","text":"def get_client_method ( self ) -> Method : ...","title":"Signature"},{"location":"mypy_boto3_builder/structures/waiter/#see-also_1","text":"Method","title":"See also"},{"location":"mypy_boto3_builder/stubs_static/","text":"Stubs Static Mypy_boto3_builder Index / Mypy Boto3 Builder / Stubs Static Auto-generated documentation for mypy_boto3_builder.stubs_static module.","title":"Stubs Static"},{"location":"mypy_boto3_builder/stubs_static/#stubs-static","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Stubs Static Auto-generated documentation for mypy_boto3_builder.stubs_static module.","title":"Stubs Static"},{"location":"mypy_boto3_builder/type_annotations/","text":"Type Annotations Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations Auto-generated documentation for mypy_boto3_builder.type_annotations module. Modules ExternalImport FakeAnnotation InternalImport RemoveArgument Type TypeAnnotation TypeClass TypeConstant TypeLiteral TypeSubscript TypeTypedDict","title":"Type Annotations"},{"location":"mypy_boto3_builder/type_annotations/#type-annotations","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations Auto-generated documentation for mypy_boto3_builder.type_annotations module.","title":"Type Annotations"},{"location":"mypy_boto3_builder/type_annotations/#modules","text":"ExternalImport FakeAnnotation InternalImport RemoveArgument Type TypeAnnotation TypeClass TypeConstant TypeLiteral TypeSubscript TypeTypedDict","title":"Modules"},{"location":"mypy_boto3_builder/type_annotations/external_import/","text":"ExternalImport Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / ExternalImport Auto-generated documentation for mypy_boto3_builder.type_annotations.external_import module. ExternalImport Show source in external_import.py:13 Wrapper for type annotations imported from 3rd party libraries, like boto3.service.Service . Arguments source - Module import string. name - Import name. alias - Import local name. safe - Whether import is wrapped in try-except. Signature class ExternalImport ( FakeAnnotation ): def __init__ ( self , source : ImportString , name : str = \"\" , alias : str = \"\" , safe : bool = False ) -> None : ... See also FakeAnnotation ImportString ExternalImport().copy Show source in external_import.py:69 Create a copy of type annotation wrapper. Signature def copy ( self : _R ) -> _R : ... ExternalImport().copy_from Show source in external_import.py:75 Copy all fileds from another instance. Signature def copy_from ( self : _R , other : _R ) -> None : ... ExternalImport().get_import_record Show source in external_import.py:63 Get import record required for using type annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord ExternalImport().import_record Show source in external_import.py:36 Get import record required for using type annotation. Signature @property def import_record ( self ) -> ImportRecord : ... See also ImportRecord ExternalImport().render Show source in external_import.py:54 Get string with local name to use. Returns Import record local name. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"ExternalImport"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimport","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / ExternalImport Auto-generated documentation for mypy_boto3_builder.type_annotations.external_import module.","title":"ExternalImport"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimport_1","text":"Show source in external_import.py:13 Wrapper for type annotations imported from 3rd party libraries, like boto3.service.Service .","title":"ExternalImport"},{"location":"mypy_boto3_builder/type_annotations/external_import/#arguments","text":"source - Module import string. name - Import name. alias - Import local name. safe - Whether import is wrapped in try-except.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature","text":"class ExternalImport ( FakeAnnotation ): def __init__ ( self , source : ImportString , name : str = \"\" , alias : str = \"\" , safe : bool = False ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/external_import/#see-also","text":"FakeAnnotation ImportString","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportcopy","text":"Show source in external_import.py:69 Create a copy of type annotation wrapper.","title":"ExternalImport().copy"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_1","text":"def copy ( self : _R ) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportcopy_from","text":"Show source in external_import.py:75 Copy all fileds from another instance.","title":"ExternalImport().copy_from"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_2","text":"def copy_from ( self : _R , other : _R ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportget_import_record","text":"Show source in external_import.py:63 Get import record required for using type annotation.","title":"ExternalImport().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_3","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/external_import/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportimport_record","text":"Show source in external_import.py:36 Get import record required for using type annotation.","title":"ExternalImport().import_record"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_4","text":"@property def import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/external_import/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/external_import/#externalimportrender","text":"Show source in external_import.py:54 Get string with local name to use.","title":"ExternalImport().render"},{"location":"mypy_boto3_builder/type_annotations/external_import/#returns","text":"Import record local name.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/external_import/#signature_5","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/","text":"FakeAnnotation Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / FakeAnnotation Auto-generated documentation for mypy_boto3_builder.type_annotations.fake_annotation module. FakeAnnotation Show source in fake_annotation.py:12 Parent class for all type annotation wrappers. Signature class FakeAnnotation ( ABC ): ... FakeAnnotation().add_child Show source in fake_annotation.py:65 Add new child to TypeSubscript or TypeTypedDict annotation. Signature def add_child ( self : _R , child : _R ) -> None : ... FakeAnnotation().copy Show source in fake_annotation.py:94 Create a copy of type annotation wrapper. Signature @abstractmethod def copy ( self : _R ) -> _R : ... FakeAnnotation().get_import_record Show source in fake_annotation.py:53 Get import record required for using type annotation. Signature @abstractmethod def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord FakeAnnotation().get_local_types Show source in fake_annotation.py:100 Get internal types generated by builder. Signature def get_local_types ( self ) -> list [ \"FakeAnnotation\" ]: ... FakeAnnotation().get_sort_key Show source in fake_annotation.py:38 Get string to sort annotations. Signature def get_sort_key ( self ) -> str : ... FakeAnnotation().is_dict Show source in fake_annotation.py:70 Whether type annotation is Dict or TypedDict . Signature def is_dict ( self ) -> bool : ... FakeAnnotation().is_list Show source in fake_annotation.py:82 Whether type annotation is List . Signature def is_list ( self ) -> bool : ... FakeAnnotation().is_literal Show source in fake_annotation.py:88 Whether type annotation is Literal . Signature def is_literal ( self ) -> bool : ... FakeAnnotation().is_typed_dict Show source in fake_annotation.py:76 Whether type annotation is TypedDict . Signature def is_typed_dict ( self ) -> bool : ... FakeAnnotation().iterate_types Show source in fake_annotation.py:59 Iterate over all used type annotations recursively including self. Signature def iterate_types ( self ) -> Iterator [ \"FakeAnnotation\" ]: ... FakeAnnotation().render Show source in fake_annotation.py:47 Render type annotation to a valid Python code for local usage. Signature @abstractmethod def render ( self , parent_name : str = \"\" ) -> str : ...","title":"FakeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotation","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / FakeAnnotation Auto-generated documentation for mypy_boto3_builder.type_annotations.fake_annotation module.","title":"FakeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotation_1","text":"Show source in fake_annotation.py:12 Parent class for all type annotation wrappers.","title":"FakeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature","text":"class FakeAnnotation ( ABC ): ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationadd_child","text":"Show source in fake_annotation.py:65 Add new child to TypeSubscript or TypeTypedDict annotation.","title":"FakeAnnotation().add_child"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_1","text":"def add_child ( self : _R , child : _R ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationcopy","text":"Show source in fake_annotation.py:94 Create a copy of type annotation wrapper.","title":"FakeAnnotation().copy"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_2","text":"@abstractmethod def copy ( self : _R ) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_import_record","text":"Show source in fake_annotation.py:53 Get import record required for using type annotation.","title":"FakeAnnotation().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_3","text":"@abstractmethod def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#see-also","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_local_types","text":"Show source in fake_annotation.py:100 Get internal types generated by builder.","title":"FakeAnnotation().get_local_types"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_4","text":"def get_local_types ( self ) -> list [ \"FakeAnnotation\" ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationget_sort_key","text":"Show source in fake_annotation.py:38 Get string to sort annotations.","title":"FakeAnnotation().get_sort_key"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_5","text":"def get_sort_key ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_dict","text":"Show source in fake_annotation.py:70 Whether type annotation is Dict or TypedDict .","title":"FakeAnnotation().is_dict"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_6","text":"def is_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_list","text":"Show source in fake_annotation.py:82 Whether type annotation is List .","title":"FakeAnnotation().is_list"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_7","text":"def is_list ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_literal","text":"Show source in fake_annotation.py:88 Whether type annotation is Literal .","title":"FakeAnnotation().is_literal"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_8","text":"def is_literal ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationis_typed_dict","text":"Show source in fake_annotation.py:76 Whether type annotation is TypedDict .","title":"FakeAnnotation().is_typed_dict"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_9","text":"def is_typed_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationiterate_types","text":"Show source in fake_annotation.py:59 Iterate over all used type annotations recursively including self.","title":"FakeAnnotation().iterate_types"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_10","text":"def iterate_types ( self ) -> Iterator [ \"FakeAnnotation\" ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#fakeannotationrender","text":"Show source in fake_annotation.py:47 Render type annotation to a valid Python code for local usage.","title":"FakeAnnotation().render"},{"location":"mypy_boto3_builder/type_annotations/fake_annotation/#signature_11","text":"@abstractmethod def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/","text":"InternalImport Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / InternalImport Auto-generated documentation for mypy_boto3_builder.type_annotations.internal_import module. AliasInternalImport Show source in internal_import.py:84 Internal import for safe local usages. Arguments name - Import name. service_name - Service that import belongs to. Signature class AliasInternalImport ( InternalImport ): def __init__ ( self , name : str , service_name : ServiceName | None = None ) -> None : ... See also InternalImport InternalImport Show source in internal_import.py:10 Wrapper for simple type annotations from this module. Arguments name - Import name. service_name - Service that import belongs to. module_name - Service module name. stringify - Convert type annotation to string to avoid circular deps. use_alias - Use name alias. Signature class InternalImport ( FakeAnnotation ): def __init__ ( self , name : str , service_name : ServiceName | None = None , module_name : ServiceModuleName = ServiceModuleName . service_resource , stringify : bool = True , use_alias : bool = False , ) -> None : ... See also FakeAnnotation ServiceModuleName InternalImport().copy Show source in internal_import.py:71 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"InternalImport\" : ... InternalImport.get_alias Show source in internal_import.py:36 Get import name alias. Arguments name - Original name. Returns Name prefixed with underscore. Signature @staticmethod def get_alias ( name : str ) -> str : ... InternalImport().get_import_record Show source in internal_import.py:65 Get import record required for using type annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord InternalImport().render Show source in internal_import.py:49 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"InternalImport"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimport","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / InternalImport Auto-generated documentation for mypy_boto3_builder.type_annotations.internal_import module.","title":"InternalImport"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#aliasinternalimport","text":"Show source in internal_import.py:84 Internal import for safe local usages.","title":"AliasInternalImport"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments","text":"name - Import name. service_name - Service that import belongs to.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature","text":"class AliasInternalImport ( InternalImport ): def __init__ ( self , name : str , service_name : ServiceName | None = None ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#see-also","text":"InternalImport","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimport_1","text":"Show source in internal_import.py:10 Wrapper for simple type annotations from this module.","title":"InternalImport"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments_1","text":"name - Import name. service_name - Service that import belongs to. module_name - Service module name. stringify - Convert type annotation to string to avoid circular deps. use_alias - Use name alias.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_1","text":"class InternalImport ( FakeAnnotation ): def __init__ ( self , name : str , service_name : ServiceName | None = None , module_name : ServiceModuleName = ServiceModuleName . service_resource , stringify : bool = True , use_alias : bool = False , ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#see-also_1","text":"FakeAnnotation ServiceModuleName","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportcopy","text":"Show source in internal_import.py:71 Create a copy of type annotation wrapper.","title":"InternalImport().copy"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_2","text":"def copy ( self ) -> \"InternalImport\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportget_alias","text":"Show source in internal_import.py:36 Get import name alias.","title":"InternalImport.get_alias"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#arguments_2","text":"name - Original name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#returns","text":"Name prefixed with underscore.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_3","text":"@staticmethod def get_alias ( name : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportget_import_record","text":"Show source in internal_import.py:65 Get import record required for using type annotation.","title":"InternalImport().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_4","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#internalimportrender","text":"Show source in internal_import.py:49 Render type annotation to a valid Python code for local usage.","title":"InternalImport().render"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#returns_1","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/internal_import/#signature_5","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/","text":"RemoveArgument Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / RemoveArgument Auto-generated documentation for mypy_boto3_builder.type_annotations.remove_argument module. RemoveArgument Show source in remove_argument.py:12 Annotation to mark argument for removal. Signature class RemoveArgument ( FakeAnnotation ): ... See also FakeAnnotation RemoveArgument().copy Show source in remove_argument.py:23 Not used. Signature def copy ( self : _R ) -> _R : ... RemoveArgument().get_import_record Show source in remove_argument.py:29 Not used. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord RemoveArgument().render Show source in remove_argument.py:17 Not used. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"RemoveArgument"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargument","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / RemoveArgument Auto-generated documentation for mypy_boto3_builder.type_annotations.remove_argument module.","title":"RemoveArgument"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargument_1","text":"Show source in remove_argument.py:12 Annotation to mark argument for removal.","title":"RemoveArgument"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature","text":"class RemoveArgument ( FakeAnnotation ): ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargumentcopy","text":"Show source in remove_argument.py:23 Not used.","title":"RemoveArgument().copy"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature_1","text":"def copy ( self : _R ) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargumentget_import_record","text":"Show source in remove_argument.py:29 Not used.","title":"RemoveArgument().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature_2","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#removeargumentrender","text":"Show source in remove_argument.py:17 Not used.","title":"RemoveArgument().render"},{"location":"mypy_boto3_builder/type_annotations/remove_argument/#signature_3","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type/","text":"Type Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / Type Auto-generated documentation for mypy_boto3_builder.type_annotations.type module. Type Show source in type.py:15 Predefined FakeAnnotation instances. Signature class Type : ... Type.get_optional Show source in type.py:55 Get Optional type annotation. Signature @classmethod def get_optional ( cls , wrapped : FakeAnnotation ) -> FakeAnnotation : ... See also FakeAnnotation","title":"Type"},{"location":"mypy_boto3_builder/type_annotations/type/#type","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / Type Auto-generated documentation for mypy_boto3_builder.type_annotations.type module.","title":"Type"},{"location":"mypy_boto3_builder/type_annotations/type/#type_1","text":"Show source in type.py:15 Predefined FakeAnnotation instances.","title":"Type"},{"location":"mypy_boto3_builder/type_annotations/type/#signature","text":"class Type : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type/#typeget_optional","text":"Show source in type.py:55 Get Optional type annotation.","title":"Type.get_optional"},{"location":"mypy_boto3_builder/type_annotations/type/#signature_1","text":"@classmethod def get_optional ( cls , wrapped : FakeAnnotation ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/","text":"TypeAnnotation Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeAnnotation Auto-generated documentation for mypy_boto3_builder.type_annotations.type_annotation module. TypeAnnotation Show source in type_annotation.py:13 Wrapper for typing type annotation. Arguments wrapped_type - Original type annotation as a string. Signature class TypeAnnotation ( FakeAnnotation ): def __init__ ( self , wrapped_type : str ) -> None : ... See also FakeAnnotation TypeAnnotation().copy Show source in type_annotation.py:106 Create a copy of type annotation wrapper. Signature def copy ( self : _R ) -> _R : ... TypeAnnotation().get_import_name Show source in type_annotation.py:61 Create a safe name for imported annotation. Signature def get_import_name ( self ) -> str : ... TypeAnnotation().get_import_record Show source in type_annotation.py:67 Create a safe Import Record for annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeAnnotation().has_fallback Show source in type_annotation.py:112 Whether type should be imported from typing_extensions as a py37 fallback. Signature def has_fallback ( self ) -> bool : ... TypeAnnotation().is_dict Show source in type_annotation.py:88 Whether annotation is a plain Dict. Signature def is_dict ( self ) -> bool : ... TypeAnnotation().is_list Show source in type_annotation.py:94 Whether annotation is a plain List. Signature def is_list ( self ) -> bool : ... TypeAnnotation().is_union Show source in type_annotation.py:100 Whether annotation is a Union. Signature def is_union ( self ) -> bool : ... TypeAnnotation().render Show source in type_annotation.py:52 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"TypeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotation","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeAnnotation Auto-generated documentation for mypy_boto3_builder.type_annotations.type_annotation module.","title":"TypeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotation_1","text":"Show source in type_annotation.py:13 Wrapper for typing type annotation.","title":"TypeAnnotation"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#arguments","text":"wrapped_type - Original type annotation as a string.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature","text":"class TypeAnnotation ( FakeAnnotation ): def __init__ ( self , wrapped_type : str ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationcopy","text":"Show source in type_annotation.py:106 Create a copy of type annotation wrapper.","title":"TypeAnnotation().copy"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_1","text":"def copy ( self : _R ) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationget_import_name","text":"Show source in type_annotation.py:61 Create a safe name for imported annotation.","title":"TypeAnnotation().get_import_name"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_2","text":"def get_import_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationget_import_record","text":"Show source in type_annotation.py:67 Create a safe Import Record for annotation.","title":"TypeAnnotation().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_3","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationhas_fallback","text":"Show source in type_annotation.py:112 Whether type should be imported from typing_extensions as a py37 fallback.","title":"TypeAnnotation().has_fallback"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_4","text":"def has_fallback ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_dict","text":"Show source in type_annotation.py:88 Whether annotation is a plain Dict.","title":"TypeAnnotation().is_dict"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_5","text":"def is_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_list","text":"Show source in type_annotation.py:94 Whether annotation is a plain List.","title":"TypeAnnotation().is_list"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_6","text":"def is_list ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationis_union","text":"Show source in type_annotation.py:100 Whether annotation is a Union.","title":"TypeAnnotation().is_union"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_7","text":"def is_union ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#typeannotationrender","text":"Show source in type_annotation.py:52 Render type annotation to a valid Python code for local usage.","title":"TypeAnnotation().render"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#returns","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_annotation/#signature_8","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_class/","text":"TypeClass Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeClass Auto-generated documentation for mypy_boto3_builder.type_annotations.type_class module. TypeClass Show source in type_class.py:11 Wrapper for classes like Paginator . Arguments value - Any Class. alias - Local name. Signature class TypeClass ( FakeAnnotation ): def __init__ ( self , value : type , alias : str = \"\" ) -> None : ... See also FakeAnnotation TypeClass().copy Show source in type_class.py:57 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"TypeClass\" : ... TypeClass().get_import_name Show source in type_class.py:36 Get name for import string. Signature def get_import_name ( self ) -> str : ... TypeClass().get_import_record Show source in type_class.py:42 Create an impoort record to insert where TypeClass is used. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeClass().render Show source in type_class.py:24 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"TypeClass"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclass","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeClass Auto-generated documentation for mypy_boto3_builder.type_annotations.type_class module.","title":"TypeClass"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclass_1","text":"Show source in type_class.py:11 Wrapper for classes like Paginator .","title":"TypeClass"},{"location":"mypy_boto3_builder/type_annotations/type_class/#arguments","text":"value - Any Class. alias - Local name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_class/#signature","text":"class TypeClass ( FakeAnnotation ): def __init__ ( self , value : type , alias : str = \"\" ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_class/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclasscopy","text":"Show source in type_class.py:57 Create a copy of type annotation wrapper.","title":"TypeClass().copy"},{"location":"mypy_boto3_builder/type_annotations/type_class/#signature_1","text":"def copy ( self ) -> \"TypeClass\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclassget_import_name","text":"Show source in type_class.py:36 Get name for import string.","title":"TypeClass().get_import_name"},{"location":"mypy_boto3_builder/type_annotations/type_class/#signature_2","text":"def get_import_name ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclassget_import_record","text":"Show source in type_class.py:42 Create an impoort record to insert where TypeClass is used.","title":"TypeClass().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_class/#signature_3","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_class/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_class/#typeclassrender","text":"Show source in type_class.py:24 Render type annotation to a valid Python code for local usage.","title":"TypeClass().render"},{"location":"mypy_boto3_builder/type_annotations/type_class/#returns","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_class/#signature_4","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_constant/","text":"TypeConstant Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeConstant Auto-generated documentation for mypy_boto3_builder.type_annotations.type_constant module. TypeConstant Show source in type_constant.py:8 Wrapper for constant like False or \"test\" . Arguments value - Constant value. Signature class TypeConstant ( FakeAnnotation ): def __init__ ( self , value : object ) -> None : ... See also FakeAnnotation TypeConstant().copy Show source in type_constant.py:37 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"TypeConstant\" : ... TypeConstant().get_import_record Show source in type_constant.py:31 Get empty import record, because constants do not require imports. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeConstant().is_none Show source in type_constant.py:43 Whether value is None. Signature def is_none ( self ) -> bool : ... TypeConstant().render Show source in type_constant.py:19 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"TypeConstant"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstant","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeConstant Auto-generated documentation for mypy_boto3_builder.type_annotations.type_constant module.","title":"TypeConstant"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstant_1","text":"Show source in type_constant.py:8 Wrapper for constant like False or \"test\" .","title":"TypeConstant"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#arguments","text":"value - Constant value.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature","text":"class TypeConstant ( FakeAnnotation ): def __init__ ( self , value : object ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantcopy","text":"Show source in type_constant.py:37 Create a copy of type annotation wrapper.","title":"TypeConstant().copy"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_1","text":"def copy ( self ) -> \"TypeConstant\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantget_import_record","text":"Show source in type_constant.py:31 Get empty import record, because constants do not require imports.","title":"TypeConstant().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_2","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#see-also_1","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantis_none","text":"Show source in type_constant.py:43 Whether value is None.","title":"TypeConstant().is_none"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_3","text":"def is_none ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#typeconstantrender","text":"Show source in type_constant.py:19 Render type annotation to a valid Python code for local usage.","title":"TypeConstant().render"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#returns","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_constant/#signature_4","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/","text":"TypeLiteral Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeLiteral Auto-generated documentation for mypy_boto3_builder.type_annotations.type_literal module. TypeLiteral Show source in type_literal.py:14 Wrapper for typing/typing_extensions.Literal type annotations like Literal['a', 'b'] . Arguments name - Literal name for non-inline. children - Literal values. inline - Render literal inline. Signature class TypeLiteral ( FakeAnnotation ): def __init__ ( self , name : str , children : Iterable [ str ]) -> None : ... See also FakeAnnotation TypeLiteral().add_child Show source in type_literal.py:110 Disabled method to avoid confusion. Signature def add_child ( self , child : FakeAnnotation ) -> None : ... See also FakeAnnotation TypeLiteral().copy Show source in type_literal.py:98 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"TypeLiteral\" : ... TypeLiteral().get_import_record Show source in type_literal.py:89 Get import record required for using type annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeLiteral().get_local_types Show source in type_literal.py:122 Get internal types generated by builder. Signature def get_local_types ( self ) -> list [ FakeAnnotation ]: ... See also FakeAnnotation TypeLiteral().get_sort_key Show source in type_literal.py:30 Sort literals by name. Signature def get_sort_key ( self ) -> str : ... TypeLiteral.get_typing_import_record Show source in type_literal.py:75 Get import record required for using Literal. Fallback to typing_extensions for py38-. Signature @staticmethod def get_typing_import_record () -> ImportRecord : ... See also ImportRecord TypeLiteral().inline Show source in type_literal.py:36 Whether Litereal should be rendered inline. 1-value literals are rendered inline. Signature @property def inline ( self ) -> bool : ... TypeLiteral().is_literal Show source in type_literal.py:104 Whether type annotation is Literal . Signature def is_literal ( self ) -> bool : ... TypeLiteral().is_same Show source in type_literal.py:116 Check if literals have the same children. Signature def is_same ( self , other : \"TypeLiteral\" ) -> bool : ... TypeLiteral().render Show source in type_literal.py:56 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ... TypeLiteral().render_children Show source in type_literal.py:69 Render literal children to representation. Signature def render_children ( self ) -> str : ...","title":"TypeLiteral"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteral","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeLiteral Auto-generated documentation for mypy_boto3_builder.type_annotations.type_literal module.","title":"TypeLiteral"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteral_1","text":"Show source in type_literal.py:14 Wrapper for typing/typing_extensions.Literal type annotations like Literal['a', 'b'] .","title":"TypeLiteral"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#arguments","text":"name - Literal name for non-inline. children - Literal values. inline - Render literal inline.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature","text":"class TypeLiteral ( FakeAnnotation ): def __init__ ( self , name : str , children : Iterable [ str ]) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteraladd_child","text":"Show source in type_literal.py:110 Disabled method to avoid confusion.","title":"TypeLiteral().add_child"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_1","text":"def add_child ( self , child : FakeAnnotation ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralcopy","text":"Show source in type_literal.py:98 Create a copy of type annotation wrapper.","title":"TypeLiteral().copy"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_2","text":"def copy ( self ) -> \"TypeLiteral\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_import_record","text":"Show source in type_literal.py:89 Get import record required for using type annotation.","title":"TypeLiteral().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_3","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_local_types","text":"Show source in type_literal.py:122 Get internal types generated by builder.","title":"TypeLiteral().get_local_types"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_4","text":"def get_local_types ( self ) -> list [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_3","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_sort_key","text":"Show source in type_literal.py:30 Sort literals by name.","title":"TypeLiteral().get_sort_key"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_5","text":"def get_sort_key ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralget_typing_import_record","text":"Show source in type_literal.py:75 Get import record required for using Literal. Fallback to typing_extensions for py38-.","title":"TypeLiteral.get_typing_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_6","text":"@staticmethod def get_typing_import_record () -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#see-also_4","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralinline","text":"Show source in type_literal.py:36 Whether Litereal should be rendered inline. 1-value literals are rendered inline.","title":"TypeLiteral().inline"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_7","text":"@property def inline ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralis_literal","text":"Show source in type_literal.py:104 Whether type annotation is Literal .","title":"TypeLiteral().is_literal"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_8","text":"def is_literal ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralis_same","text":"Show source in type_literal.py:116 Check if literals have the same children.","title":"TypeLiteral().is_same"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_9","text":"def is_same ( self , other : \"TypeLiteral\" ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralrender","text":"Show source in type_literal.py:56 Render type annotation to a valid Python code for local usage.","title":"TypeLiteral().render"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#returns","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_10","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#typeliteralrender_children","text":"Show source in type_literal.py:69 Render literal children to representation.","title":"TypeLiteral().render_children"},{"location":"mypy_boto3_builder/type_annotations/type_literal/#signature_11","text":"def render_children ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/","text":"TypeSubscript Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeSubscript Auto-generated documentation for mypy_boto3_builder.type_annotations.type_subscript module. TypeSubscript Show source in type_subscript.py:11 Wrapper for subscript type annotations, like List[str] . Arguments parent - Parent type annotation. children - Children type annotations. Signature class TypeSubscript ( FakeAnnotation ): def __init__ ( self , parent : FakeAnnotation , children : Iterable [ FakeAnnotation ] = () ) -> None : ... See also FakeAnnotation TypeSubscript().add_child Show source in type_subscript.py:58 Add new child to Substcript. Signature def add_child ( self , child : FakeAnnotation ) -> None : ... See also FakeAnnotation TypeSubscript().copy Show source in type_subscript.py:76 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"TypeSubscript\" : ... TypeSubscript().get_import_record Show source in type_subscript.py:44 Get import record required for using type annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeSubscript().get_local_types Show source in type_subscript.py:82 Get internal types generated by builder. Signature def get_local_types ( self ) -> list [ FakeAnnotation ]: ... See also FakeAnnotation TypeSubscript().is_dict Show source in type_subscript.py:64 Whether subscript parent is Dict. Signature def is_dict ( self ) -> bool : ... TypeSubscript().is_list Show source in type_subscript.py:70 Whether subscript parent is List. Signature def is_list ( self ) -> bool : ... TypeSubscript().iterate_types Show source in type_subscript.py:50 Extract type annotations from children. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation TypeSubscript().render Show source in type_subscript.py:31 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"TypeSubscript"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscript","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeSubscript Auto-generated documentation for mypy_boto3_builder.type_annotations.type_subscript module.","title":"TypeSubscript"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscript_1","text":"Show source in type_subscript.py:11 Wrapper for subscript type annotations, like List[str] .","title":"TypeSubscript"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#arguments","text":"parent - Parent type annotation. children - Children type annotations.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature","text":"class TypeSubscript ( FakeAnnotation ): def __init__ ( self , parent : FakeAnnotation , children : Iterable [ FakeAnnotation ] = () ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptadd_child","text":"Show source in type_subscript.py:58 Add new child to Substcript.","title":"TypeSubscript().add_child"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_1","text":"def add_child ( self , child : FakeAnnotation ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptcopy","text":"Show source in type_subscript.py:76 Create a copy of type annotation wrapper.","title":"TypeSubscript().copy"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_2","text":"def copy ( self ) -> \"TypeSubscript\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptget_import_record","text":"Show source in type_subscript.py:44 Get import record required for using type annotation.","title":"TypeSubscript().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_3","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_2","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptget_local_types","text":"Show source in type_subscript.py:82 Get internal types generated by builder.","title":"TypeSubscript().get_local_types"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_4","text":"def get_local_types ( self ) -> list [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_3","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptis_dict","text":"Show source in type_subscript.py:64 Whether subscript parent is Dict.","title":"TypeSubscript().is_dict"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_5","text":"def is_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptis_list","text":"Show source in type_subscript.py:70 Whether subscript parent is List.","title":"TypeSubscript().is_list"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_6","text":"def is_list ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptiterate_types","text":"Show source in type_subscript.py:50 Extract type annotations from children.","title":"TypeSubscript().iterate_types"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_7","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#see-also_4","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#typesubscriptrender","text":"Show source in type_subscript.py:31 Render type annotation to a valid Python code for local usage.","title":"TypeSubscript().render"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#returns","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_subscript/#signature_8","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/","text":"TypeTypedDict Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeTypedDict Auto-generated documentation for mypy_boto3_builder.type_annotations.type_typed_dict module. TypeTypedDict Show source in type_typed_dict.py:63 Wrapper for typing/typing_extensions.TypedDict type annotations. Arguments name - Type name. children - Typed dict attributes. docstring - Docstring for render. stringify - Convert type annotation to string to avoid circular deps. replace_with_dict - Render Dict[str, Any] instead to avoid circular dependencies. Signature class TypeTypedDict ( FakeAnnotation ): def __init__ ( self , name : str , children : Iterable [ TypedDictAttribute ] = (), docstring : str = \"\" , stringify : bool = False , replace_with_dict : Iterable [ str ] = tuple (), ) -> None : ... See also FakeAnnotation TypedDictAttribute TypeTypedDict().add_attribute Show source in type_typed_dict.py:166 Add new attribute to a dictionary. Arguments name - Argument name. type_annotation - Argument type annotation. required - Whether argument has to be set. Signature def add_attribute ( self , name : str , type_annotation : FakeAnnotation , required : bool ) -> None : ... See also FakeAnnotation TypeTypedDict().copy Show source in type_typed_dict.py:233 Create a copy of type annotation wrapper. Signature def copy ( self ) -> \"TypeTypedDict\" : ... TypeTypedDict().get_attribute Show source in type_typed_dict.py:112 Find attribute by name . Arguments name - Attribute name. Returns Found attribute. Signature def get_attribute ( self , name : str ) -> TypedDictAttribute : ... See also TypedDictAttribute TypeTypedDict().get_children_literals Show source in type_typed_dict.py:275 Extract required TypeLiteral list from attributes. Signature def get_children_literals ( self , processed : Iterable [ \"TypeTypedDict\" ] = tuple () ) -> set [ TypeLiteral ]: ... See also TypeLiteral TypeTypedDict().get_children_typed_dicts Show source in type_typed_dict.py:262 Extract required TypeTypedDict list from attributes. Signature def get_children_typed_dicts ( self ) -> set [ \"TypeTypedDict\" ]: ... TypeTypedDict().get_children_types Show source in type_typed_dict.py:253 Extract required type annotations from attributes. Signature def get_children_types ( self ) -> set [ FakeAnnotation ]: ... See also FakeAnnotation TypeTypedDict().get_import_record Show source in type_typed_dict.py:160 Get import record required for using type annotation. Signature def get_import_record ( self ) -> ImportRecord : ... See also ImportRecord TypeTypedDict().get_local_types Show source in type_typed_dict.py:324 Get internal types generated by builder. Signature def get_local_types ( self ) -> list [ FakeAnnotation ]: ... See also FakeAnnotation TypeTypedDict().get_optional Show source in type_typed_dict.py:223 Get a list of optional attributes. Signature def get_optional ( self ) -> list [ TypedDictAttribute ]: ... See also TypedDictAttribute TypeTypedDict().get_required Show source in type_typed_dict.py:213 Get a list of required attributes. Signature def get_required ( self ) -> list [ TypedDictAttribute ]: ... See also TypedDictAttribute TypeTypedDict().get_sort_key Show source in type_typed_dict.py:101 Sort Typed Dicts by name. Signature def get_sort_key ( self ) -> str : ... TypeTypedDict.get_typing_import_record Show source in type_typed_dict.py:146 Get import record required for using TypedDict. Fallback to typing_extensions for py38-. Signature @staticmethod def get_typing_import_record () -> ImportRecord : ... See also ImportRecord TypeTypedDict().has_both Show source in type_typed_dict.py:207 Whether TypedDict has both optional and required keys. Signature def has_both ( self ) -> bool : ... TypeTypedDict().has_optional Show source in type_typed_dict.py:189 Whether TypedDict has optional keys. Signature def has_optional ( self ) -> bool : ... TypeTypedDict().has_required Show source in type_typed_dict.py:198 Whether TypedDict has required keys. Signature def has_required ( self ) -> bool : ... TypeTypedDict().is_dict Show source in type_typed_dict.py:177 Always True as it is a TypedDict. Signature def is_dict ( self ) -> bool : ... TypeTypedDict().is_same Show source in type_typed_dict.py:245 Check whether typed dict attributes are the same as other . Signature def is_same ( self , other : \"TypeTypedDict\" ) -> bool : ... TypeTypedDict().is_stringified Show source in type_typed_dict.py:89 Whether TypedDict usage should be rendered as a string. Signature def is_stringified ( self ) -> bool : ... TypeTypedDict().is_typed_dict Show source in type_typed_dict.py:183 Always True as it is a TypedDict. Signature def is_typed_dict ( self ) -> bool : ... TypeTypedDict().iterate_children Show source in type_typed_dict.py:315 Iterate over children from required to optional. Signature def iterate_children ( self ) -> Iterator [ TypedDictAttribute ]: ... See also TypedDictAttribute TypeTypedDict().render Show source in type_typed_dict.py:128 Render type annotation to a valid Python code for local usage. Returns A string with a valid type annotation. Signature def render ( self , parent_name : str = \"\" ) -> str : ... TypeTypedDict().replace_self_references Show source in type_typed_dict.py:292 Replace self refenrences with Dict[str, Any] to avoid circular dependencies. Signature def replace_self_references ( self ) -> None : ... TypeTypedDict().requires_safe_render Show source in type_typed_dict.py:307 Whether TypedDict has reserved words and has to be rendered safely. Signature @property def requires_safe_render ( self ) -> bool : ... TypeTypedDict().stringify Show source in type_typed_dict.py:95 Render TypedDict usage as a string. Signature def stringify ( self ) -> None : ... TypeTypedDict().type_hint_annotations Show source in type_typed_dict.py:330 Type annotations list from arguments and return type with internal types. Signature @property def type_hint_annotations ( self ) -> list [ FakeAnnotation ]: ... See also FakeAnnotation TypedDictAttribute Show source in type_typed_dict.py:16 TypedDict attribute wrapper. Arguments name - Attribute name. type_annotation - Attribute type annotation. required - Whether the attribute has to be set. Signature class TypedDictAttribute : def __init__ ( self , name : str , type_annotation : FakeAnnotation , required : bool ) -> None : ... See also FakeAnnotation TypedDictAttribute().get_type_annotation Show source in type_typed_dict.py:31 Get wrapped for non-required type annotation or raw type annotation. Signature def get_type_annotation ( self ) -> FakeAnnotation : ... See also FakeAnnotation TypedDictAttribute().is_required Show source in type_typed_dict.py:56 Whether argument is required. Signature def is_required ( self ) -> bool : ... TypedDictAttribute().iterate_types Show source in type_typed_dict.py:49 Itera over type annotations. Signature def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ... See also FakeAnnotation TypedDictAttribute().render Show source in type_typed_dict.py:40 Render attribute to use in class-based TypedDict definition. Returns A string with argument definition. Signature def render ( self , parent_name : str = \"\" ) -> str : ...","title":"TypeTypedDict"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddict","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Annotations / TypeTypedDict Auto-generated documentation for mypy_boto3_builder.type_annotations.type_typed_dict module.","title":"TypeTypedDict"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddict_1","text":"Show source in type_typed_dict.py:63 Wrapper for typing/typing_extensions.TypedDict type annotations.","title":"TypeTypedDict"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments","text":"name - Type name. children - Typed dict attributes. docstring - Docstring for render. stringify - Convert type annotation to string to avoid circular deps. replace_with_dict - Render Dict[str, Any] instead to avoid circular dependencies.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature","text":"class TypeTypedDict ( FakeAnnotation ): def __init__ ( self , name : str , children : Iterable [ TypedDictAttribute ] = (), docstring : str = \"\" , stringify : bool = False , replace_with_dict : Iterable [ str ] = tuple (), ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also","text":"FakeAnnotation TypedDictAttribute","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictadd_attribute","text":"Show source in type_typed_dict.py:166 Add new attribute to a dictionary.","title":"TypeTypedDict().add_attribute"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments_1","text":"name - Argument name. type_annotation - Argument type annotation. required - Whether argument has to be set.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_1","text":"def add_attribute ( self , name : str , type_annotation : FakeAnnotation , required : bool ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_1","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictcopy","text":"Show source in type_typed_dict.py:233 Create a copy of type annotation wrapper.","title":"TypeTypedDict().copy"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_2","text":"def copy ( self ) -> \"TypeTypedDict\" : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_attribute","text":"Show source in type_typed_dict.py:112 Find attribute by name .","title":"TypeTypedDict().get_attribute"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments_2","text":"name - Attribute name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#returns","text":"Found attribute.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_3","text":"def get_attribute ( self , name : str ) -> TypedDictAttribute : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_2","text":"TypedDictAttribute","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_children_literals","text":"Show source in type_typed_dict.py:275 Extract required TypeLiteral list from attributes.","title":"TypeTypedDict().get_children_literals"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_4","text":"def get_children_literals ( self , processed : Iterable [ \"TypeTypedDict\" ] = tuple () ) -> set [ TypeLiteral ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_3","text":"TypeLiteral","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_children_typed_dicts","text":"Show source in type_typed_dict.py:262 Extract required TypeTypedDict list from attributes.","title":"TypeTypedDict().get_children_typed_dicts"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_5","text":"def get_children_typed_dicts ( self ) -> set [ \"TypeTypedDict\" ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_children_types","text":"Show source in type_typed_dict.py:253 Extract required type annotations from attributes.","title":"TypeTypedDict().get_children_types"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_6","text":"def get_children_types ( self ) -> set [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_4","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_import_record","text":"Show source in type_typed_dict.py:160 Get import record required for using type annotation.","title":"TypeTypedDict().get_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_7","text":"def get_import_record ( self ) -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_5","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_local_types","text":"Show source in type_typed_dict.py:324 Get internal types generated by builder.","title":"TypeTypedDict().get_local_types"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_8","text":"def get_local_types ( self ) -> list [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_6","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_optional","text":"Show source in type_typed_dict.py:223 Get a list of optional attributes.","title":"TypeTypedDict().get_optional"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_9","text":"def get_optional ( self ) -> list [ TypedDictAttribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_7","text":"TypedDictAttribute","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_required","text":"Show source in type_typed_dict.py:213 Get a list of required attributes.","title":"TypeTypedDict().get_required"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_10","text":"def get_required ( self ) -> list [ TypedDictAttribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_8","text":"TypedDictAttribute","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_sort_key","text":"Show source in type_typed_dict.py:101 Sort Typed Dicts by name.","title":"TypeTypedDict().get_sort_key"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_11","text":"def get_sort_key ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictget_typing_import_record","text":"Show source in type_typed_dict.py:146 Get import record required for using TypedDict. Fallback to typing_extensions for py38-.","title":"TypeTypedDict.get_typing_import_record"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_12","text":"@staticmethod def get_typing_import_record () -> ImportRecord : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_9","text":"ImportRecord","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_both","text":"Show source in type_typed_dict.py:207 Whether TypedDict has both optional and required keys.","title":"TypeTypedDict().has_both"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_13","text":"def has_both ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_optional","text":"Show source in type_typed_dict.py:189 Whether TypedDict has optional keys.","title":"TypeTypedDict().has_optional"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_14","text":"def has_optional ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicthas_required","text":"Show source in type_typed_dict.py:198 Whether TypedDict has required keys.","title":"TypeTypedDict().has_required"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_15","text":"def has_required ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_dict","text":"Show source in type_typed_dict.py:177 Always True as it is a TypedDict.","title":"TypeTypedDict().is_dict"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_16","text":"def is_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_same","text":"Show source in type_typed_dict.py:245 Check whether typed dict attributes are the same as other .","title":"TypeTypedDict().is_same"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_17","text":"def is_same ( self , other : \"TypeTypedDict\" ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_stringified","text":"Show source in type_typed_dict.py:89 Whether TypedDict usage should be rendered as a string.","title":"TypeTypedDict().is_stringified"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_18","text":"def is_stringified ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictis_typed_dict","text":"Show source in type_typed_dict.py:183 Always True as it is a TypedDict.","title":"TypeTypedDict().is_typed_dict"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_19","text":"def is_typed_dict ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictiterate_children","text":"Show source in type_typed_dict.py:315 Iterate over children from required to optional.","title":"TypeTypedDict().iterate_children"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_20","text":"def iterate_children ( self ) -> Iterator [ TypedDictAttribute ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_10","text":"TypedDictAttribute","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictrender","text":"Show source in type_typed_dict.py:128 Render type annotation to a valid Python code for local usage.","title":"TypeTypedDict().render"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#returns_1","text":"A string with a valid type annotation.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_21","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictreplace_self_references","text":"Show source in type_typed_dict.py:292 Replace self refenrences with Dict[str, Any] to avoid circular dependencies.","title":"TypeTypedDict().replace_self_references"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_22","text":"def replace_self_references ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictrequires_safe_render","text":"Show source in type_typed_dict.py:307 Whether TypedDict has reserved words and has to be rendered safely.","title":"TypeTypedDict().requires_safe_render"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_23","text":"@property def requires_safe_render ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddictstringify","text":"Show source in type_typed_dict.py:95 Render TypedDict usage as a string.","title":"TypeTypedDict().stringify"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_24","text":"def stringify ( self ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typetypeddicttype_hint_annotations","text":"Show source in type_typed_dict.py:330 Type annotations list from arguments and return type with internal types.","title":"TypeTypedDict().type_hint_annotations"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_25","text":"@property def type_hint_annotations ( self ) -> list [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_11","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattribute","text":"Show source in type_typed_dict.py:16 TypedDict attribute wrapper.","title":"TypedDictAttribute"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#arguments_3","text":"name - Attribute name. type_annotation - Attribute type annotation. required - Whether the attribute has to be set.","title":"Arguments"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_26","text":"class TypedDictAttribute : def __init__ ( self , name : str , type_annotation : FakeAnnotation , required : bool ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_12","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeget_type_annotation","text":"Show source in type_typed_dict.py:31 Get wrapped for non-required type annotation or raw type annotation.","title":"TypedDictAttribute().get_type_annotation"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_27","text":"def get_type_annotation ( self ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_13","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeis_required","text":"Show source in type_typed_dict.py:56 Whether argument is required.","title":"TypedDictAttribute().is_required"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_28","text":"def is_required ( self ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributeiterate_types","text":"Show source in type_typed_dict.py:49 Itera over type annotations.","title":"TypedDictAttribute().iterate_types"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_29","text":"def iterate_types ( self ) -> Iterator [ FakeAnnotation ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#see-also_14","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#typeddictattributerender","text":"Show source in type_typed_dict.py:40 Render attribute to use in class-based TypedDict definition.","title":"TypedDictAttribute().render"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#returns_2","text":"A string with argument definition.","title":"Returns"},{"location":"mypy_boto3_builder/type_annotations/type_typed_dict/#signature_30","text":"def render ( self , parent_name : str = \"\" ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/","text":"Type Maps Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps Auto-generated documentation for mypy_boto3_builder.type_maps module. Modules Docstring Type Map Literal Type Map Method Argument Map Method Type Map Shape Type Map Syntax Type Map Typed Dicts","title":"Type Maps"},{"location":"mypy_boto3_builder/type_maps/#type-maps","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps Auto-generated documentation for mypy_boto3_builder.type_maps module.","title":"Type Maps"},{"location":"mypy_boto3_builder/type_maps/#modules","text":"Docstring Type Map Literal Type Map Method Argument Map Method Type Map Shape Type Map Syntax Type Map Typed Dicts","title":"Modules"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/","text":"Docstring Type Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Docstring Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.docstring_type_map module. get_type_from_docstring Show source in docstring_type_map.py:458 Get type annotation for a string extracted from docstring. Arguments type_str - Type name in docstring. Raises ValueError - If type_str not found in map. Signature def get_type_from_docstring ( type_str : str ) -> FakeAnnotation : ... See also FakeAnnotation","title":"Docstring Type Map"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#docstring-type-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Docstring Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.docstring_type_map module.","title":"Docstring Type Map"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#get_type_from_docstring","text":"Show source in docstring_type_map.py:458 Get type annotation for a string extracted from docstring.","title":"get_type_from_docstring"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#arguments","text":"type_str - Type name in docstring.","title":"Arguments"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#raises","text":"ValueError - If type_str not found in map.","title":"Raises"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#signature","text":"def get_type_from_docstring ( type_str : str ) -> FakeAnnotation : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/docstring_type_map/#see-also","text":"FakeAnnotation","title":"See also"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/","text":"Literal Type Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Literal Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.literal_type_map module. get_literal_type_stub Show source in literal_type_map.py:9 Get stub type for botocore literal. Arguments service_name - Service name. literal_name - Target Literal name. Returns Literal children or None. Signature def get_literal_type_stub ( service_name : ServiceName , literal_name : str ) -> list [ str ] | None : ... See also ServiceName","title":"Literal Type Map"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#literal-type-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Literal Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.literal_type_map module.","title":"Literal Type Map"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#get_literal_type_stub","text":"Show source in literal_type_map.py:9 Get stub type for botocore literal.","title":"get_literal_type_stub"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#arguments","text":"service_name - Service name. literal_name - Target Literal name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#returns","text":"Literal children or None.","title":"Returns"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#signature","text":"def get_literal_type_stub ( service_name : ServiceName , literal_name : str ) -> list [ str ] | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/literal_type_map/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/","text":"Method Argument Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Method Argument Map Auto-generated documentation for mypy_boto3_builder.type_maps.method_argument_map module. get_method_arguments_stub Show source in method_argument_map.py:31 Get arguments list for method stub. Arguments service_name - Service name. class_name - Parent class name. method_name - Method name. Returns A list of arguments or None. Signature def get_method_arguments_stub ( service_name : ServiceName , class_name : str , method_name : str ) -> list [ Argument ] | None : ... See also ServiceName","title":"Method Argument Map"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#method-argument-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Method Argument Map Auto-generated documentation for mypy_boto3_builder.type_maps.method_argument_map module.","title":"Method Argument Map"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#get_method_arguments_stub","text":"Show source in method_argument_map.py:31 Get arguments list for method stub.","title":"get_method_arguments_stub"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#arguments","text":"service_name - Service name. class_name - Parent class name. method_name - Method name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#returns","text":"A list of arguments or None.","title":"Returns"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#signature","text":"def get_method_arguments_stub ( service_name : ServiceName , class_name : str , method_name : str ) -> list [ Argument ] | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/method_argument_map/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/type_maps/method_type_map/","text":"Method Type Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Method Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.method_type_map module. get_method_type_stub Show source in method_type_map.py:236 Get stub type for method argument. Arguments service_name - Service name. class_name - Parent class name. method_name - Method name. argument_name - Argument name. Returns Type annotation or None. Signature def get_method_type_stub ( service_name : ServiceName , class_name : str , method_name : str , argument_name : str ) -> FakeAnnotation | None : ... See also ServiceName","title":"Method Type Map"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#method-type-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Method Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.method_type_map module.","title":"Method Type Map"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#get_method_type_stub","text":"Show source in method_type_map.py:236 Get stub type for method argument.","title":"get_method_type_stub"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#arguments","text":"service_name - Service name. class_name - Parent class name. method_name - Method name. argument_name - Argument name.","title":"Arguments"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#returns","text":"Type annotation or None.","title":"Returns"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#signature","text":"def get_method_type_stub ( service_name : ServiceName , class_name : str , method_name : str , argument_name : str ) -> FakeAnnotation | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/method_type_map/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/","text":"Shape Type Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Shape Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.shape_type_map module. get_shape_type_stub Show source in shape_type_map.py:91 Get stub type for input botocore shape. Arguments shape_type_map - Map to lookup service_name - Service name shape_name - Target TypedDict name Returns Type annotation or None. Signature def get_shape_type_stub ( shape_type_maps : Iterable [ ShapeTypeMap ], service_name : ServiceName , shape_name : str ) -> FakeAnnotation | None : ... See also ServiceName ShapeTypeMap","title":"Shape Type Map"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#shape-type-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Shape Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.shape_type_map module.","title":"Shape Type Map"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#get_shape_type_stub","text":"Show source in shape_type_map.py:91 Get stub type for input botocore shape.","title":"get_shape_type_stub"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#arguments","text":"shape_type_map - Map to lookup service_name - Service name shape_name - Target TypedDict name","title":"Arguments"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#returns","text":"Type annotation or None.","title":"Returns"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#signature","text":"def get_shape_type_stub ( shape_type_maps : Iterable [ ShapeTypeMap ], service_name : ServiceName , shape_name : str ) -> FakeAnnotation | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/type_maps/shape_type_map/#see-also","text":"ServiceName ShapeTypeMap","title":"See also"},{"location":"mypy_boto3_builder/type_maps/syntax_type_map/","text":"Syntax Type Map Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Syntax Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.syntax_type_map module.","title":"Syntax Type Map"},{"location":"mypy_boto3_builder/type_maps/syntax_type_map/#syntax-type-map","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Syntax Type Map Auto-generated documentation for mypy_boto3_builder.type_maps.syntax_type_map module.","title":"Syntax Type Map"},{"location":"mypy_boto3_builder/type_maps/typed_dicts/","text":"Typed Dicts Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Typed Dicts Auto-generated documentation for mypy_boto3_builder.type_maps.typed_dicts module.","title":"Typed Dicts"},{"location":"mypy_boto3_builder/type_maps/typed_dicts/#typed-dicts","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Type Maps / Typed Dicts Auto-generated documentation for mypy_boto3_builder.type_maps.typed_dicts module.","title":"Typed Dicts"},{"location":"mypy_boto3_builder/utils/","text":"Utils Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils Auto-generated documentation for mypy_boto3_builder.utils module. Modules Boto3 Utils BotocoreChangelog Markdown NicePath PyPIManager Strings TypedDictSorter Version","title":"Utils"},{"location":"mypy_boto3_builder/utils/#utils","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils Auto-generated documentation for mypy_boto3_builder.utils module.","title":"Utils"},{"location":"mypy_boto3_builder/utils/#modules","text":"Boto3 Utils BotocoreChangelog Markdown NicePath PyPIManager Strings TypedDictSorter Version","title":"Modules"},{"location":"mypy_boto3_builder/utils/boto3_utils/","text":"Boto3 Utils Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Boto3 Utils Auto-generated documentation for mypy_boto3_builder.utils.boto3_utils module. get_boto3_client Show source in boto3_utils.py:16 Get boto3 client from session . Arguments session - boto3 session. service_name - ServiceName instance. Returns Boto3 client. Signature @cache def get_boto3_client ( session : Session , service_name : ServiceName ) -> BaseClient : ... See also ServiceName get_boto3_resource Show source in boto3_utils.py:31 Get boto3 resource from session . Arguments session - boto3 session. service_name - ServiceName instance. Returns Boto3 resource or None. Signature @cache def get_boto3_resource ( session : Session , service_name : ServiceName ) -> Boto3ServiceResource | None : ... See also ServiceName get_region_name_literal Show source in boto3_utils.py:49 Get Literal with all regions. Arguments session - boto3 session. service_names - All available service names. Returns TypeLiteral for region names. Signature def get_region_name_literal ( session : Session , service_names : Iterable [ ServiceName ] ) -> TypeLiteral | None : ... See also ServiceName","title":"Boto3 Utils"},{"location":"mypy_boto3_builder/utils/boto3_utils/#boto3-utils","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Boto3 Utils Auto-generated documentation for mypy_boto3_builder.utils.boto3_utils module.","title":"Boto3 Utils"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_boto3_client","text":"Show source in boto3_utils.py:16 Get boto3 client from session .","title":"get_boto3_client"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments","text":"session - boto3 session. service_name - ServiceName instance.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns","text":"Boto3 client.","title":"Returns"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature","text":"@cache def get_boto3_client ( session : Session , service_name : ServiceName ) -> BaseClient : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_boto3_resource","text":"Show source in boto3_utils.py:31 Get boto3 resource from session .","title":"get_boto3_resource"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments_1","text":"session - boto3 session. service_name - ServiceName instance.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns_1","text":"Boto3 resource or None.","title":"Returns"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_1","text":"@cache def get_boto3_resource ( session : Session , service_name : ServiceName ) -> Boto3ServiceResource | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also_1","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/utils/boto3_utils/#get_region_name_literal","text":"Show source in boto3_utils.py:49 Get Literal with all regions.","title":"get_region_name_literal"},{"location":"mypy_boto3_builder/utils/boto3_utils/#arguments_2","text":"session - boto3 session. service_names - All available service names.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/boto3_utils/#returns_2","text":"TypeLiteral for region names.","title":"Returns"},{"location":"mypy_boto3_builder/utils/boto3_utils/#signature_2","text":"def get_region_name_literal ( session : Session , service_names : Iterable [ ServiceName ] ) -> TypeLiteral | None : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/boto3_utils/#see-also_2","text":"ServiceName","title":"See also"},{"location":"mypy_boto3_builder/utils/botocore_changelog/","text":"BotocoreChangelog Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / BotocoreChangelog Auto-generated documentation for mypy_boto3_builder.utils.botocore_changelog module. BotocoreChangelog Show source in botocore_changelog.py:10 Parser for boto3 changelog. Signature class BotocoreChangelog : ... BotocoreChangelog().get_updated_service_names Show source in botocore_changelog.py:37 Get a list of service names updated in version release. Signature def get_updated_service_names ( self , version : str ) -> list [ str ]: ...","title":"BotocoreChangelog"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#botocorechangelog","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / BotocoreChangelog Auto-generated documentation for mypy_boto3_builder.utils.botocore_changelog module.","title":"BotocoreChangelog"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#botocorechangelog_1","text":"Show source in botocore_changelog.py:10 Parser for boto3 changelog.","title":"BotocoreChangelog"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#signature","text":"class BotocoreChangelog : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#botocorechangelogget_updated_service_names","text":"Show source in botocore_changelog.py:37 Get a list of service names updated in version release.","title":"BotocoreChangelog().get_updated_service_names"},{"location":"mypy_boto3_builder/utils/botocore_changelog/#signature_1","text":"def get_updated_service_names ( self , version : str ) -> list [ str ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/","text":"Markdown Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Markdown Auto-generated documentation for mypy_boto3_builder.utils.markdown module. Header Show source in markdown.py:12 Markdown header. Arguments title - Header title level - Header level, 1-6 Signature class Header : def __init__ ( self , title : str , level : int ) -> None : ... Header().anchor Show source in markdown.py:25 Anchor link for title. Signature @property def anchor ( self ) -> str : ... Header().render Show source in markdown.py:32 Render menu item to string. Signature def render ( self ) -> str : ... TableOfContents Show source in markdown.py:40 MarkDown Table of Contents. Arguments headers - List of headers Signature class TableOfContents : def __init__ ( self , headers : Iterable [ Header ]) -> None : ... See also Header TableOfContents.parse Show source in markdown.py:51 Parse table of Contents for MarkDown text. Arguments text - MarkDown text. Signature @classmethod def parse ( cls : type [ _R ], text : str ) -> _R : ... TableOfContents().render Show source in markdown.py:74 Render ToC to string. Signature def render ( self , max_level : int = 3 ) -> str : ... fix_pypi_headers Show source in markdown.py:86 Parse table of Contents for MarkDown text. Arguments text - MarkDown text. Signature def fix_pypi_headers ( text : str ) -> str : ...","title":"Markdown"},{"location":"mypy_boto3_builder/utils/markdown/#markdown","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Markdown Auto-generated documentation for mypy_boto3_builder.utils.markdown module.","title":"Markdown"},{"location":"mypy_boto3_builder/utils/markdown/#header","text":"Show source in markdown.py:12 Markdown header.","title":"Header"},{"location":"mypy_boto3_builder/utils/markdown/#arguments","text":"title - Header title level - Header level, 1-6","title":"Arguments"},{"location":"mypy_boto3_builder/utils/markdown/#signature","text":"class Header : def __init__ ( self , title : str , level : int ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#headeranchor","text":"Show source in markdown.py:25 Anchor link for title.","title":"Header().anchor"},{"location":"mypy_boto3_builder/utils/markdown/#signature_1","text":"@property def anchor ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#headerrender","text":"Show source in markdown.py:32 Render menu item to string.","title":"Header().render"},{"location":"mypy_boto3_builder/utils/markdown/#signature_2","text":"def render ( self ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontents","text":"Show source in markdown.py:40 MarkDown Table of Contents.","title":"TableOfContents"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_1","text":"headers - List of headers","title":"Arguments"},{"location":"mypy_boto3_builder/utils/markdown/#signature_3","text":"class TableOfContents : def __init__ ( self , headers : Iterable [ Header ]) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#see-also","text":"Header","title":"See also"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontentsparse","text":"Show source in markdown.py:51 Parse table of Contents for MarkDown text.","title":"TableOfContents.parse"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_2","text":"text - MarkDown text.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/markdown/#signature_4","text":"@classmethod def parse ( cls : type [ _R ], text : str ) -> _R : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#tableofcontentsrender","text":"Show source in markdown.py:74 Render ToC to string.","title":"TableOfContents().render"},{"location":"mypy_boto3_builder/utils/markdown/#signature_5","text":"def render ( self , max_level : int = 3 ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/markdown/#fix_pypi_headers","text":"Show source in markdown.py:86 Parse table of Contents for MarkDown text.","title":"fix_pypi_headers"},{"location":"mypy_boto3_builder/utils/markdown/#arguments_3","text":"text - MarkDown text.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/markdown/#signature_6","text":"def fix_pypi_headers ( text : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/nice_path/","text":"NicePath Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / NicePath Auto-generated documentation for mypy_boto3_builder.utils.nice_path module. NicePath Show source in nice_path.py:11 Path that represents it as relative to workdir. Signature class NicePath ( Path ): ... NicePath().walk Show source in nice_path.py:35 Walk files except for exclude . Yields Existing Path. Signature def walk ( self : _R , exclude : Iterable [ Path ] = tuple (), glob_pattern : str = \"**/*\" ) -> Iterator [ _R ]: ...","title":"NicePath"},{"location":"mypy_boto3_builder/utils/nice_path/#nicepath","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / NicePath Auto-generated documentation for mypy_boto3_builder.utils.nice_path module.","title":"NicePath"},{"location":"mypy_boto3_builder/utils/nice_path/#nicepath_1","text":"Show source in nice_path.py:11 Path that represents it as relative to workdir.","title":"NicePath"},{"location":"mypy_boto3_builder/utils/nice_path/#signature","text":"class NicePath ( Path ): ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/nice_path/#nicepathwalk","text":"Show source in nice_path.py:35 Walk files except for exclude .","title":"NicePath().walk"},{"location":"mypy_boto3_builder/utils/nice_path/#yields","text":"Existing Path.","title":"Yields"},{"location":"mypy_boto3_builder/utils/nice_path/#signature_1","text":"def walk ( self : _R , exclude : Iterable [ Path ] = tuple (), glob_pattern : str = \"**/*\" ) -> Iterator [ _R ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/pypi_manager/","text":"PyPIManager Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / PyPIManager Auto-generated documentation for mypy_boto3_builder.utils.pypi_manager module. PyPIManager Show source in pypi_manager.py:11 Version manager for PyPI packages. Arguments package - PyPI package name Signature class PyPIManager : def __init__ ( self , package : str ) -> None : ... PyPIManager().get_next_version Show source in pypi_manager.py:34 Get not existing version or closest not existing post-release. Arguments version - Target version Signature def get_next_version ( self , version : str ) -> str : ... PyPIManager().has_version Show source in pypi_manager.py:25 Check if version is already uploaded to PyPI. Arguments version - Target version Signature def has_version ( self , version : str ) -> bool : ...","title":"PyPIManager"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanager","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / PyPIManager Auto-generated documentation for mypy_boto3_builder.utils.pypi_manager module.","title":"PyPIManager"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanager_1","text":"Show source in pypi_manager.py:11 Version manager for PyPI packages.","title":"PyPIManager"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments","text":"package - PyPI package name","title":"Arguments"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature","text":"class PyPIManager : def __init__ ( self , package : str ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanagerget_next_version","text":"Show source in pypi_manager.py:34 Get not existing version or closest not existing post-release.","title":"PyPIManager().get_next_version"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments_1","text":"version - Target version","title":"Arguments"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature_1","text":"def get_next_version ( self , version : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/pypi_manager/#pypimanagerhas_version","text":"Show source in pypi_manager.py:25 Check if version is already uploaded to PyPI.","title":"PyPIManager().has_version"},{"location":"mypy_boto3_builder/utils/pypi_manager/#arguments_2","text":"version - Target version","title":"Arguments"},{"location":"mypy_boto3_builder/utils/pypi_manager/#signature_2","text":"def has_version ( self , version : str ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/","text":"Strings Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Strings Auto-generated documentation for mypy_boto3_builder.utils.strings module. get_anchor_link Show source in strings.py:96 Convert header to markdown anchor link. Signature def get_anchor_link ( text : str ) -> str : ... get_botocore_class_name Show source in strings.py:156 Get Botocore class name from Service metadata. Signature def get_botocore_class_name ( metadata : dict [ str , str ]) -> str : ... get_class_prefix Show source in strings.py:23 Get a valid Python class prefix from func_name . Arguments func_name - Any string. Returns String with a class prefix. Signature def get_class_prefix ( func_name : str ) -> str : ... get_line_with_indented Show source in strings.py:37 Get first line of the string with all indented lines. Fixes invalid unindent. Arguments input_string - Input string. Returns A string with first line and following indented lines. Signature def get_line_with_indented ( input_string : str , multi_first_line : bool = False ) -> str : ... get_short_docstring Show source in strings.py:110 Create a short docstring from boto3 documentation. Trims docstring to 300 chars. Removes double and triple backticks. Stops on **Request syntax** and :: . Ensures that backticks are closed. Replaces Text <link> with Text . Wraps docstring to 80 chars. Signature def get_short_docstring ( doc : str ) -> str : ... is_reserved Show source in strings.py:103 Check whether varialbe name conflicts with Python reserved names. Signature def is_reserved ( word : str ) -> bool : ...","title":"Strings"},{"location":"mypy_boto3_builder/utils/strings/#strings","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Strings Auto-generated documentation for mypy_boto3_builder.utils.strings module.","title":"Strings"},{"location":"mypy_boto3_builder/utils/strings/#get_anchor_link","text":"Show source in strings.py:96 Convert header to markdown anchor link.","title":"get_anchor_link"},{"location":"mypy_boto3_builder/utils/strings/#signature","text":"def get_anchor_link ( text : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/#get_botocore_class_name","text":"Show source in strings.py:156 Get Botocore class name from Service metadata.","title":"get_botocore_class_name"},{"location":"mypy_boto3_builder/utils/strings/#signature_1","text":"def get_botocore_class_name ( metadata : dict [ str , str ]) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/#get_class_prefix","text":"Show source in strings.py:23 Get a valid Python class prefix from func_name .","title":"get_class_prefix"},{"location":"mypy_boto3_builder/utils/strings/#arguments","text":"func_name - Any string.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/strings/#returns","text":"String with a class prefix.","title":"Returns"},{"location":"mypy_boto3_builder/utils/strings/#signature_2","text":"def get_class_prefix ( func_name : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/#get_line_with_indented","text":"Show source in strings.py:37 Get first line of the string with all indented lines. Fixes invalid unindent.","title":"get_line_with_indented"},{"location":"mypy_boto3_builder/utils/strings/#arguments_1","text":"input_string - Input string.","title":"Arguments"},{"location":"mypy_boto3_builder/utils/strings/#returns_1","text":"A string with first line and following indented lines.","title":"Returns"},{"location":"mypy_boto3_builder/utils/strings/#signature_3","text":"def get_line_with_indented ( input_string : str , multi_first_line : bool = False ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/#get_short_docstring","text":"Show source in strings.py:110 Create a short docstring from boto3 documentation. Trims docstring to 300 chars. Removes double and triple backticks. Stops on **Request syntax** and :: . Ensures that backticks are closed. Replaces Text <link> with Text . Wraps docstring to 80 chars.","title":"get_short_docstring"},{"location":"mypy_boto3_builder/utils/strings/#signature_4","text":"def get_short_docstring ( doc : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/strings/#is_reserved","text":"Show source in strings.py:103 Check whether varialbe name conflicts with Python reserved names.","title":"is_reserved"},{"location":"mypy_boto3_builder/utils/strings/#signature_5","text":"def is_reserved ( word : str ) -> bool : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/","text":"TypedDictSorter Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / TypedDictSorter Auto-generated documentation for mypy_boto3_builder.utils.typed_dict_sorter module. TypedDictSorter Show source in typed_dict_sorter.py:11 Sorter for TypeTypedDict to prevent import errors. Signature class TypedDictSorter : def __init__ ( self , typed_dicts : Iterable [ TypeTypedDict ]): ... See also TypeTypedDict TypedDictSorter().sort Show source in typed_dict_sorter.py:38 Sort items with TopologicalSorter or stringify as a fallback. Signature def sort ( self ) -> list [ TypeTypedDict ]: ... See also TypeTypedDict","title":"TypedDictSorter"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#typeddictsorter","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / TypedDictSorter Auto-generated documentation for mypy_boto3_builder.utils.typed_dict_sorter module.","title":"TypedDictSorter"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#typeddictsorter_1","text":"Show source in typed_dict_sorter.py:11 Sorter for TypeTypedDict to prevent import errors.","title":"TypedDictSorter"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#signature","text":"class TypedDictSorter : def __init__ ( self , typed_dicts : Iterable [ TypeTypedDict ]): ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#see-also","text":"TypeTypedDict","title":"See also"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#typeddictsortersort","text":"Show source in typed_dict_sorter.py:38 Sort items with TopologicalSorter or stringify as a fallback.","title":"TypedDictSorter().sort"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#signature_1","text":"def sort ( self ) -> list [ TypeTypedDict ]: ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/typed_dict_sorter/#see-also_1","text":"TypeTypedDict","title":"See also"},{"location":"mypy_boto3_builder/utils/version/","text":"Version Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Version Auto-generated documentation for mypy_boto3_builder.utils.version module. get_aioboto3_version Show source in version.py:63 Get aioboto3 package version. Signature def get_aioboto3_version () -> str : ... get_aiobotocore_version Show source in version.py:52 Get aiobotocore package version. Signature def get_aiobotocore_version () -> str : ... get_boto3_version Show source in version.py:45 Get boto3 package version. Signature def get_boto3_version () -> str : ... get_botocore_version Show source in version.py:38 Get botocore package version. Signature def get_botocore_version () -> str : ... get_builder_version Show source in version.py:13 Get program version. Signature def get_builder_version () -> str : ... get_max_build_version Show source in version.py:31 Get min version build version by bumping minor. Signature def get_max_build_version ( version : str ) -> str : ... get_min_build_version Show source in version.py:24 Get min version build version by setting micro to 0. Signature def get_min_build_version ( version : str ) -> str : ...","title":"Version"},{"location":"mypy_boto3_builder/utils/version/#version","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Utils / Version Auto-generated documentation for mypy_boto3_builder.utils.version module.","title":"Version"},{"location":"mypy_boto3_builder/utils/version/#get_aioboto3_version","text":"Show source in version.py:63 Get aioboto3 package version.","title":"get_aioboto3_version"},{"location":"mypy_boto3_builder/utils/version/#signature","text":"def get_aioboto3_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_aiobotocore_version","text":"Show source in version.py:52 Get aiobotocore package version.","title":"get_aiobotocore_version"},{"location":"mypy_boto3_builder/utils/version/#signature_1","text":"def get_aiobotocore_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_boto3_version","text":"Show source in version.py:45 Get boto3 package version.","title":"get_boto3_version"},{"location":"mypy_boto3_builder/utils/version/#signature_2","text":"def get_boto3_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_botocore_version","text":"Show source in version.py:38 Get botocore package version.","title":"get_botocore_version"},{"location":"mypy_boto3_builder/utils/version/#signature_3","text":"def get_botocore_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_builder_version","text":"Show source in version.py:13 Get program version.","title":"get_builder_version"},{"location":"mypy_boto3_builder/utils/version/#signature_4","text":"def get_builder_version () -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_max_build_version","text":"Show source in version.py:31 Get min version build version by bumping minor.","title":"get_max_build_version"},{"location":"mypy_boto3_builder/utils/version/#signature_5","text":"def get_max_build_version ( version : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/utils/version/#get_min_build_version","text":"Show source in version.py:24 Get min version build version by setting micro to 0.","title":"get_min_build_version"},{"location":"mypy_boto3_builder/utils/version/#signature_6","text":"def get_min_build_version ( version : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/","text":"Writers Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers Auto-generated documentation for mypy_boto3_builder.writers module. Modules Aioboto3 Processors Aiobotocore Processors PackageWriter Processors Utils","title":"Writers"},{"location":"mypy_boto3_builder/writers/#writers","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers Auto-generated documentation for mypy_boto3_builder.writers module.","title":"Writers"},{"location":"mypy_boto3_builder/writers/#modules","text":"Aioboto3 Processors Aiobotocore Processors PackageWriter Processors Utils","title":"Modules"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/","text":"Aioboto3 Processors Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aioboto3 Processors Auto-generated documentation for mypy_boto3_builder.writers.aioboto3_processors module. process_types_aioboto3 Show source in aioboto3_processors.py:19 Parse and write stubs package types-aioboto3 . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed TypesAioBoto3Package. Signature def process_types_aioboto3 ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> TypesAioBoto3Package : ... See also ServiceName TypesAioBoto3Package process_types_aioboto3_docs Show source in aioboto3_processors.py:88 Parse and write master package docs. Arguments session - boto3 session output_path - Package output path service_names - List of known service names Returns Parsed AioBotocoreStubsPackage. Signature def process_types_aioboto3_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> TypesAioBoto3Package : ... See also ServiceName TypesAioBoto3Package process_types_aioboto3_lite Show source in aioboto3_processors.py:53 Parse and write stubs package types-aioboto3-lite . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed AioBotocoreStubsPackage. Signature def process_types_aioboto3_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> TypesAioBoto3Package : ... See also ServiceName TypesAioBoto3Package","title":"Aioboto3 Processors"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#aioboto3-processors","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aioboto3 Processors Auto-generated documentation for mypy_boto3_builder.writers.aioboto3_processors module.","title":"Aioboto3 Processors"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3","text":"Show source in aioboto3_processors.py:19 Parse and write stubs package types-aioboto3 .","title":"process_types_aioboto3"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns","text":"Parsed TypesAioBoto3Package.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature","text":"def process_types_aioboto3 ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> TypesAioBoto3Package : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also","text":"ServiceName TypesAioBoto3Package","title":"See also"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3_docs","text":"Show source in aioboto3_processors.py:88 Parse and write master package docs.","title":"process_types_aioboto3_docs"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments_1","text":"session - boto3 session output_path - Package output path service_names - List of known service names","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns_1","text":"Parsed AioBotocoreStubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature_1","text":"def process_types_aioboto3_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> TypesAioBoto3Package : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also_1","text":"ServiceName TypesAioBoto3Package","title":"See also"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#process_types_aioboto3_lite","text":"Show source in aioboto3_processors.py:53 Parse and write stubs package types-aioboto3-lite .","title":"process_types_aioboto3_lite"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#arguments_2","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#returns_2","text":"Parsed AioBotocoreStubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#signature_2","text":"def process_types_aioboto3_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> TypesAioBoto3Package : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aioboto3_processors/#see-also_2","text":"ServiceName TypesAioBoto3Package","title":"See also"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/","text":"Aiobotocore Processors Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aiobotocore Processors Auto-generated documentation for mypy_boto3_builder.writers.aiobotocore_processors module. process_aiobotocore_stubs Show source in aiobotocore_processors.py:22 Parse and write stubs package aiobotocore-stubs . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed AioBotocoreStubsPackage. Signature def process_aiobotocore_stubs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> AioBotocoreStubsPackage : ... See also AioBotocoreStubsPackage ServiceName process_aiobotocore_stubs_docs Show source in aiobotocore_processors.py:95 Parse and write master package docs. Arguments session - boto3 session output_path - Package output path service_names - List of known service names Returns Parsed AioBotocoreStubsPackage. Signature def process_aiobotocore_stubs_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> AioBotocoreStubsPackage : ... See also AioBotocoreStubsPackage ServiceName process_aiobotocore_stubs_lite Show source in aiobotocore_processors.py:58 Parse and write stubs package aiobotocore-stubs-lite . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed AioBotocoreStubsPackage. Signature def process_aiobotocore_stubs_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> AioBotocoreStubsPackage : ... See also AioBotocoreStubsPackage ServiceName","title":"Aiobotocore Processors"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#aiobotocore-processors","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Aiobotocore Processors Auto-generated documentation for mypy_boto3_builder.writers.aiobotocore_processors module.","title":"Aiobotocore Processors"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs","text":"Show source in aiobotocore_processors.py:22 Parse and write stubs package aiobotocore-stubs .","title":"process_aiobotocore_stubs"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns","text":"Parsed AioBotocoreStubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature","text":"def process_aiobotocore_stubs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> AioBotocoreStubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also","text":"AioBotocoreStubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs_docs","text":"Show source in aiobotocore_processors.py:95 Parse and write master package docs.","title":"process_aiobotocore_stubs_docs"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments_1","text":"session - boto3 session output_path - Package output path service_names - List of known service names","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns_1","text":"Parsed AioBotocoreStubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature_1","text":"def process_aiobotocore_stubs_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> AioBotocoreStubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also_1","text":"AioBotocoreStubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#process_aiobotocore_stubs_lite","text":"Show source in aiobotocore_processors.py:58 Parse and write stubs package aiobotocore-stubs-lite .","title":"process_aiobotocore_stubs_lite"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#arguments_2","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#returns_2","text":"Parsed AioBotocoreStubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#signature_2","text":"def process_aiobotocore_stubs_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> AioBotocoreStubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/aiobotocore_processors/#see-also_2","text":"AioBotocoreStubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/package_writer/","text":"PackageWriter Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / PackageWriter Auto-generated documentation for mypy_boto3_builder.writers.package_writer module. PackageWriter Show source in package_writer.py:25 Writer for package static and template files. Arguments output_path - Output path generate_setup - Whether to generate setup files Signature class PackageWriter : def __init__ ( self , output_path : Path , generate_setup : bool = True ) -> None : ... PackageWriter().write_docs Show source in package_writer.py:205 Generate docs for a package. Signature def write_docs ( self , package : Package , templates_path : Path ) -> None : ... See also Package PackageWriter().write_package Show source in package_writer.py:175 Generate files for a package. Arguments package - Package to render templates_path - Path to Jinja templates for package static_files_path - Path to static files for package exclude_template_names - Do not render templates with these names Signature def write_package ( self , package : Package , templates_path : Path | None = None , static_files_path : Path | None = None , exclude_template_names : Sequence [ str ] = tuple (), ) -> None : ... See also Package PackageWriter().write_service_docs Show source in package_writer.py:326 Create service docs files. Arguments package - Service package. output_path - Path to output folder. Signature def write_service_docs ( self , package : ServicePackage , templates_path : Path ) -> None : ... See also ServicePackage PackageWriter().write_service_package Show source in package_writer.py:305 Create stubs files for service. Arguments package - Service package. Signature def write_service_package ( self , package : ServicePackage , templates_path : Path ) -> None : ... See also ServicePackage","title":"PackageWriter"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriter","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / PackageWriter Auto-generated documentation for mypy_boto3_builder.writers.package_writer module.","title":"PackageWriter"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriter_1","text":"Show source in package_writer.py:25 Writer for package static and template files.","title":"PackageWriter"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments","text":"output_path - Output path generate_setup - Whether to generate setup files","title":"Arguments"},{"location":"mypy_boto3_builder/writers/package_writer/#signature","text":"class PackageWriter : def __init__ ( self , output_path : Path , generate_setup : bool = True ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_docs","text":"Show source in package_writer.py:205 Generate docs for a package.","title":"PackageWriter().write_docs"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_1","text":"def write_docs ( self , package : Package , templates_path : Path ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also","text":"Package","title":"See also"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_package","text":"Show source in package_writer.py:175 Generate files for a package.","title":"PackageWriter().write_package"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_1","text":"package - Package to render templates_path - Path to Jinja templates for package static_files_path - Path to static files for package exclude_template_names - Do not render templates with these names","title":"Arguments"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_2","text":"def write_package ( self , package : Package , templates_path : Path | None = None , static_files_path : Path | None = None , exclude_template_names : Sequence [ str ] = tuple (), ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_1","text":"Package","title":"See also"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_service_docs","text":"Show source in package_writer.py:326 Create service docs files.","title":"PackageWriter().write_service_docs"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_2","text":"package - Service package. output_path - Path to output folder.","title":"Arguments"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_3","text":"def write_service_docs ( self , package : ServicePackage , templates_path : Path ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_2","text":"ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/writers/package_writer/#packagewriterwrite_service_package","text":"Show source in package_writer.py:305 Create stubs files for service.","title":"PackageWriter().write_service_package"},{"location":"mypy_boto3_builder/writers/package_writer/#arguments_3","text":"package - Service package.","title":"Arguments"},{"location":"mypy_boto3_builder/writers/package_writer/#signature_4","text":"def write_service_package ( self , package : ServicePackage , templates_path : Path ) -> None : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/package_writer/#see-also_3","text":"ServicePackage","title":"See also"},{"location":"mypy_boto3_builder/writers/processors/","text":"Processors Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Processors Auto-generated documentation for mypy_boto3_builder.writers.processors module. process_boto3_stubs Show source in processors.py:21 Parse and write stubs package boto3_stubs . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed Boto3StubsPackage. Signature def process_boto3_stubs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> Boto3StubsPackage : ... See also Boto3StubsPackage ServiceName process_boto3_stubs_docs Show source in processors.py:138 Parse and write master package docs. Arguments session - boto3 session output_path - Package output path service_names - List of known service names Returns Parsed Boto3StubsPackage. Signature def process_boto3_stubs_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> Boto3StubsPackage : ... See also Boto3StubsPackage ServiceName process_boto3_stubs_lite Show source in processors.py:58 Parse and write stubs package boto3-stubs-lite . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed Boto3StubsPackage. Signature def process_boto3_stubs_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> Boto3StubsPackage : ... See also Boto3StubsPackage ServiceName process_master Show source in processors.py:103 Parse and write master package mypy_boto3 . Arguments session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version Returns Parsed MasterPackage. Signature def process_master ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> MasterPackage : ... See also MasterPackage ServiceName","title":"Processors"},{"location":"mypy_boto3_builder/writers/processors/#processors","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Processors Auto-generated documentation for mypy_boto3_builder.writers.processors module.","title":"Processors"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs","text":"Show source in processors.py:21 Parse and write stubs package boto3_stubs .","title":"process_boto3_stubs"},{"location":"mypy_boto3_builder/writers/processors/#arguments","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/processors/#returns","text":"Parsed Boto3StubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/processors/#signature","text":"def process_boto3_stubs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> Boto3StubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/processors/#see-also","text":"Boto3StubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs_docs","text":"Show source in processors.py:138 Parse and write master package docs.","title":"process_boto3_stubs_docs"},{"location":"mypy_boto3_builder/writers/processors/#arguments_1","text":"session - boto3 session output_path - Package output path service_names - List of known service names","title":"Arguments"},{"location":"mypy_boto3_builder/writers/processors/#returns_1","text":"Parsed Boto3StubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/processors/#signature_1","text":"def process_boto3_stubs_docs ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ] ) -> Boto3StubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/processors/#see-also_1","text":"Boto3StubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/processors/#process_boto3_stubs_lite","text":"Show source in processors.py:58 Parse and write stubs package boto3-stubs-lite .","title":"process_boto3_stubs_lite"},{"location":"mypy_boto3_builder/writers/processors/#arguments_2","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/processors/#returns_2","text":"Parsed Boto3StubsPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/processors/#signature_2","text":"def process_boto3_stubs_lite ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> Boto3StubsPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/processors/#see-also_2","text":"Boto3StubsPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/processors/#process_master","text":"Show source in processors.py:103 Parse and write master package mypy_boto3 .","title":"process_master"},{"location":"mypy_boto3_builder/writers/processors/#arguments_3","text":"session - boto3 session output_path - Package output path service_names - List of known service names generate_setup - Generate ready-to-install or to-use package version - Package version","title":"Arguments"},{"location":"mypy_boto3_builder/writers/processors/#returns_3","text":"Parsed MasterPackage.","title":"Returns"},{"location":"mypy_boto3_builder/writers/processors/#signature_3","text":"def process_master ( session : Session , output_path : Path , service_names : Iterable [ ServiceName ], generate_setup : bool , version : str , ) -> MasterPackage : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/processors/#see-also_3","text":"MasterPackage ServiceName","title":"See also"},{"location":"mypy_boto3_builder/writers/utils/","text":"Utils Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Utils Auto-generated documentation for mypy_boto3_builder.writers.utils module. blackify Show source in utils.py:22 Format content with black if file_path is *.py or *.pyi . On error writes invalid content to file_path to check for errors. Arguments content - Python code to format. file_path - Target file path. Returns Formatted python code. Raises ValueError - If content is not a valid Python code. Signature def blackify ( content : str , file_path : Path ) -> str : ... blackify_markdown Show source in utils.py:160 Blackify python codeblocks. Signature def blackify_markdown ( text : str ) -> str : ... format_md Show source in utils.py:147 Format MarkDown with mdformat. Signature def format_md ( text : str ) -> str : ... insert_md_toc Show source in utils.py:123 Insert Table of Contents before the first second-level header. Signature def insert_md_toc ( text : str ) -> str : ... render_jinja2_template Show source in utils.py:93 Render Jinja2 template to a string. Arguments template_path - Relative path to template in TEMPLATES_PATH module - Module record. service_name - ServiceName instance. Returns A rendered template. Signature def render_jinja2_template ( template_path : Path , package : Package | None = None , service_name : ServiceName | None = None , ) -> str : ... sort_imports Show source in utils.py:55 Sort imports with isort . Arguments content - File content. module_name - Current module name. extension - py or pyi third_party - List of module names to be marked as third-party. Returns New file content. Signature def sort_imports ( content : str , module_name : str , extension : str = \"py\" , third_party : Iterable [ str ] = (), ) -> str : ...","title":"Utils"},{"location":"mypy_boto3_builder/writers/utils/#utils","text":"Mypy_boto3_builder Index / Mypy Boto3 Builder / Writers / Utils Auto-generated documentation for mypy_boto3_builder.writers.utils module.","title":"Utils"},{"location":"mypy_boto3_builder/writers/utils/#blackify","text":"Show source in utils.py:22 Format content with black if file_path is *.py or *.pyi . On error writes invalid content to file_path to check for errors.","title":"blackify"},{"location":"mypy_boto3_builder/writers/utils/#arguments","text":"content - Python code to format. file_path - Target file path.","title":"Arguments"},{"location":"mypy_boto3_builder/writers/utils/#returns","text":"Formatted python code.","title":"Returns"},{"location":"mypy_boto3_builder/writers/utils/#raises","text":"ValueError - If content is not a valid Python code.","title":"Raises"},{"location":"mypy_boto3_builder/writers/utils/#signature","text":"def blackify ( content : str , file_path : Path ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/utils/#blackify_markdown","text":"Show source in utils.py:160 Blackify python codeblocks.","title":"blackify_markdown"},{"location":"mypy_boto3_builder/writers/utils/#signature_1","text":"def blackify_markdown ( text : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/utils/#format_md","text":"Show source in utils.py:147 Format MarkDown with mdformat.","title":"format_md"},{"location":"mypy_boto3_builder/writers/utils/#signature_2","text":"def format_md ( text : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/utils/#insert_md_toc","text":"Show source in utils.py:123 Insert Table of Contents before the first second-level header.","title":"insert_md_toc"},{"location":"mypy_boto3_builder/writers/utils/#signature_3","text":"def insert_md_toc ( text : str ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/utils/#render_jinja2_template","text":"Show source in utils.py:93 Render Jinja2 template to a string.","title":"render_jinja2_template"},{"location":"mypy_boto3_builder/writers/utils/#arguments_1","text":"template_path - Relative path to template in TEMPLATES_PATH module - Module record. service_name - ServiceName instance.","title":"Arguments"},{"location":"mypy_boto3_builder/writers/utils/#returns_1","text":"A rendered template.","title":"Returns"},{"location":"mypy_boto3_builder/writers/utils/#signature_4","text":"def render_jinja2_template ( template_path : Path , package : Package | None = None , service_name : ServiceName | None = None , ) -> str : ...","title":"Signature"},{"location":"mypy_boto3_builder/writers/utils/#sort_imports","text":"Show source in utils.py:55 Sort imports with isort .","title":"sort_imports"},{"location":"mypy_boto3_builder/writers/utils/#arguments_2","text":"content - File content. module_name - Current module name. extension - py or pyi third_party - List of module names to be marked as third-party.","title":"Arguments"},{"location":"mypy_boto3_builder/writers/utils/#returns_2","text":"New file content.","title":"Returns"},{"location":"mypy_boto3_builder/writers/utils/#signature_5","text":"def sort_imports ( content : str , module_name : str , extension : str = \"py\" , third_party : Iterable [ str ] = (), ) -> str : ...","title":"Signature"},{"location":"types_boto3/types_boto3/","text":"Types Boto3 Mypy_boto3_builder Index / types_boto3 / Types Boto3 Auto-generated documentation for types_boto3.types_boto3 module.","title":"Types Boto3"},{"location":"types_boto3/types_boto3/#types-boto3","text":"Mypy_boto3_builder Index / types_boto3 / Types Boto3 Auto-generated documentation for types_boto3.types_boto3 module.","title":"Types Boto3"},{"location":"types_botocore/types_botocore/","text":"Types Botocore Mypy_boto3_builder Index / types_botocore / Types Botocore Auto-generated documentation for types_botocore.types_botocore module.","title":"Types Botocore"},{"location":"types_botocore/types_botocore/#types-botocore","text":"Mypy_boto3_builder Index / types_botocore / Types Botocore Auto-generated documentation for types_botocore.types_botocore module.","title":"Types Botocore"}]}